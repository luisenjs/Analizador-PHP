
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY AS BOOLEANO CADENA CLASS COMA COMENTARIO_BLOQUE COMENTARIO_LINEA CONJUNCION CONST CORCHETE_ABRE CORCHETE_CIERRA DECREMENTO DESPLAZAR_BITS_DER DESPLAZAR_BITS_IZQ DIFERENTE DISYUNCION DISYUNCION_EXC DIVISION DOS_PUNTOS ECHO ELSE ELSEIF ENTERO EXPLODE FGETS FIN_LINEA FLOTANTE FOR FOREACH FSCANF FUNCTION IDENTIDAD IDENTIFICADOR IF IGUAL IGUALDAD INCREMENTO INTERROGANTE LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NEGACION NEW NO_IDENTIDAD NULO OR PARENTESIS_ABRE PARENTESIS_CIERRA POP POTENCIA PRINT PRIVATE PROTECTED PUBLIC PUNTO PUSH READLINE RESTA RETURN SIGNO_DOLAR STACK STATIC STDIN SUMA VAR WHILE XORprograma : clase\n              | instrucciones\n  clase : CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRAinstrucciones : asignacion\n            | valor\n            | salida\n            | ingreso\n            | estructuras_datos\n            | estructuras_control\n            | funcion\n            | COMENTARIO_LINEA\n            | COMENTARIO_BLOQUE\n            | operaciones_arit\n            | operaciones_bits\n  salidas_posibles : datos\n                | decl_variable\n  salida : ECHO salidas_posibles FIN_LINEAsalida : PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEAsalida : PRINT salidas_posibles FIN_LINEAingreso : READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEAingreso : FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEAingreso : FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEAvariable_tipo : CONST\n                  | PRIVATE\n                  | PUBLIC\n                  | PROTECTED\n                  | STATIC\n                  | VAR\n  decl_variable : SIGNO_DOLAR IDENTIFICADOR\n                    | variable_tipo SIGNO_DOLAR IDENTIFICADORasignacion : decl_variable IGUAL valor FIN_LINEAvalor : datos\n            | NULO\n  datos : ENTERO\n          | FLOTANTE\n          | CADENA \n          | BOOLEANO\n  funcion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA\n  funcion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRAparametros : SIGNO_DOLAR IDENTIFICADOR\n                  | SIGNO_DOLAR IDENTIFICADOR COMA parametros\n   estructuras_datos : pila FIN_LINEA\n                        | arreglo FIN_LINEA\n  pila :  NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRAarreglo : ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA\n              | CORCHETE_ABRE CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA\n              | CORCHETE_ABRE elementos CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA\n              | CORCHETE_ABRE asociacion CORCHETE_CIERRA\n  asociacion : datos IGUAL MAYOR datos\n                  | datos IGUAL MAYOR datos COMA asociacion\n  elementos : datos\n                  | datos COMA elementos\n    operad_arit : SUMA\n                | RESTA\n                | MULTIPLICACION\n                | DIVISION\n                | POTENCIA\n                | MODULO\n  operad_logico : IGUALDAD\n                | IDENTIDAD\n                | DIFERENTE\n                | NO_IDENTIDAD\n                | MAYOR\n                | MAYOR_IGUAL\n                | MENOR\n                | MENOR_IGUAL\n                | AND\n                | OR\n                | XOR\n  operand_bits : CONJUNCION\n                  | DISYUNCION\n                  | DISYUNCION_EXC\n                  | DESPLAZAR_BITS_IZQ\n                  | DESPLAZAR_BITS_DER\n  operaciones_arit : salidas_posibles operad_arit salidas_posibles\n                | salidas_posibles operad_arit operaciones_arit\n  operaciones_bits : salidas_posibles operand_bits salidas_posibles\n                  | NEGACION salidas_posibles\n   operaciones_logicas : ENTERO operad_logico ENTERO\n                | FLOTANTE operad_logico FLOTANTE\n                | BOOLEANO\n                | decl_variable operad_logico decl_variable\n                | decl_variable operad_logico ENTERO\n                | decl_variable operad_logico FLOTANTE\n   estructuras_control : for\n                          | foreach\n                          | if_else\n                          | while\n                          \n   bloque : asignacion\n              | salida\n              | retorno\n              | estructuras_control\n  for : FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRAsentenciasAnidadas : instrucciones \n            | instrucciones sentenciasAnidadas\n  declaracionp :  decl_variable valorc valorc : menor\n              | mayormenor : MENOR_IGUAL ENTERO FIN_LINEAmayor : MAYOR_IGUAL ENTERO FIN_LINEAdeclaracion_s : decl_variable crecimiento\n                    | crecimiento decl_variable\n   crecimiento : INCREMENTO \n                | DECREMENTO retorno : RETURN salidas_posibles FIN_LINEAforeach : FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n              | FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n  while : WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA if_else : if_else_inicio if_else_fin if_else : if_else_inicio if_else_cuerpo if_else_finif_else_inicio : IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo : ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA\n                    |  ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo\n  if_else_fin : ELSE LLAVE_ABRE bloque LLAVE_CIERRA'
    
_lr_action_items = {'CLASS':([0,],[4,]),'COMENTARIO_LINEA':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,131,172,173,174,176,191,203,218,223,226,229,232,234,240,242,245,246,247,249,],[12,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,12,-17,-77,-78,-79,-19,-30,-112,-31,-18,-20,-21,12,-116,12,-38,12,12,12,-39,12,-95,-108,-110,-22,12,-109,]),'COMENTARIO_BLOQUE':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,131,172,173,174,176,191,203,218,223,226,229,232,234,240,242,245,246,247,249,],[13,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,13,-17,-77,-78,-79,-19,-30,-112,-31,-18,-20,-21,13,-116,13,-38,13,13,13,-39,13,-95,-108,-110,-22,13,-109,]),'NULO':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,54,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,131,155,156,157,158,159,160,161,162,163,164,165,166,172,173,174,176,191,203,218,223,226,229,232,234,240,242,245,246,247,249,],[18,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,18,-15,-16,-29,-42,-43,-80,-111,18,-17,-77,-78,-79,-19,-30,-112,-31,18,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-18,-20,-21,18,-116,18,-38,18,18,18,-39,18,-95,-108,-110,-22,18,-109,]),'ECHO':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,122,131,172,173,174,176,191,195,203,214,218,223,226,229,232,234,240,242,245,246,247,249,],[19,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,19,-17,-77,-78,-79,-19,-30,-112,19,-31,-18,-20,-21,19,-116,19,19,19,-38,19,19,19,-39,19,-95,-108,-110,-22,19,-109,]),'PRINT':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,122,131,172,173,174,176,191,195,203,214,218,223,226,229,232,234,240,242,245,246,247,249,],[21,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,21,-17,-77,-78,-79,-19,-30,-112,21,-31,-18,-20,-21,21,-116,21,21,21,-38,21,21,21,-39,21,-95,-108,-110,-22,21,-109,]),'READLINE':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,131,172,173,174,176,191,203,218,223,226,229,232,234,240,242,245,246,247,249,],[22,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,22,-17,-77,-78,-79,-19,-30,-112,-31,-18,-20,-21,22,-116,22,-38,22,22,22,-39,22,-95,-108,-110,-22,22,-109,]),'FGETS':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,131,172,173,174,176,191,203,218,223,226,229,232,234,240,242,245,246,247,249,],[24,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,24,-17,-77,-78,-79,-19,-30,-112,-31,-18,-20,-21,24,-116,24,-38,24,24,24,-39,24,-95,-108,-110,-22,24,-109,]),'FSCANF':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,131,172,173,174,176,191,203,218,223,226,229,232,234,240,242,245,246,247,249,],[25,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,25,-17,-77,-78,-79,-19,-30,-112,-31,-18,-20,-21,25,-116,25,-38,25,25,25,-39,25,-95,-108,-110,-22,25,-109,]),'FUNCTION':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,131,172,173,174,176,191,203,218,223,226,229,232,234,240,242,245,246,247,249,],[33,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,33,-17,-77,-78,-79,-19,-30,-112,-31,-18,-20,-21,33,-116,33,-38,33,33,33,-39,33,-95,-108,-110,-22,33,-109,]),'NEGACION':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,131,172,173,174,176,191,203,218,223,226,229,232,234,240,242,245,246,247,249,],[34,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,34,-17,-77,-78,-79,-19,-30,-112,-31,-18,-20,-21,34,-116,34,-38,34,34,34,-39,34,-95,-108,-110,-22,34,-109,]),'SIGNO_DOLAR':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,23,29,30,31,32,34,35,36,37,38,46,47,48,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,80,88,89,90,94,95,96,99,100,101,102,104,108,109,118,121,122,123,131,145,147,153,156,157,158,159,160,161,162,163,164,165,166,170,172,173,174,176,182,183,184,185,186,187,191,195,201,203,204,214,218,223,224,225,226,227,229,232,234,240,242,245,246,247,249,],[26,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,26,26,-36,-87,-88,-89,-90,26,81,-34,-35,-37,-23,-24,-25,-26,-27,-28,-15,-16,26,26,-55,-56,-57,-58,-59,-60,-72,-73,-74,-75,-76,26,-29,-42,-43,-80,26,26,-111,26,26,26,-17,-77,-78,-79,-19,138,-30,26,-112,26,26,-31,26,26,26,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,26,-18,-20,-21,26,26,-105,-106,-98,-99,-100,-116,26,217,26,138,26,-38,26,-101,-102,26,26,26,-39,26,-95,-108,-110,-22,26,-109,]),'ENTERO':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,23,29,30,31,32,34,36,37,38,41,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,80,83,90,95,96,99,100,101,102,104,109,116,121,123,131,144,153,155,156,157,158,159,160,161,162,163,164,165,166,168,170,172,173,174,176,188,189,191,203,205,218,223,226,229,232,234,240,242,245,246,247,249,],[36,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,36,36,-36,-87,-88,-89,-90,36,-34,-35,-37,36,36,-15,-16,36,36,-55,-56,-57,-58,-59,-60,-72,-73,-74,-75,-76,36,-29,-42,-43,-80,36,-111,126,36,-17,-77,-78,-79,-19,-30,36,-112,126,-31,36,36,36,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,196,199,-18,-20,-21,36,209,210,-116,36,36,-38,36,36,36,-39,36,-95,-108,-110,-22,36,-109,]),'FLOTANTE':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,23,29,30,31,32,34,36,37,38,41,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,80,83,90,95,96,99,100,101,102,104,109,116,121,123,131,144,153,155,156,157,158,159,160,161,162,163,164,165,166,169,170,172,173,174,176,191,203,205,218,223,226,229,232,234,240,242,245,246,247,249,],[37,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,37,37,-36,-87,-88,-89,-90,37,-34,-35,-37,37,37,-15,-16,37,37,-55,-56,-57,-58,-59,-60,-72,-73,-74,-75,-76,37,-29,-42,-43,-80,37,-111,127,37,-17,-77,-78,-79,-19,-30,37,-112,127,-31,37,37,37,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,197,200,-18,-20,-21,37,-116,37,37,-38,37,37,37,-39,37,-95,-108,-110,-22,37,-109,]),'CADENA':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,23,29,30,31,32,34,36,37,38,41,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,78,80,83,90,96,99,100,101,102,104,109,116,121,131,135,144,153,155,156,157,158,159,160,161,162,163,164,165,166,172,173,174,176,191,203,205,218,223,226,229,232,234,240,242,245,246,247,249,],[23,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,23,23,-36,-87,-88,-89,-90,23,-34,-35,-37,23,23,-15,-16,23,23,-55,-56,-57,-58,-59,-60,-72,-73,-74,-75,-76,23,105,-29,-42,-43,-80,23,-111,23,-17,-77,-78,-79,-19,-30,23,-112,-31,175,23,23,23,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-18,-20,-21,23,-116,23,23,-38,23,23,23,-39,23,-95,-108,-110,-22,23,-109,]),'BOOLEANO':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,23,29,30,31,32,34,36,37,38,41,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,80,83,90,95,96,99,100,101,102,104,109,116,121,123,131,144,153,155,156,157,158,159,160,161,162,163,164,165,166,172,173,174,176,191,203,205,218,223,226,229,232,234,240,242,245,246,247,249,],[38,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,38,38,-36,-87,-88,-89,-90,38,-34,-35,-37,38,38,-15,-16,38,38,-55,-56,-57,-58,-59,-60,-72,-73,-74,-75,-76,38,-29,-42,-43,-80,38,-111,128,38,-17,-77,-78,-79,-19,-30,38,-112,128,-31,38,38,38,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-18,-20,-21,38,-116,38,38,-38,38,38,38,-39,38,-95,-108,-110,-22,38,-109,]),'NEW':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,131,172,173,174,176,191,203,218,223,226,229,232,234,240,242,245,246,247,249,],[39,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,39,-17,-77,-78,-79,-19,-30,-112,-31,-18,-20,-21,39,-116,39,-38,39,39,39,-39,39,-95,-108,-110,-22,39,-109,]),'ARRAY':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,131,172,173,174,176,191,203,218,223,226,229,232,234,240,242,245,246,247,249,],[40,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,40,-17,-77,-78,-79,-19,-30,-112,-31,-18,-20,-21,40,-116,40,-38,40,40,40,-39,40,-95,-108,-110,-22,40,-109,]),'CORCHETE_ABRE':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,131,172,173,174,176,191,203,218,223,226,229,232,234,240,242,245,246,247,249,],[41,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,41,-17,-77,-78,-79,-19,-30,-112,-31,-18,-20,-21,41,-116,41,-38,41,41,41,-39,41,-95,-108,-110,-22,41,-109,]),'FOR':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,122,131,172,173,174,176,191,195,203,214,218,223,226,229,232,234,240,242,245,246,247,249,],[42,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,42,-17,-77,-78,-79,-19,-30,-112,42,-31,-18,-20,-21,42,-116,42,42,42,-38,42,42,42,-39,42,-95,-108,-110,-22,42,-109,]),'FOREACH':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,122,131,172,173,174,176,191,195,203,214,218,223,226,229,232,234,240,242,245,246,247,249,],[43,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,43,-17,-77,-78,-79,-19,-30,-112,43,-31,-18,-20,-21,43,-116,43,43,43,-38,43,43,43,-39,43,-95,-108,-110,-22,43,-109,]),'WHILE':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,122,131,172,173,174,176,191,195,203,214,218,223,226,229,232,234,240,242,245,246,247,249,],[45,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,45,-17,-77,-78,-79,-19,-30,-112,45,-31,-18,-20,-21,45,-116,45,45,45,-38,45,45,45,-39,45,-95,-108,-110,-22,45,-109,]),'CONST':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,23,29,30,31,32,34,36,37,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,80,88,89,90,94,95,96,99,100,101,102,104,109,118,121,122,123,131,145,147,153,156,157,158,159,160,161,162,163,164,165,166,170,172,173,174,176,182,183,184,185,186,187,191,195,203,214,218,223,224,225,226,227,229,232,234,240,242,245,246,247,249,],[46,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,46,46,-36,-87,-88,-89,-90,46,-34,-35,-37,-15,-16,46,46,-55,-56,-57,-58,-59,-60,-72,-73,-74,-75,-76,46,-29,-42,-43,-80,46,46,-111,46,46,46,-17,-77,-78,-79,-19,-30,46,-112,46,46,-31,46,46,46,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,46,-18,-20,-21,46,46,-105,-106,-98,-99,-100,-116,46,46,46,-38,46,-101,-102,46,46,46,-39,46,-95,-108,-110,-22,46,-109,]),'PRIVATE':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,23,29,30,31,32,34,36,37,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,80,88,89,90,94,95,96,99,100,101,102,104,109,118,121,122,123,131,145,147,153,156,157,158,159,160,161,162,163,164,165,166,170,172,173,174,176,182,183,184,185,186,187,191,195,203,214,218,223,224,225,226,227,229,232,234,240,242,245,246,247,249,],[47,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,47,47,-36,-87,-88,-89,-90,47,-34,-35,-37,-15,-16,47,47,-55,-56,-57,-58,-59,-60,-72,-73,-74,-75,-76,47,-29,-42,-43,-80,47,47,-111,47,47,47,-17,-77,-78,-79,-19,-30,47,-112,47,47,-31,47,47,47,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,47,-18,-20,-21,47,47,-105,-106,-98,-99,-100,-116,47,47,47,-38,47,-101,-102,47,47,47,-39,47,-95,-108,-110,-22,47,-109,]),'PUBLIC':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,23,29,30,31,32,34,36,37,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,80,88,89,90,94,95,96,99,100,101,102,104,109,118,121,122,123,131,145,147,153,156,157,158,159,160,161,162,163,164,165,166,170,172,173,174,176,182,183,184,185,186,187,191,195,203,214,218,223,224,225,226,227,229,232,234,240,242,245,246,247,249,],[48,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,48,48,-36,-87,-88,-89,-90,48,-34,-35,-37,-15,-16,48,48,-55,-56,-57,-58,-59,-60,-72,-73,-74,-75,-76,48,-29,-42,-43,-80,48,48,-111,48,48,48,-17,-77,-78,-79,-19,-30,48,-112,48,48,-31,48,48,48,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,48,-18,-20,-21,48,48,-105,-106,-98,-99,-100,-116,48,48,48,-38,48,-101,-102,48,48,48,-39,48,-95,-108,-110,-22,48,-109,]),'PROTECTED':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,23,29,30,31,32,34,36,37,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,80,88,89,90,94,95,96,99,100,101,102,104,109,118,121,122,123,131,145,147,153,156,157,158,159,160,161,162,163,164,165,166,170,172,173,174,176,182,183,184,185,186,187,191,195,203,214,218,223,224,225,226,227,229,232,234,240,242,245,246,247,249,],[49,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,49,49,-36,-87,-88,-89,-90,49,-34,-35,-37,-15,-16,49,49,-55,-56,-57,-58,-59,-60,-72,-73,-74,-75,-76,49,-29,-42,-43,-80,49,49,-111,49,49,49,-17,-77,-78,-79,-19,-30,49,-112,49,49,-31,49,49,49,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,49,-18,-20,-21,49,49,-105,-106,-98,-99,-100,-116,49,49,49,-38,49,-101,-102,49,49,49,-39,49,-95,-108,-110,-22,49,-109,]),'STATIC':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,23,29,30,31,32,34,36,37,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,80,88,89,90,94,95,96,99,100,101,102,104,109,118,121,122,123,131,145,147,153,156,157,158,159,160,161,162,163,164,165,166,170,172,173,174,176,182,183,184,185,186,187,191,195,203,214,218,223,224,225,226,227,229,232,234,240,242,245,246,247,249,],[50,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,50,50,-36,-87,-88,-89,-90,50,-34,-35,-37,-15,-16,50,50,-55,-56,-57,-58,-59,-60,-72,-73,-74,-75,-76,50,-29,-42,-43,-80,50,50,-111,50,50,50,-17,-77,-78,-79,-19,-30,50,-112,50,50,-31,50,50,50,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,50,-18,-20,-21,50,50,-105,-106,-98,-99,-100,-116,50,50,50,-38,50,-101,-102,50,50,50,-39,50,-95,-108,-110,-22,50,-109,]),'VAR':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,19,21,23,29,30,31,32,34,36,37,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,80,88,89,90,94,95,96,99,100,101,102,104,109,118,121,122,123,131,145,147,153,156,157,158,159,160,161,162,163,164,165,166,170,172,173,174,176,182,183,184,185,186,187,191,195,203,214,218,223,224,225,226,227,229,232,234,240,242,245,246,247,249,],[51,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,51,51,-36,-87,-88,-89,-90,51,-34,-35,-37,-15,-16,51,51,-55,-56,-57,-58,-59,-60,-72,-73,-74,-75,-76,51,-29,-42,-43,-80,51,51,-111,51,51,51,-17,-77,-78,-79,-19,-30,51,-112,51,51,-31,51,51,51,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,51,-18,-20,-21,51,51,-105,-106,-98,-99,-100,-116,51,51,51,-38,51,-101,-102,51,51,51,-39,51,-95,-108,-110,-22,51,-109,]),'IF':([0,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,96,99,100,101,102,104,109,121,122,131,172,173,174,176,191,195,203,214,218,223,226,229,232,234,240,242,245,246,247,249,],[52,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,52,-17,-77,-78,-79,-19,-30,-112,52,-31,-18,-20,-21,52,-116,52,52,52,-38,52,52,52,-39,52,-95,-108,-110,-22,52,-109,]),'$end':([1,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,99,100,101,102,104,109,121,131,171,172,173,174,191,218,232,240,242,245,246,249,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,-17,-77,-78,-79,-19,-30,-112,-31,-3,-18,-20,-21,-116,-38,-39,-95,-108,-110,-22,-109,]),'IDENTIFICADOR':([4,26,33,81,138,217,],[53,76,79,109,178,231,]),'LLAVE_CIERRA':([5,6,7,8,9,10,11,12,13,14,15,17,18,23,29,30,31,32,36,37,38,56,57,76,77,78,80,90,99,100,101,102,104,109,121,130,131,148,149,150,151,152,172,173,174,191,202,213,216,218,219,228,232,233,234,235,238,240,241,242,245,246,248,249,],[-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-33,-36,-87,-88,-89,-90,-34,-35,-37,-15,-16,-29,-42,-43,-80,-111,-17,-77,-78,-79,-19,-30,-112,171,-31,191,-91,-92,-93,-94,-18,-20,-21,-116,218,-107,230,-38,232,237,-39,240,-96,242,245,-95,-97,-108,-110,-22,249,-109,]),'IGUAL':([16,23,36,37,38,76,87,109,119,190,221,],[54,-36,-34,-35,-37,-29,117,-30,54,212,117,]),'SUMA':([16,17,20,23,36,37,38,56,57,76,100,109,],[-16,-15,60,-36,-34,-35,-37,-15,-16,-29,60,-30,]),'RESTA':([16,17,20,23,36,37,38,56,57,76,100,109,],[-16,-15,61,-36,-34,-35,-37,-15,-16,-29,61,-30,]),'MULTIPLICACION':([16,17,20,23,36,37,38,56,57,76,100,109,],[-16,-15,62,-36,-34,-35,-37,-15,-16,-29,62,-30,]),'DIVISION':([16,17,20,23,36,37,38,56,57,76,100,109,],[-16,-15,63,-36,-34,-35,-37,-15,-16,-29,63,-30,]),'POTENCIA':([16,17,20,23,36,37,38,56,57,76,100,109,],[-16,-15,64,-36,-34,-35,-37,-15,-16,-29,64,-30,]),'MODULO':([16,17,20,23,36,37,38,56,57,76,100,109,],[-16,-15,65,-36,-34,-35,-37,-15,-16,-29,65,-30,]),'CONJUNCION':([16,17,20,23,36,37,38,76,109,],[-16,-15,66,-36,-34,-35,-37,-29,-30,]),'DISYUNCION':([16,17,20,23,36,37,38,76,109,],[-16,-15,67,-36,-34,-35,-37,-29,-30,]),'DISYUNCION_EXC':([16,17,20,23,36,37,38,76,109,],[-16,-15,68,-36,-34,-35,-37,-29,-30,]),'DESPLAZAR_BITS_IZQ':([16,17,20,23,36,37,38,76,109,],[-16,-15,69,-36,-34,-35,-37,-29,-30,]),'DESPLAZAR_BITS_DER':([16,17,20,23,36,37,38,76,109,],[-16,-15,70,-36,-34,-35,-37,-29,-30,]),'FIN_LINEA':([18,23,27,28,36,37,38,55,56,57,72,76,84,97,98,109,111,114,115,132,133,134,139,140,141,192,209,210,239,],[-33,-36,77,78,-34,-35,-37,99,-15,-16,104,-29,-46,131,-32,-30,-45,-48,-50,172,173,174,-44,-47,-49,213,224,225,246,]),'PARENTESIS_CIERRA':([18,23,36,37,38,56,57,76,83,87,98,103,105,106,108,109,110,112,113,125,128,137,142,143,154,178,179,180,183,184,190,194,196,197,198,199,200,207,208,220,222,231,236,],[-33,-36,-34,-35,-37,-15,-16,-29,111,-53,-32,132,133,134,136,-30,139,140,141,167,-83,177,-53,-54,193,-40,-51,206,-105,-106,211,215,-81,-82,-84,-85,-86,-103,-104,-41,-52,239,243,]),'PARENTESIS_ABRE':([21,22,24,25,40,42,43,45,52,79,82,93,],[71,73,74,75,83,88,89,94,95,108,110,123,]),'COMA':([23,36,37,38,87,107,142,175,178,179,],[-36,-34,-35,-37,116,135,116,201,204,205,]),'CORCHETE_CIERRA':([23,36,37,38,41,85,86,87,142,143,179,222,],[-36,-34,-35,-37,84,114,115,-53,-53,-54,-51,-52,]),'STACK':([39,],[82,]),'ELSE':([44,91,230,237,244,],[92,92,-113,-114,-115,]),'ELSEIF':([44,230,237,],[93,-113,93,]),'LLAVE_ABRE':([53,92,136,167,177,193,206,211,215,243,],[96,122,176,195,203,214,223,226,229,247,]),'STDIN':([74,75,],[106,107,]),'AS':([76,109,120,],[-29,-30,147,]),'IGUALDAD':([76,109,124,126,127,129,],[-29,-30,156,156,156,156,]),'IDENTIDAD':([76,109,124,126,127,129,],[-29,-30,157,157,157,157,]),'DIFERENTE':([76,109,124,126,127,129,],[-29,-30,158,158,158,158,]),'NO_IDENTIDAD':([76,109,124,126,127,129,],[-29,-30,159,159,159,159,]),'MAYOR':([76,109,117,124,126,127,129,212,],[-29,-30,144,160,160,160,160,227,]),'MAYOR_IGUAL':([76,109,124,126,127,129,146,],[-29,-30,161,161,161,161,189,]),'MENOR':([76,109,124,126,127,129,],[-29,-30,162,162,162,162,]),'MENOR_IGUAL':([76,109,124,126,127,129,146,],[-29,-30,163,163,163,163,188,]),'AND':([76,109,124,126,127,129,],[-29,-30,164,164,164,164,]),'OR':([76,109,124,126,127,129,],[-29,-30,165,165,165,165,]),'XOR':([76,109,124,126,127,129,],[-29,-30,166,166,166,166,]),'INCREMENTO':([76,109,145,181,185,186,187,224,225,],[-29,-30,183,183,-98,-99,-100,-101,-102,]),'DECREMENTO':([76,109,145,181,185,186,187,224,225,],[-29,-30,184,184,-98,-99,-100,-101,-102,]),'RETURN':([122,195,214,],[153,153,153,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'clase':([0,],[2,]),'instrucciones':([0,96,176,203,223,226,229,234,247,],[3,130,202,219,234,234,238,234,234,]),'asignacion':([0,88,96,122,176,195,203,214,223,226,229,234,247,],[5,118,5,149,5,149,5,149,5,5,5,5,5,]),'valor':([0,54,96,155,176,203,223,226,229,234,247,],[6,97,6,194,6,6,6,6,6,6,6,]),'salida':([0,96,122,176,195,203,214,223,226,229,234,247,],[7,7,150,7,150,7,150,7,7,7,7,7,]),'ingreso':([0,96,176,203,223,226,229,234,247,],[8,8,8,8,8,8,8,8,8,]),'estructuras_datos':([0,96,176,203,223,226,229,234,247,],[9,9,9,9,9,9,9,9,9,]),'estructuras_control':([0,96,122,176,195,203,214,223,226,229,234,247,],[10,10,152,10,152,10,152,10,10,10,10,10,]),'funcion':([0,96,176,203,223,226,229,234,247,],[11,11,11,11,11,11,11,11,11,]),'operaciones_arit':([0,58,96,176,203,223,226,229,234,247,],[14,101,14,14,14,14,14,14,14,14,]),'operaciones_bits':([0,96,176,203,223,226,229,234,247,],[15,15,15,15,15,15,15,15,15,]),'decl_variable':([0,19,21,34,58,59,71,88,89,94,95,96,118,122,123,145,147,153,170,176,182,195,203,214,223,226,227,229,234,247,],[16,57,57,57,57,57,57,119,120,124,129,16,146,119,129,181,190,57,198,16,208,119,16,119,16,16,236,16,16,16,]),'datos':([0,19,21,34,41,54,58,59,71,83,96,116,144,153,155,176,203,205,223,226,229,234,247,],[17,56,56,56,87,98,56,56,56,87,17,142,179,56,98,17,17,221,17,17,17,17,17,]),'salidas_posibles':([0,19,21,34,58,59,71,96,153,176,203,223,226,229,234,247,],[20,55,72,80,100,102,103,20,192,20,20,20,20,20,20,20,]),'pila':([0,96,176,203,223,226,229,234,247,],[27,27,27,27,27,27,27,27,27,]),'arreglo':([0,96,176,203,223,226,229,234,247,],[28,28,28,28,28,28,28,28,28,]),'for':([0,96,122,176,195,203,214,223,226,229,234,247,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'foreach':([0,96,122,176,195,203,214,223,226,229,234,247,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'if_else':([0,96,122,176,195,203,214,223,226,229,234,247,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'while':([0,96,122,176,195,203,214,223,226,229,234,247,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'variable_tipo':([0,19,21,34,58,59,71,88,89,94,95,96,118,122,123,145,147,153,170,176,182,195,203,214,223,226,227,229,234,247,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'if_else_inicio':([0,96,122,176,195,203,214,223,226,229,234,247,],[44,44,44,44,44,44,44,44,44,44,44,44,]),'operad_arit':([20,100,],[58,58,]),'operand_bits':([20,],[59,]),'elementos':([41,83,116,],[85,112,143,]),'asociacion':([41,83,205,],[86,113,222,]),'if_else_fin':([44,91,],[90,121,]),'if_else_cuerpo':([44,237,],[91,244,]),'operaciones_logicas':([95,123,],[125,154,]),'parametros':([108,204,],[137,220,]),'declaracionp':([118,],[145,]),'bloque':([122,195,214,],[148,216,228,]),'retorno':([122,195,214,],[151,151,151,]),'operad_logico':([124,126,127,129,],[155,168,169,170,]),'declaracion_s':([145,],[180,]),'crecimiento':([145,181,],[182,207,]),'valorc':([146,],[185,]),'menor':([146,],[186,]),'mayor':([146,],[187,]),'sentenciasAnidadas':([223,226,234,247,],[233,235,241,248,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> clase','programa',1,'p_programa','main.py',5),
  ('programa -> instrucciones','programa',1,'p_programa','main.py',6),
  ('clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA','clase',5,'p_clase','main.py',10),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','main.py',13),
  ('instrucciones -> valor','instrucciones',1,'p_instrucciones','main.py',14),
  ('instrucciones -> salida','instrucciones',1,'p_instrucciones','main.py',15),
  ('instrucciones -> ingreso','instrucciones',1,'p_instrucciones','main.py',16),
  ('instrucciones -> estructuras_datos','instrucciones',1,'p_instrucciones','main.py',17),
  ('instrucciones -> estructuras_control','instrucciones',1,'p_instrucciones','main.py',18),
  ('instrucciones -> funcion','instrucciones',1,'p_instrucciones','main.py',19),
  ('instrucciones -> COMENTARIO_LINEA','instrucciones',1,'p_instrucciones','main.py',20),
  ('instrucciones -> COMENTARIO_BLOQUE','instrucciones',1,'p_instrucciones','main.py',21),
  ('instrucciones -> operaciones_arit','instrucciones',1,'p_instrucciones','main.py',22),
  ('instrucciones -> operaciones_bits','instrucciones',1,'p_instrucciones','main.py',23),
  ('salidas_posibles -> datos','salidas_posibles',1,'p_salidas_posibles','main.py',29),
  ('salidas_posibles -> decl_variable','salidas_posibles',1,'p_salidas_posibles','main.py',30),
  ('salida -> ECHO salidas_posibles FIN_LINEA','salida',3,'p_salida_forma1','main.py',34),
  ('salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA','salida',5,'p_salida_forma2','main.py',37),
  ('salida -> PRINT salidas_posibles FIN_LINEA','salida',3,'p_salida_forma3','main.py',40),
  ('ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma1','main.py',45),
  ('ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma2','main.py',48),
  ('ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA','ingreso',10,'p_ingreso_forma3','main.py',51),
  ('variable_tipo -> CONST','variable_tipo',1,'p_variable_tipo','main.py',56),
  ('variable_tipo -> PRIVATE','variable_tipo',1,'p_variable_tipo','main.py',57),
  ('variable_tipo -> PUBLIC','variable_tipo',1,'p_variable_tipo','main.py',58),
  ('variable_tipo -> PROTECTED','variable_tipo',1,'p_variable_tipo','main.py',59),
  ('variable_tipo -> STATIC','variable_tipo',1,'p_variable_tipo','main.py',60),
  ('variable_tipo -> VAR','variable_tipo',1,'p_variable_tipo','main.py',61),
  ('decl_variable -> SIGNO_DOLAR IDENTIFICADOR','decl_variable',2,'p_decl_variable','main.py',67),
  ('decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR','decl_variable',3,'p_decl_variable','main.py',68),
  ('asignacion -> decl_variable IGUAL valor FIN_LINEA','asignacion',4,'p_asignacion','main.py',71),
  ('valor -> datos','valor',1,'p_valor','main.py',74),
  ('valor -> NULO','valor',1,'p_valor','main.py',75),
  ('datos -> ENTERO','datos',1,'p_datos','main.py',79),
  ('datos -> FLOTANTE','datos',1,'p_datos','main.py',80),
  ('datos -> CADENA','datos',1,'p_datos','main.py',81),
  ('datos -> BOOLEANO','datos',1,'p_datos','main.py',82),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','funcion',7,'p_funcion','main.py',88),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','funcion',8,'p_funcion_parametros','main.py',92),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR','parametros',2,'p_parametros','main.py',95),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros','parametros',4,'p_parametros','main.py',96),
  ('estructuras_datos -> pila FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','main.py',102),
  ('estructuras_datos -> arreglo FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','main.py',103),
  ('pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA','pila',4,'p_pila','main.py',106),
  ('arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA','arreglo',3,'p_arreglo_vacio','main.py',109),
  ('arreglo -> CORCHETE_ABRE CORCHETE_CIERRA','arreglo',2,'p_arreglo_vacio','main.py',110),
  ('arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA','arreglo',4,'p_arreglo_indexado','main.py',114),
  ('arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA','arreglo',3,'p_arreglo_indexado','main.py',115),
  ('arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA','arreglo',4,'p_arreglo_asociativo','main.py',119),
  ('arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA','arreglo',3,'p_arreglo_asociativo','main.py',120),
  ('asociacion -> datos IGUAL MAYOR datos','asociacion',4,'p_asociacion','main.py',124),
  ('asociacion -> datos IGUAL MAYOR datos COMA asociacion','asociacion',6,'p_asociacion','main.py',125),
  ('elementos -> datos','elementos',1,'p_elementos','main.py',128),
  ('elementos -> datos COMA elementos','elementos',3,'p_elementos','main.py',129),
  ('operad_arit -> SUMA','operad_arit',1,'p_operad_aritmeticas','main.py',134),
  ('operad_arit -> RESTA','operad_arit',1,'p_operad_aritmeticas','main.py',135),
  ('operad_arit -> MULTIPLICACION','operad_arit',1,'p_operad_aritmeticas','main.py',136),
  ('operad_arit -> DIVISION','operad_arit',1,'p_operad_aritmeticas','main.py',137),
  ('operad_arit -> POTENCIA','operad_arit',1,'p_operad_aritmeticas','main.py',138),
  ('operad_arit -> MODULO','operad_arit',1,'p_operad_aritmeticas','main.py',139),
  ('operad_logico -> IGUALDAD','operad_logico',1,'p_operad_logicos','main.py',143),
  ('operad_logico -> IDENTIDAD','operad_logico',1,'p_operad_logicos','main.py',144),
  ('operad_logico -> DIFERENTE','operad_logico',1,'p_operad_logicos','main.py',145),
  ('operad_logico -> NO_IDENTIDAD','operad_logico',1,'p_operad_logicos','main.py',146),
  ('operad_logico -> MAYOR','operad_logico',1,'p_operad_logicos','main.py',147),
  ('operad_logico -> MAYOR_IGUAL','operad_logico',1,'p_operad_logicos','main.py',148),
  ('operad_logico -> MENOR','operad_logico',1,'p_operad_logicos','main.py',149),
  ('operad_logico -> MENOR_IGUAL','operad_logico',1,'p_operad_logicos','main.py',150),
  ('operad_logico -> AND','operad_logico',1,'p_operad_logicos','main.py',151),
  ('operad_logico -> OR','operad_logico',1,'p_operad_logicos','main.py',152),
  ('operad_logico -> XOR','operad_logico',1,'p_operad_logicos','main.py',153),
  ('operand_bits -> CONJUNCION','operand_bits',1,'p_operad_bits','main.py',159),
  ('operand_bits -> DISYUNCION','operand_bits',1,'p_operad_bits','main.py',160),
  ('operand_bits -> DISYUNCION_EXC','operand_bits',1,'p_operad_bits','main.py',161),
  ('operand_bits -> DESPLAZAR_BITS_IZQ','operand_bits',1,'p_operad_bits','main.py',162),
  ('operand_bits -> DESPLAZAR_BITS_DER','operand_bits',1,'p_operad_bits','main.py',163),
  ('operaciones_arit -> salidas_posibles operad_arit salidas_posibles','operaciones_arit',3,'p_operaciones_arit','main.py',169),
  ('operaciones_arit -> salidas_posibles operad_arit operaciones_arit','operaciones_arit',3,'p_operaciones_arit','main.py',170),
  ('operaciones_bits -> salidas_posibles operand_bits salidas_posibles','operaciones_bits',3,'p_operaciones_bits','main.py',174),
  ('operaciones_bits -> NEGACION salidas_posibles','operaciones_bits',2,'p_operaciones_bits','main.py',175),
  ('operaciones_logicas -> ENTERO operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','main.py',179),
  ('operaciones_logicas -> FLOTANTE operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','main.py',180),
  ('operaciones_logicas -> BOOLEANO','operaciones_logicas',1,'p_operaciones_logica','main.py',181),
  ('operaciones_logicas -> decl_variable operad_logico decl_variable','operaciones_logicas',3,'p_operaciones_logica','main.py',182),
  ('operaciones_logicas -> decl_variable operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','main.py',183),
  ('operaciones_logicas -> decl_variable operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','main.py',184),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','main.py',191),
  ('estructuras_control -> foreach','estructuras_control',1,'p_estructuras_control','main.py',192),
  ('estructuras_control -> if_else','estructuras_control',1,'p_estructuras_control','main.py',193),
  ('estructuras_control -> while','estructuras_control',1,'p_estructuras_control','main.py',194),
  ('bloque -> asignacion','bloque',1,'p_bloque','main.py',200),
  ('bloque -> salida','bloque',1,'p_bloque','main.py',201),
  ('bloque -> retorno','bloque',1,'p_bloque','main.py',202),
  ('bloque -> estructuras_control','bloque',1,'p_bloque','main.py',203),
  ('for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','for',9,'p_for','main.py',209),
  ('sentenciasAnidadas -> instrucciones','sentenciasAnidadas',1,'p_sentenciasAnidadas','main.py',212),
  ('sentenciasAnidadas -> instrucciones sentenciasAnidadas','sentenciasAnidadas',2,'p_sentenciasAnidadas','main.py',213),
  ('declaracionp -> decl_variable valorc','declaracionp',2,'p_declaracionM','main.py',217),
  ('valorc -> menor','valorc',1,'p_valorC','main.py',220),
  ('valorc -> mayor','valorc',1,'p_valorC','main.py',221),
  ('menor -> MENOR_IGUAL ENTERO FIN_LINEA','menor',3,'p_menor','main.py',224),
  ('mayor -> MAYOR_IGUAL ENTERO FIN_LINEA','mayor',3,'p_mayor','main.py',227),
  ('declaracion_s -> decl_variable crecimiento','declaracion_s',2,'p_declaracionsimple','main.py',230),
  ('declaracion_s -> crecimiento decl_variable','declaracion_s',2,'p_declaracionsimple','main.py',231),
  ('crecimiento -> INCREMENTO','crecimiento',1,'p_crecimiento','main.py',235),
  ('crecimiento -> DECREMENTO','crecimiento',1,'p_crecimiento','main.py',236),
  ('retorno -> RETURN salidas_posibles FIN_LINEA','retorno',3,'p_retorno','main.py',239),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',9,'p_foreach','main.py',244),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',12,'p_foreach','main.py',245),
  ('while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','while',9,'p_while','main.py',251),
  ('if_else -> if_else_inicio if_else_fin','if_else',2,'p_if_else_corto','main.py',256),
  ('if_else -> if_else_inicio if_else_cuerpo if_else_fin','if_else',3,'p_if_else_extendido','main.py',260),
  ('if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_inicio',7,'p_if_else_inicio','main.py',264),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_cuerpo',7,'p_if_else_cuerpo','main.py',268),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo','if_else_cuerpo',8,'p_if_else_cuerpo','main.py',269),
  ('if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA','if_else_fin',4,'p_if_else_fin','main.py',274),
]
