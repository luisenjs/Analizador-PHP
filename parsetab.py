
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY AS BACKSLASH BOOLEANO BREAK CADENA CLASS COMA COMENTARIO_BLOQUE COMENTARIO_LINEA CONJUNCION CONST CORCHETE_ABRE CORCHETE_CIERRA DECREMENTO DESPLAZAR_BITS_DER DESPLAZAR_BITS_IZQ DIFERENTE DISYUNCION DISYUNCION_EXC DIVISION ECHO ELSE ELSEIF ENTERO EXPLODE FGETS FIN_LINEA FLOTANTE FOR FOREACH FSCANF FUNCTION IDENTIDAD IDENTIFICADOR IF IGUAL IGUALDAD INCREMENTO LAMBDA LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NEGACION NEW NO_IDENTIDAD NULO OR PARENTESIS_ABRE PARENTESIS_CIERRA POP POTENCIA PRINT PRIVATE PROTECTED PUBLIC PUNTO PUSH READLINE RESTA RETURN SIGNO_DOLAR STACK STATIC STDIN SUMA VAR WHILE XOR variaslineas : programa\n                    | programa variaslineasprograma : clase\n              | instrucciones\n  clase : CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRAinstrucciones : asignacion\n            | salida\n            | ingreso\n            | estructuras_datos\n            | estructuras_control\n            | funcion\n            | COMENTARIO_LINEA\n            | COMENTARIO_BLOQUE\n            | operaciones FIN_LINEA\n            | declaracion_s FIN_LINEA\n            | BREAK FIN_LINEA\n  salidas_posibles : datos\n                | decl_variable\n  salida : ECHO salidas_posibles FIN_LINEAsalida : PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEAsalida : PRINT salidas_posibles FIN_LINEAingreso : READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEAingreso : FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEAingreso : FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEAvariable_tipo : CONST\n                  | PRIVATE\n                  | PUBLIC\n                  | PROTECTED\n                  | STATIC\n                  | VAR\n  decl_variable : SIGNO_DOLAR IDENTIFICADOR\n                    | variable_tipo SIGNO_DOLAR IDENTIFICADORasignacion : decl_variable IGUAL valor FIN_LINEA\n                | decl_variable IGUAL estructuras_datos\n                | decl_variable IGUAL poppila FIN_LINEA\n  valor : datos\n            | NULO\n            | decl_variable\n  datos : ENTERO\n          | FLOTANTE\n          | CADENA \n          | BOOLEANO\n  funcion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA\n  funcion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRAfuncionuso : IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA\n  parametros : SIGNO_DOLAR IDENTIFICADOR\n                  | SIGNO_DOLAR IDENTIFICADOR COMA parametros\n   estructuras_datos : pila FIN_LINEA\n                        | arreglo FIN_LINEA\n  pila :  NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRApoppila : decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA\n  pushpila : decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA\n            | decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA\n              | CORCHETE_ABRE CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA\n              | CORCHETE_ABRE elementos CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA\n              | CORCHETE_ABRE asociacion CORCHETE_CIERRA\n  asociacion : datos IGUAL MAYOR datos\n                  | datos IGUAL MAYOR datos COMA asociacion\n  elementos : datos\n                  | datos COMA elementos\n    operad_arit : SUMA\n                | RESTA\n                | MULTIPLICACION\n                | DIVISION\n                | POTENCIA\n                | MODULO\n  operad_logico : IGUALDAD\n                | IDENTIDAD\n                | DIFERENTE\n                | NO_IDENTIDAD\n                | MAYOR\n                | MAYOR_IGUAL\n                | MENOR\n                | MENOR_IGUAL\n                | AND\n                | OR\n                | XOR\n  operand_bits : CONJUNCION\n                  | DISYUNCION\n                  | DISYUNCION_EXC\n                  | DESPLAZAR_BITS_IZQ\n                  | DESPLAZAR_BITS_DER\n  operaciones_arit : salidas_posibles operad_arit salidas_posibles\n                | salidas_posibles operad_arit operaciones_arit\n  operaciones_bits : salidas_posibles operand_bits salidas_posibles\n                  | NEGACION salidas_posibles\n   operaciones_logicas : ENTERO operad_logico ENTERO\n                | FLOTANTE operad_logico FLOTANTE\n                | BOOLEANO\n                | decl_variable operad_logico decl_variable\n                | decl_variable operad_logico ENTERO\n                | decl_variable operad_logico FLOTANTE\n  operaciones : operaciones_logicas\n                  | operaciones_arit\n                  | operaciones_bits\n                  | pushpila\n                  | poppila\n  paraCalculos : ENTERO\n                  | FLOTANTE\n                  | decl_variablecombinarOp : operad_arit paraCalculos\n                | operad_arit paraCalculos combinarOpopAritVar : paraCalculos combinarOp estructuras_control : for\n                          | foreach\n                          | if_else\n                          | while\n   bloque : instrucciones\n              | retorno\n  for : FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRAsentenciasAnidadas : instrucciones \n            | instrucciones sentenciasAnidadas\n  declaracionp :  decl_variable valorc valorc : menor\n              | mayormenor : MENOR_IGUAL ENTERO FIN_LINEAmayor : MAYOR_IGUAL ENTERO FIN_LINEAdeclaracion_s : decl_variable crecimiento\n                    | crecimiento decl_variable\n   crecimiento : INCREMENTO \n                | DECREMENTO retorno : RETURN salidas_posibles FIN_LINEA\n              | RETURN operaciones FIN_LINEA\n  foreach : FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n              | FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n  while : WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA if_else : if_else_inicio if_else_fin if_else : if_else_inicio if_else_cuerpo if_else_finif_else_inicio : IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo : ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA\n                    |  ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo\n  if_else_fin : ELSE LLAVE_ABRE bloque LLAVE_CIERRA'
    
_lr_action_items = {'CLASS':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,130,139,144,161,174,175,201,208,209,210,224,253,267,275,277,280,281,284,],[5,5,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,-34,-19,-21,-131,-33,-35,-5,-20,-22,-23,-135,-43,-44,-113,-127,-129,-24,-128,]),'COMENTARIO_LINEA':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[12,12,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,12,-34,-19,-21,-131,12,-33,-35,-5,-20,-22,-23,12,-135,12,12,12,-43,12,12,12,-44,12,-113,-127,-129,-24,12,-128,]),'COMENTARIO_BLOQUE':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[13,13,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,13,-34,-19,-21,-131,13,-33,-35,-5,-20,-22,-23,13,-135,13,13,13,-43,13,13,13,-44,13,-113,-127,-129,-24,13,-128,]),'BREAK':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[16,16,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,16,-34,-19,-21,-131,16,-33,-35,-5,-20,-22,-23,16,-135,16,16,16,-43,16,16,16,-44,16,-113,-127,-129,-24,16,-128,]),'ECHO':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[19,19,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,19,-34,-19,-21,-131,19,-33,-35,-5,-20,-22,-23,19,-135,19,19,19,-43,19,19,19,-44,19,-113,-127,-129,-24,19,-128,]),'PRINT':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[21,21,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,21,-34,-19,-21,-131,21,-33,-35,-5,-20,-22,-23,21,-135,21,21,21,-43,21,21,21,-44,21,-113,-127,-129,-24,21,-128,]),'READLINE':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[22,22,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,22,-34,-19,-21,-131,22,-33,-35,-5,-20,-22,-23,22,-135,22,22,22,-43,22,22,22,-44,22,-113,-127,-129,-24,22,-128,]),'FGETS':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[24,24,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,24,-34,-19,-21,-131,24,-33,-35,-5,-20,-22,-23,24,-135,24,24,24,-43,24,24,24,-44,24,-113,-127,-129,-24,24,-128,]),'FSCANF':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[25,25,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,25,-34,-19,-21,-131,25,-33,-35,-5,-20,-22,-23,25,-135,25,25,25,-43,25,25,25,-44,25,-113,-127,-129,-24,25,-128,]),'FUNCTION':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[33,33,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,33,-34,-19,-21,-131,33,-33,-35,-5,-20,-22,-23,33,-135,33,33,33,-43,33,33,33,-44,33,-113,-127,-129,-24,33,-128,]),'SIGNO_DOLAR':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,39,50,51,52,53,54,55,56,57,58,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,139,144,148,158,161,162,163,174,175,176,191,193,197,199,201,208,209,210,212,218,219,220,224,234,237,239,240,249,253,258,259,260,261,262,264,267,269,275,277,280,281,282,284,],[26,26,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,26,26,-107,-108,-109,-110,26,109,26,-123,-124,-25,-26,-27,-28,-29,-30,-14,-15,-16,26,26,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,26,26,-64,-65,-66,-67,-68,-69,-81,-82,-83,-84,-85,26,-48,-49,26,26,-130,26,26,26,-34,-19,-21,184,26,-131,26,26,-33,-35,26,26,26,26,26,-5,-20,-22,-23,26,-116,-117,-118,-135,26,252,26,184,26,-43,26,-119,-120,26,26,26,-44,26,-113,-127,-129,-24,26,-128,]),'NEW':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,66,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[40,40,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,40,-48,-49,-130,40,-34,-19,-21,-131,40,-33,-35,-5,-20,-22,-23,40,-135,40,40,40,-43,40,40,40,-44,40,-113,-127,-129,-24,40,-128,]),'ARRAY':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,66,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[41,41,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,41,-48,-49,-130,41,-34,-19,-21,-131,41,-33,-35,-5,-20,-22,-23,41,-135,41,41,41,-43,41,41,41,-44,41,-113,-127,-129,-24,41,-128,]),'CORCHETE_ABRE':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,66,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[42,42,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,42,-48,-49,-130,42,-34,-19,-21,-131,42,-33,-35,-5,-20,-22,-23,42,-135,42,42,42,-43,42,42,42,-44,42,-113,-127,-129,-24,42,-128,]),'FOR':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[43,43,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,43,-34,-19,-21,-131,43,-33,-35,-5,-20,-22,-23,43,-135,43,43,43,-43,43,43,43,-44,43,-113,-127,-129,-24,43,-128,]),'FOREACH':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[44,44,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,44,-34,-19,-21,-131,44,-33,-35,-5,-20,-22,-23,44,-135,44,44,44,-43,44,44,44,-44,44,-113,-127,-129,-24,44,-128,]),'WHILE':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[46,46,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,46,-34,-19,-21,-131,46,-33,-35,-5,-20,-22,-23,46,-135,46,46,46,-43,46,46,46,-44,46,-113,-127,-129,-24,46,-128,]),'ENTERO':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,42,50,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,111,118,123,126,127,130,139,144,156,161,162,163,174,175,176,190,197,199,201,208,209,210,212,221,222,224,234,239,241,249,253,258,261,264,267,269,275,277,280,281,282,284,],[47,47,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,83,83,-107,-108,-109,-110,83,83,-14,-15,-16,83,135,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,83,83,-64,-65,-66,-67,-68,-69,-81,-82,-83,-84,-85,83,-48,-49,83,-130,165,168,47,-34,-19,-21,83,-131,47,168,-33,-35,83,83,228,83,-5,-20,-22,-23,47,243,244,-135,47,47,83,47,-43,47,47,47,-44,47,-113,-127,-129,-24,47,-128,]),'FLOTANTE':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,42,50,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,111,118,124,126,127,130,139,144,156,161,162,163,174,175,176,190,197,199,201,208,209,210,212,224,234,239,241,249,253,258,261,264,267,269,275,277,280,281,282,284,],[48,48,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,84,84,-107,-108,-109,-110,84,84,-14,-15,-16,84,136,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,84,84,-64,-65,-66,-67,-68,-69,-81,-82,-83,-84,-85,84,-48,-49,84,-130,166,169,48,-34,-19,-21,84,-131,48,169,-33,-35,84,84,229,84,-5,-20,-22,-23,48,-135,48,48,84,48,-43,48,48,48,-44,48,-113,-127,-129,-24,48,-128,]),'BOOLEANO':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,42,50,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,111,118,126,127,130,139,144,156,161,162,163,174,175,176,190,197,199,201,208,209,210,212,224,234,239,241,249,253,258,261,264,267,269,275,277,280,281,282,284,],[49,49,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,85,85,-107,-108,-109,-110,85,85,-14,-15,-16,85,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,85,85,-64,-65,-66,-67,-68,-69,-81,-82,-83,-84,-85,85,-48,-49,85,-130,170,49,-34,-19,-21,85,-131,49,170,-33,-35,85,85,230,85,-5,-20,-22,-23,49,-135,49,49,85,49,-43,49,49,49,-44,49,-113,-127,-129,-24,49,-128,]),'NEGACION':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,197,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[50,50,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,50,-34,-19,-21,-131,50,-33,-35,50,-5,-20,-22,-23,50,-135,50,50,50,-43,50,50,50,-44,50,-113,-127,-129,-24,50,-128,]),'INCREMENTO':([0,2,3,4,6,7,8,9,10,11,12,13,17,29,30,31,32,63,64,65,104,105,106,118,127,130,139,144,149,161,162,174,175,191,201,208,209,210,212,217,218,219,220,224,234,239,249,253,258,259,260,261,264,267,269,275,277,280,281,282,284,],[51,51,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,51,-107,-108,-109,-110,-14,-15,-16,-31,-48,-49,-130,51,-34,-19,-21,-32,-131,51,-33,-35,51,-5,-20,-22,-23,51,51,-116,-117,-118,-135,51,51,51,-43,51,-119,-120,51,51,-44,51,-113,-127,-129,-24,51,-128,]),'DECREMENTO':([0,2,3,4,6,7,8,9,10,11,12,13,17,29,30,31,32,63,64,65,104,105,106,118,127,130,139,144,149,161,162,174,175,191,201,208,209,210,212,217,218,219,220,224,234,239,249,253,258,259,260,261,264,267,269,275,277,280,281,282,284,],[52,52,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,52,-107,-108,-109,-110,-14,-15,-16,-31,-48,-49,-130,52,-34,-19,-21,-32,-131,52,-33,-35,52,-5,-20,-22,-23,52,52,-116,-117,-118,-135,52,52,52,-43,52,-119,-120,52,52,-44,52,-113,-127,-129,-24,52,-128,]),'CONST':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,139,144,158,161,162,163,174,175,176,191,193,197,199,201,208,209,210,212,218,219,220,224,234,239,249,253,258,259,260,261,262,264,267,269,275,277,280,281,282,284,],[53,53,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,53,53,-107,-108,-109,-110,53,53,-123,-124,-14,-15,-16,53,53,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,53,53,-64,-65,-66,-67,-68,-69,-81,-82,-83,-84,-85,53,-48,-49,53,53,-130,53,53,53,-34,-19,-21,53,-131,53,53,-33,-35,53,53,53,53,53,-5,-20,-22,-23,53,-116,-117,-118,-135,53,53,53,-43,53,-119,-120,53,53,53,-44,53,-113,-127,-129,-24,53,-128,]),'PRIVATE':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,139,144,158,161,162,163,174,175,176,191,193,197,199,201,208,209,210,212,218,219,220,224,234,239,249,253,258,259,260,261,262,264,267,269,275,277,280,281,282,284,],[54,54,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,54,54,-107,-108,-109,-110,54,54,-123,-124,-14,-15,-16,54,54,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,54,54,-64,-65,-66,-67,-68,-69,-81,-82,-83,-84,-85,54,-48,-49,54,54,-130,54,54,54,-34,-19,-21,54,-131,54,54,-33,-35,54,54,54,54,54,-5,-20,-22,-23,54,-116,-117,-118,-135,54,54,54,-43,54,-119,-120,54,54,54,-44,54,-113,-127,-129,-24,54,-128,]),'PUBLIC':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,139,144,158,161,162,163,174,175,176,191,193,197,199,201,208,209,210,212,218,219,220,224,234,239,249,253,258,259,260,261,262,264,267,269,275,277,280,281,282,284,],[55,55,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,55,55,-107,-108,-109,-110,55,55,-123,-124,-14,-15,-16,55,55,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,55,55,-64,-65,-66,-67,-68,-69,-81,-82,-83,-84,-85,55,-48,-49,55,55,-130,55,55,55,-34,-19,-21,55,-131,55,55,-33,-35,55,55,55,55,55,-5,-20,-22,-23,55,-116,-117,-118,-135,55,55,55,-43,55,-119,-120,55,55,55,-44,55,-113,-127,-129,-24,55,-128,]),'PROTECTED':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,139,144,158,161,162,163,174,175,176,191,193,197,199,201,208,209,210,212,218,219,220,224,234,239,249,253,258,259,260,261,262,264,267,269,275,277,280,281,282,284,],[56,56,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,56,56,-107,-108,-109,-110,56,56,-123,-124,-14,-15,-16,56,56,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,56,56,-64,-65,-66,-67,-68,-69,-81,-82,-83,-84,-85,56,-48,-49,56,56,-130,56,56,56,-34,-19,-21,56,-131,56,56,-33,-35,56,56,56,56,56,-5,-20,-22,-23,56,-116,-117,-118,-135,56,56,56,-43,56,-119,-120,56,56,56,-44,56,-113,-127,-129,-24,56,-128,]),'STATIC':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,139,144,158,161,162,163,174,175,176,191,193,197,199,201,208,209,210,212,218,219,220,224,234,239,249,253,258,259,260,261,262,264,267,269,275,277,280,281,282,284,],[57,57,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,57,57,-107,-108,-109,-110,57,57,-123,-124,-14,-15,-16,57,57,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,57,57,-64,-65,-66,-67,-68,-69,-81,-82,-83,-84,-85,57,-48,-49,57,57,-130,57,57,57,-34,-19,-21,57,-131,57,57,-33,-35,57,57,57,57,57,-5,-20,-22,-23,57,-116,-117,-118,-135,57,57,57,-43,57,-119,-120,57,57,57,-44,57,-113,-127,-129,-24,57,-128,]),'VAR':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,139,144,158,161,162,163,174,175,176,191,193,197,199,201,208,209,210,212,218,219,220,224,234,239,249,253,258,259,260,261,262,264,267,269,275,277,280,281,282,284,],[58,58,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,58,58,-107,-108,-109,-110,58,58,-123,-124,-14,-15,-16,58,58,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,58,58,-64,-65,-66,-67,-68,-69,-81,-82,-83,-84,-85,58,-48,-49,58,58,-130,58,58,58,-34,-19,-21,58,-131,58,58,-33,-35,58,58,58,58,58,-5,-20,-22,-23,58,-116,-117,-118,-135,58,58,58,-43,58,-119,-120,58,58,58,-44,58,-113,-127,-129,-24,58,-128,]),'IF':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,139,144,161,162,174,175,201,208,209,210,212,224,234,239,249,253,258,261,264,267,269,275,277,280,281,282,284,],[59,59,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,59,-34,-19,-21,-131,59,-33,-35,-5,-20,-22,-23,59,-135,59,59,59,-43,59,59,59,-44,59,-113,-127,-129,-24,59,-128,]),'CADENA':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,42,50,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,105,106,111,118,127,130,139,144,156,161,162,174,175,176,181,190,197,199,201,208,209,210,212,224,234,239,241,249,253,258,261,264,267,269,275,277,280,281,282,284,],[23,23,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,23,23,-107,-108,-109,-110,23,23,-14,-15,-16,23,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,23,23,-64,-65,-66,-67,-68,-69,-81,-82,-83,-84,-85,23,145,-48,-49,23,-130,23,-34,-19,-21,23,-131,23,-33,-35,23,211,23,23,23,-5,-20,-22,-23,23,-135,23,23,23,23,-43,23,23,23,-44,23,-113,-127,-129,-24,23,-128,]),'$end':([1,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,61,63,64,65,105,106,118,130,139,144,161,174,175,201,208,209,210,224,253,267,275,277,280,281,284,],[0,-1,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-2,-14,-15,-16,-48,-49,-130,-34,-19,-21,-131,-33,-35,-5,-20,-22,-23,-135,-43,-44,-113,-127,-129,-24,-128,]),'IDENTIFICADOR':([5,26,33,109,184,252,],[62,104,107,149,214,266,]),'LLAVE_CIERRA':([6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,130,139,144,161,172,174,175,194,195,196,208,209,210,224,238,247,248,251,253,254,263,267,268,269,270,273,275,276,277,280,281,283,284,],[-6,-7,-8,-9,-10,-11,-12,-13,-107,-108,-109,-110,-14,-15,-16,-48,-49,-130,-34,-19,-21,-131,201,-33,-35,224,-111,-112,-20,-22,-23,-135,253,-125,-126,265,-43,267,272,-44,275,-114,277,280,-113,-115,-127,-129,-24,284,-128,]),'FIN_LINEA':([14,15,16,18,23,27,28,34,35,36,37,49,51,52,60,67,81,82,83,84,85,100,104,108,112,125,128,129,131,132,133,134,135,136,140,141,142,149,151,154,155,165,166,178,179,180,185,186,187,207,225,226,227,228,229,230,235,236,243,244,274,],[63,64,65,-100,-41,105,106,-96,-97,-98,-99,-92,-123,-124,-17,-121,139,-18,-39,-40,-42,144,-31,-122,-55,-89,-38,174,175,-36,-37,-93,-94,-95,-86,-87,-88,-32,-54,-57,-59,-90,-91,208,209,210,-50,-56,-58,-51,247,248,-18,-39,-40,-42,-52,-53,259,260,281,]),'IGUAL':([17,23,83,84,85,104,115,149,159,223,256,],[66,-41,-39,-40,-42,-31,157,-32,66,246,157,]),'LAMBDA':([17,104,128,149,227,],[69,-31,173,-32,69,]),'SUMA':([17,20,23,47,48,49,60,82,83,84,85,104,140,149,202,205,206,225,227,228,229,230,],[-18,88,-41,-39,-40,-42,-17,-18,-39,-40,-42,-31,88,-32,-18,-17,88,88,-18,-39,-40,-42,]),'RESTA':([17,20,23,47,48,49,60,82,83,84,85,104,140,149,202,205,206,225,227,228,229,230,],[-18,89,-41,-39,-40,-42,-17,-18,-39,-40,-42,-31,89,-32,-18,-17,89,89,-18,-39,-40,-42,]),'MULTIPLICACION':([17,20,23,47,48,49,60,82,83,84,85,104,140,149,202,205,206,225,227,228,229,230,],[-18,90,-41,-39,-40,-42,-17,-18,-39,-40,-42,-31,90,-32,-18,-17,90,90,-18,-39,-40,-42,]),'DIVISION':([17,20,23,47,48,49,60,82,83,84,85,104,140,149,202,205,206,225,227,228,229,230,],[-18,91,-41,-39,-40,-42,-17,-18,-39,-40,-42,-31,91,-32,-18,-17,91,91,-18,-39,-40,-42,]),'POTENCIA':([17,20,23,47,48,49,60,82,83,84,85,104,140,149,202,205,206,225,227,228,229,230,],[-18,92,-41,-39,-40,-42,-17,-18,-39,-40,-42,-31,92,-32,-18,-17,92,92,-18,-39,-40,-42,]),'MODULO':([17,20,23,47,48,49,60,82,83,84,85,104,140,149,202,205,206,225,227,228,229,230,],[-18,93,-41,-39,-40,-42,-17,-18,-39,-40,-42,-31,93,-32,-18,-17,93,93,-18,-39,-40,-42,]),'CONJUNCION':([17,20,23,47,48,49,60,104,149,225,227,228,229,230,],[-18,94,-41,-39,-40,-42,-17,-31,-32,94,-18,-39,-40,-42,]),'DISYUNCION':([17,20,23,47,48,49,60,104,149,225,227,228,229,230,],[-18,95,-41,-39,-40,-42,-17,-31,-32,95,-18,-39,-40,-42,]),'DISYUNCION_EXC':([17,20,23,47,48,49,60,104,149,225,227,228,229,230,],[-18,96,-41,-39,-40,-42,-17,-31,-32,96,-18,-39,-40,-42,]),'DESPLAZAR_BITS_IZQ':([17,20,23,47,48,49,60,104,149,225,227,228,229,230,],[-18,97,-41,-39,-40,-42,-17,-31,-32,97,-18,-39,-40,-42,]),'DESPLAZAR_BITS_DER':([17,20,23,47,48,49,60,104,149,225,227,228,229,230,],[-18,98,-41,-39,-40,-42,-17,-31,-32,98,-18,-39,-40,-42,]),'IGUALDAD':([17,47,48,104,149,164,168,169,171,227,228,229,],[70,70,70,-31,-32,70,70,70,70,70,70,70,]),'IDENTIDAD':([17,47,48,104,149,164,168,169,171,227,228,229,],[71,71,71,-31,-32,71,71,71,71,71,71,71,]),'DIFERENTE':([17,47,48,104,149,164,168,169,171,227,228,229,],[72,72,72,-31,-32,72,72,72,72,72,72,72,]),'NO_IDENTIDAD':([17,47,48,104,149,164,168,169,171,227,228,229,],[73,73,73,-31,-32,73,73,73,73,73,73,73,]),'MAYOR':([17,47,48,104,149,157,164,168,169,171,227,228,229,246,],[74,74,74,-31,-32,190,74,74,74,74,74,74,74,262,]),'MAYOR_IGUAL':([17,47,48,104,149,164,168,169,171,192,227,228,229,],[75,75,75,-31,-32,75,75,75,75,222,75,75,75,]),'MENOR':([17,47,48,104,149,164,168,169,171,227,228,229,],[76,76,76,-31,-32,76,76,76,76,76,76,76,]),'MENOR_IGUAL':([17,47,48,104,149,164,168,169,171,192,227,228,229,],[77,77,77,-31,-32,77,77,77,77,221,77,77,77,]),'AND':([17,47,48,104,149,164,168,169,171,227,228,229,],[78,78,78,-31,-32,78,78,78,78,78,78,78,]),'OR':([17,47,48,104,149,164,168,169,171,227,228,229,],[79,79,79,-31,-32,79,79,79,79,79,79,79,]),'XOR':([17,47,48,104,149,164,168,169,171,227,228,229,],[80,80,80,-31,-32,80,80,80,80,80,80,80,]),'PARENTESIS_ABRE':([21,22,24,25,41,43,44,46,59,107,110,121,137,138,],[99,101,102,103,111,116,117,122,126,148,150,163,176,177,]),'COMA':([23,83,84,85,115,147,188,211,214,215,],[-41,-39,-40,-42,156,181,156,237,240,241,]),'CORCHETE_CIERRA':([23,42,83,84,85,113,114,115,188,189,215,257,],[-41,112,-39,-40,-42,154,155,-62,-62,-63,-60,-61,]),'PARENTESIS_CIERRA':([23,51,52,60,67,82,83,84,85,104,108,111,115,132,133,134,135,136,140,141,143,145,146,148,149,150,152,153,165,166,167,170,177,183,188,189,198,202,203,204,205,214,215,216,223,232,233,255,257,266,271,],[-41,-123,-124,-17,-121,-18,-39,-40,-42,-31,-122,151,-62,-36,-37,-93,-94,-95,-86,-87,178,179,180,182,-32,185,186,187,-90,-91,200,-92,207,213,-62,-63,231,-38,235,236,-36,-46,-60,242,245,-38,250,-47,-61,274,278,]),'STACK':([40,],[110,]),'ELSE':([45,119,265,272,279,],[120,120,-132,-133,-134,]),'ELSEIF':([45,265,272,],[121,-132,121,]),'LLAVE_ABRE':([62,120,182,200,213,231,242,245,250,278,],[127,162,212,234,239,249,258,261,264,282,]),'NULO':([66,70,71,72,73,74,75,76,77,78,79,80,176,199,],[133,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,133,133,]),'PUSH':([69,],[137,]),'POP':([69,173,],[138,138,]),'STDIN':([102,103,],[146,147,]),'AS':([104,149,160,],[-31,-32,193,]),'RETURN':([162,212,234,239,249,],[197,197,197,197,197,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'variaslineas':([0,2,],[1,61,]),'programa':([0,2,],[2,2,]),'clase':([0,2,],[3,3,]),'instrucciones':([0,2,127,162,212,234,239,249,258,261,264,269,282,],[4,4,172,195,195,195,195,195,269,269,273,269,269,]),'asignacion':([0,2,116,127,162,212,234,239,249,258,261,264,269,282,],[6,6,158,6,6,6,6,6,6,6,6,6,6,6,]),'salida':([0,2,127,162,212,234,239,249,258,261,264,269,282,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'ingreso':([0,2,127,162,212,234,239,249,258,261,264,269,282,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'estructuras_datos':([0,2,66,127,162,212,234,239,249,258,261,264,269,282,],[9,9,130,9,9,9,9,9,9,9,9,9,9,9,]),'estructuras_control':([0,2,127,162,212,234,239,249,258,261,264,269,282,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'funcion':([0,2,127,162,212,234,239,249,258,261,264,269,282,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'operaciones':([0,2,127,162,197,212,234,239,249,258,261,264,269,282,],[14,14,14,14,226,14,14,14,14,14,14,14,14,14,]),'declaracion_s':([0,2,127,162,191,212,234,239,249,258,261,264,269,282,],[15,15,15,15,216,15,15,15,15,15,15,15,15,15,]),'decl_variable':([0,2,19,21,38,50,66,68,86,87,99,116,117,122,126,127,158,162,163,176,191,193,197,199,212,234,239,249,258,261,262,264,269,282,],[17,17,82,82,108,82,128,134,82,82,82,159,160,164,171,17,192,17,171,202,217,223,227,232,17,17,17,17,17,17,271,17,17,17,]),'poppila':([0,2,66,127,162,197,212,234,239,249,258,261,264,269,282,],[18,18,131,18,18,18,18,18,18,18,18,18,18,18,18,]),'salidas_posibles':([0,2,19,21,50,86,87,99,127,162,176,197,212,234,239,249,258,261,264,269,282,],[20,20,81,100,125,140,142,143,20,20,206,225,20,20,20,20,20,20,20,20,20,]),'pila':([0,2,66,127,162,212,234,239,249,258,261,264,269,282,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'arreglo':([0,2,66,127,162,212,234,239,249,258,261,264,269,282,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'for':([0,2,127,162,212,234,239,249,258,261,264,269,282,],[29,29,29,29,29,29,29,29,29,29,29,29,29,]),'foreach':([0,2,127,162,212,234,239,249,258,261,264,269,282,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'if_else':([0,2,127,162,212,234,239,249,258,261,264,269,282,],[31,31,31,31,31,31,31,31,31,31,31,31,31,]),'while':([0,2,127,162,212,234,239,249,258,261,264,269,282,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'operaciones_logicas':([0,2,126,127,162,163,197,212,234,239,249,258,261,264,269,282,],[34,34,167,34,34,198,34,34,34,34,34,34,34,34,34,34,]),'operaciones_arit':([0,2,86,127,162,176,197,212,234,239,249,258,261,264,269,282,],[35,35,141,35,35,204,35,35,35,35,35,35,35,35,35,35,]),'operaciones_bits':([0,2,127,162,197,212,234,239,249,258,261,264,269,282,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'pushpila':([0,2,127,162,197,212,234,239,249,258,261,264,269,282,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'crecimiento':([0,2,17,127,162,191,212,217,234,239,249,258,261,264,269,282,],[38,38,67,38,38,38,38,67,38,38,38,38,38,38,38,38,]),'variable_tipo':([0,2,19,21,38,50,66,68,86,87,99,116,117,122,126,127,158,162,163,176,191,193,197,199,212,234,239,249,258,261,262,264,269,282,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'if_else_inicio':([0,2,127,162,212,234,239,249,258,261,264,269,282,],[45,45,45,45,45,45,45,45,45,45,45,45,45,]),'datos':([0,2,19,21,42,50,66,86,87,99,111,127,156,162,176,190,197,199,212,234,239,241,249,258,261,264,269,282,],[60,60,60,60,115,60,132,60,60,60,115,60,188,60,205,215,60,132,60,60,60,256,60,60,60,60,60,60,]),'operad_logico':([17,47,48,164,168,169,171,227,228,229,],[68,123,124,199,123,124,68,68,123,124,]),'operad_arit':([20,140,206,225,],[86,86,86,86,]),'operand_bits':([20,225,],[87,87,]),'elementos':([42,111,156,],[113,152,189,]),'asociacion':([42,111,241,],[114,153,257,]),'if_else_fin':([45,119,],[118,161,]),'if_else_cuerpo':([45,272,],[119,279,]),'valor':([66,176,199,],[129,203,233,]),'parametros':([148,240,],[183,255,]),'declaracionp':([158,],[191,]),'bloque':([162,212,234,239,249,],[194,238,251,254,263,]),'retorno':([162,212,234,239,249,],[196,196,196,196,196,]),'valorc':([192,],[218,]),'menor':([192,],[219,]),'mayor':([192,],[220,]),'sentenciasAnidadas':([258,261,269,282,],[268,270,276,283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> variaslineas","S'",1,None,None,None),
  ('variaslineas -> programa','variaslineas',1,'p_variaslineas','sintactico.py',5),
  ('variaslineas -> programa variaslineas','variaslineas',2,'p_variaslineas','sintactico.py',6),
  ('programa -> clase','programa',1,'p_programa','sintactico.py',10),
  ('programa -> instrucciones','programa',1,'p_programa','sintactico.py',11),
  ('clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA','clase',5,'p_clase','sintactico.py',15),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> salida','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> ingreso','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> estructuras_datos','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> estructuras_control','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> funcion','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('instrucciones -> COMENTARIO_LINEA','instrucciones',1,'p_instrucciones','sintactico.py',24),
  ('instrucciones -> COMENTARIO_BLOQUE','instrucciones',1,'p_instrucciones','sintactico.py',25),
  ('instrucciones -> operaciones FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',26),
  ('instrucciones -> declaracion_s FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',27),
  ('instrucciones -> BREAK FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',28),
  ('salidas_posibles -> datos','salidas_posibles',1,'p_salidas_posibles','sintactico.py',34),
  ('salidas_posibles -> decl_variable','salidas_posibles',1,'p_salidas_posibles','sintactico.py',35),
  ('salida -> ECHO salidas_posibles FIN_LINEA','salida',3,'p_salida_forma1','sintactico.py',39),
  ('salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA','salida',5,'p_salida_forma2','sintactico.py',42),
  ('salida -> PRINT salidas_posibles FIN_LINEA','salida',3,'p_salida_forma3','sintactico.py',45),
  ('ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma1','sintactico.py',50),
  ('ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma2','sintactico.py',53),
  ('ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA','ingreso',10,'p_ingreso_forma3','sintactico.py',56),
  ('variable_tipo -> CONST','variable_tipo',1,'p_variable_tipo','sintactico.py',61),
  ('variable_tipo -> PRIVATE','variable_tipo',1,'p_variable_tipo','sintactico.py',62),
  ('variable_tipo -> PUBLIC','variable_tipo',1,'p_variable_tipo','sintactico.py',63),
  ('variable_tipo -> PROTECTED','variable_tipo',1,'p_variable_tipo','sintactico.py',64),
  ('variable_tipo -> STATIC','variable_tipo',1,'p_variable_tipo','sintactico.py',65),
  ('variable_tipo -> VAR','variable_tipo',1,'p_variable_tipo','sintactico.py',66),
  ('decl_variable -> SIGNO_DOLAR IDENTIFICADOR','decl_variable',2,'p_decl_variable','sintactico.py',72),
  ('decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR','decl_variable',3,'p_decl_variable','sintactico.py',73),
  ('asignacion -> decl_variable IGUAL valor FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',76),
  ('asignacion -> decl_variable IGUAL estructuras_datos','asignacion',3,'p_asignacion','sintactico.py',77),
  ('asignacion -> decl_variable IGUAL poppila FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',78),
  ('valor -> datos','valor',1,'p_valor','sintactico.py',82),
  ('valor -> NULO','valor',1,'p_valor','sintactico.py',83),
  ('valor -> decl_variable','valor',1,'p_valor','sintactico.py',84),
  ('datos -> ENTERO','datos',1,'p_datos','sintactico.py',88),
  ('datos -> FLOTANTE','datos',1,'p_datos','sintactico.py',89),
  ('datos -> CADENA','datos',1,'p_datos','sintactico.py',90),
  ('datos -> BOOLEANO','datos',1,'p_datos','sintactico.py',91),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','funcion',7,'p_funcion','sintactico.py',97),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','funcion',8,'p_funcion_parametros','sintactico.py',101),
  ('funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA','funcionuso',4,'p_funcionenuso','sintactico.py',104),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR','parametros',2,'p_parametros','sintactico.py',108),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros','parametros',4,'p_parametros','sintactico.py',109),
  ('estructuras_datos -> pila FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','sintactico.py',115),
  ('estructuras_datos -> arreglo FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','sintactico.py',116),
  ('pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA','pila',4,'p_pila','sintactico.py',119),
  ('poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA','poppila',5,'p_pop','sintactico.py',122),
  ('pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA','pushpila',6,'p_push','sintactico.py',126),
  ('pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA','pushpila',6,'p_push','sintactico.py',127),
  ('arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA','arreglo',3,'p_arreglo_vacio','sintactico.py',131),
  ('arreglo -> CORCHETE_ABRE CORCHETE_CIERRA','arreglo',2,'p_arreglo_vacio','sintactico.py',132),
  ('arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA','arreglo',4,'p_arreglo_indexado','sintactico.py',136),
  ('arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA','arreglo',3,'p_arreglo_indexado','sintactico.py',137),
  ('arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA','arreglo',4,'p_arreglo_asociativo','sintactico.py',141),
  ('arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA','arreglo',3,'p_arreglo_asociativo','sintactico.py',142),
  ('asociacion -> datos IGUAL MAYOR datos','asociacion',4,'p_asociacion','sintactico.py',146),
  ('asociacion -> datos IGUAL MAYOR datos COMA asociacion','asociacion',6,'p_asociacion','sintactico.py',147),
  ('elementos -> datos','elementos',1,'p_elementos','sintactico.py',150),
  ('elementos -> datos COMA elementos','elementos',3,'p_elementos','sintactico.py',151),
  ('operad_arit -> SUMA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',156),
  ('operad_arit -> RESTA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',157),
  ('operad_arit -> MULTIPLICACION','operad_arit',1,'p_operad_aritmeticas','sintactico.py',158),
  ('operad_arit -> DIVISION','operad_arit',1,'p_operad_aritmeticas','sintactico.py',159),
  ('operad_arit -> POTENCIA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',160),
  ('operad_arit -> MODULO','operad_arit',1,'p_operad_aritmeticas','sintactico.py',161),
  ('operad_logico -> IGUALDAD','operad_logico',1,'p_operad_logicos','sintactico.py',165),
  ('operad_logico -> IDENTIDAD','operad_logico',1,'p_operad_logicos','sintactico.py',166),
  ('operad_logico -> DIFERENTE','operad_logico',1,'p_operad_logicos','sintactico.py',167),
  ('operad_logico -> NO_IDENTIDAD','operad_logico',1,'p_operad_logicos','sintactico.py',168),
  ('operad_logico -> MAYOR','operad_logico',1,'p_operad_logicos','sintactico.py',169),
  ('operad_logico -> MAYOR_IGUAL','operad_logico',1,'p_operad_logicos','sintactico.py',170),
  ('operad_logico -> MENOR','operad_logico',1,'p_operad_logicos','sintactico.py',171),
  ('operad_logico -> MENOR_IGUAL','operad_logico',1,'p_operad_logicos','sintactico.py',172),
  ('operad_logico -> AND','operad_logico',1,'p_operad_logicos','sintactico.py',173),
  ('operad_logico -> OR','operad_logico',1,'p_operad_logicos','sintactico.py',174),
  ('operad_logico -> XOR','operad_logico',1,'p_operad_logicos','sintactico.py',175),
  ('operand_bits -> CONJUNCION','operand_bits',1,'p_operad_bits','sintactico.py',181),
  ('operand_bits -> DISYUNCION','operand_bits',1,'p_operad_bits','sintactico.py',182),
  ('operand_bits -> DISYUNCION_EXC','operand_bits',1,'p_operad_bits','sintactico.py',183),
  ('operand_bits -> DESPLAZAR_BITS_IZQ','operand_bits',1,'p_operad_bits','sintactico.py',184),
  ('operand_bits -> DESPLAZAR_BITS_DER','operand_bits',1,'p_operad_bits','sintactico.py',185),
  ('operaciones_arit -> salidas_posibles operad_arit salidas_posibles','operaciones_arit',3,'p_operaciones_arit','sintactico.py',191),
  ('operaciones_arit -> salidas_posibles operad_arit operaciones_arit','operaciones_arit',3,'p_operaciones_arit','sintactico.py',192),
  ('operaciones_bits -> salidas_posibles operand_bits salidas_posibles','operaciones_bits',3,'p_operaciones_bits','sintactico.py',196),
  ('operaciones_bits -> NEGACION salidas_posibles','operaciones_bits',2,'p_operaciones_bits','sintactico.py',197),
  ('operaciones_logicas -> ENTERO operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',201),
  ('operaciones_logicas -> FLOTANTE operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',202),
  ('operaciones_logicas -> BOOLEANO','operaciones_logicas',1,'p_operaciones_logica','sintactico.py',203),
  ('operaciones_logicas -> decl_variable operad_logico decl_variable','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',204),
  ('operaciones_logicas -> decl_variable operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',205),
  ('operaciones_logicas -> decl_variable operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',206),
  ('operaciones -> operaciones_logicas','operaciones',1,'p_operaciones','sintactico.py',210),
  ('operaciones -> operaciones_arit','operaciones',1,'p_operaciones','sintactico.py',211),
  ('operaciones -> operaciones_bits','operaciones',1,'p_operaciones','sintactico.py',212),
  ('operaciones -> pushpila','operaciones',1,'p_operaciones','sintactico.py',213),
  ('operaciones -> poppila','operaciones',1,'p_operaciones','sintactico.py',214),
  ('paraCalculos -> ENTERO','paraCalculos',1,'p_paraCalculos','sintactico.py',218),
  ('paraCalculos -> FLOTANTE','paraCalculos',1,'p_paraCalculos','sintactico.py',219),
  ('paraCalculos -> decl_variable','paraCalculos',1,'p_paraCalculos','sintactico.py',220),
  ('combinarOp -> operad_arit paraCalculos','combinarOp',2,'p_combinarOp','sintactico.py',223),
  ('combinarOp -> operad_arit paraCalculos combinarOp','combinarOp',3,'p_combinarOp','sintactico.py',224),
  ('opAritVar -> paraCalculos combinarOp','opAritVar',2,'p_opAritmeticaEnVar','sintactico.py',227),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','sintactico.py',232),
  ('estructuras_control -> foreach','estructuras_control',1,'p_estructuras_control','sintactico.py',233),
  ('estructuras_control -> if_else','estructuras_control',1,'p_estructuras_control','sintactico.py',234),
  ('estructuras_control -> while','estructuras_control',1,'p_estructuras_control','sintactico.py',235),
  ('bloque -> instrucciones','bloque',1,'p_bloque','sintactico.py',240),
  ('bloque -> retorno','bloque',1,'p_bloque','sintactico.py',241),
  ('for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','for',9,'p_for','sintactico.py',247),
  ('sentenciasAnidadas -> instrucciones','sentenciasAnidadas',1,'p_sentenciasAnidadas','sintactico.py',250),
  ('sentenciasAnidadas -> instrucciones sentenciasAnidadas','sentenciasAnidadas',2,'p_sentenciasAnidadas','sintactico.py',251),
  ('declaracionp -> decl_variable valorc','declaracionp',2,'p_declaracionM','sintactico.py',255),
  ('valorc -> menor','valorc',1,'p_valorC','sintactico.py',258),
  ('valorc -> mayor','valorc',1,'p_valorC','sintactico.py',259),
  ('menor -> MENOR_IGUAL ENTERO FIN_LINEA','menor',3,'p_menor','sintactico.py',262),
  ('mayor -> MAYOR_IGUAL ENTERO FIN_LINEA','mayor',3,'p_mayor','sintactico.py',265),
  ('declaracion_s -> decl_variable crecimiento','declaracion_s',2,'p_declaracionsimple','sintactico.py',268),
  ('declaracion_s -> crecimiento decl_variable','declaracion_s',2,'p_declaracionsimple','sintactico.py',269),
  ('crecimiento -> INCREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',273),
  ('crecimiento -> DECREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',274),
  ('retorno -> RETURN salidas_posibles FIN_LINEA','retorno',3,'p_retorno','sintactico.py',277),
  ('retorno -> RETURN operaciones FIN_LINEA','retorno',3,'p_retorno','sintactico.py',278),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',9,'p_foreach','sintactico.py',284),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',12,'p_foreach','sintactico.py',285),
  ('while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','while',9,'p_while','sintactico.py',291),
  ('if_else -> if_else_inicio if_else_fin','if_else',2,'p_if_else_corto','sintactico.py',296),
  ('if_else -> if_else_inicio if_else_cuerpo if_else_fin','if_else',3,'p_if_else_extendido','sintactico.py',300),
  ('if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_inicio',7,'p_if_else_inicio','sintactico.py',304),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_cuerpo',7,'p_if_else_cuerpo','sintactico.py',308),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo','if_else_cuerpo',8,'p_if_else_cuerpo','sintactico.py',309),
  ('if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA','if_else_fin',4,'p_if_else_fin','sintactico.py',314),
]
