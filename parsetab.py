
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY AS BACKSLASH BOOLEANO BREAK CADENA CLASS COMA COMENTARIO_BLOQUE COMENTARIO_LINEA CONJUNCION CONST CORCHETE_ABRE CORCHETE_CIERRA DECREMENTO DESPLAZAR_BITS_DER DESPLAZAR_BITS_IZQ DIFERENTE DISYUNCION DISYUNCION_EXC DIVISION ECHO ELSE ELSEIF ENTERO EXPLODE FGETS FIN_LINEA FLOTANTE FOR FOREACH FSCANF FUNCTION IDENTIDAD IDENTIFICADOR IF IGUAL IGUALDAD INCREMENTO LAMBDA LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NEGACION NEW NO_IDENTIDAD NULO OR PARENTESIS_ABRE PARENTESIS_CIERRA POP POTENCIA PRINT PRIVATE PROTECTED PUBLIC PUNTO PUSH READLINE RESTA RETURN SIGNO_DOLAR STACK STATIC STDIN SUMA VAR WHILE XORprograma : clase\n              | instrucciones\n  clase : CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRAinstrucciones : asignacion\n            | salida\n            | ingreso\n            | estructuras_datos\n            | estructuras_control\n            | funcion\n            | COMENTARIO_LINEA\n            | COMENTARIO_BLOQUE\n            | operaciones FIN_LINEA\n            | declaracion_s FIN_LINEA\n            | BREAK FIN_LINEA\n  salidas_posibles : datos\n                | decl_variable\n  salida : ECHO salidas_posibles FIN_LINEAsalida : PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEAsalida : PRINT salidas_posibles FIN_LINEAingreso : READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEAingreso : FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEAingreso : FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEAvariable_tipo : CONST\n                  | PRIVATE\n                  | PUBLIC\n                  | PROTECTED\n                  | STATIC\n                  | VAR\n  decl_variable : SIGNO_DOLAR IDENTIFICADOR\n                    | variable_tipo SIGNO_DOLAR IDENTIFICADORasignacion : decl_variable IGUAL valor FIN_LINEA\n                | decl_variable IGUAL estructuras_datos\n                | decl_variable IGUAL poppila FIN_LINEA\n  valor : datos\n            | NULO\n            | decl_variable\n  datos : ENTERO\n          | FLOTANTE\n          | CADENA \n          | BOOLEANO\n  funcion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA\n  funcion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRAfuncionuso : IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA\n  parametros : SIGNO_DOLAR IDENTIFICADOR\n                  | SIGNO_DOLAR IDENTIFICADOR COMA parametros\n   estructuras_datos : pila FIN_LINEA\n                        | arreglo FIN_LINEA\n  pila :  NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRApoppila : decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA\n  pushpila : decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA\n            | decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA\n              | CORCHETE_ABRE CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA\n              | CORCHETE_ABRE elementos CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA\n              | CORCHETE_ABRE asociacion CORCHETE_CIERRA\n  asociacion : datos IGUAL MAYOR datos\n                  | datos IGUAL MAYOR datos COMA asociacion\n  elementos : datos\n                  | datos COMA elementos\n    operad_arit : SUMA\n                | RESTA\n                | MULTIPLICACION\n                | DIVISION\n                | POTENCIA\n                | MODULO\n  operad_logico : IGUALDAD\n                | IDENTIDAD\n                | DIFERENTE\n                | NO_IDENTIDAD\n                | MAYOR\n                | MAYOR_IGUAL\n                | MENOR\n                | MENOR_IGUAL\n                | AND\n                | OR\n                | XOR\n  operand_bits : CONJUNCION\n                  | DISYUNCION\n                  | DISYUNCION_EXC\n                  | DESPLAZAR_BITS_IZQ\n                  | DESPLAZAR_BITS_DER\n  operaciones_arit : salidas_posibles operad_arit salidas_posibles\n                | salidas_posibles operad_arit operaciones_arit\n  operaciones_bits : salidas_posibles operand_bits salidas_posibles\n                  | NEGACION salidas_posibles\n   operaciones_logicas : ENTERO operad_logico ENTERO\n                | FLOTANTE operad_logico FLOTANTE\n                | BOOLEANO\n                | decl_variable operad_logico decl_variable\n                | decl_variable operad_logico ENTERO\n                | decl_variable operad_logico FLOTANTE\n  operaciones : operaciones_logicas\n                  | operaciones_arit\n                  | operaciones_bits\n                  | pushpila\n                  | poppila\n   estructuras_control : for\n                          | foreach\n                          | if_else\n                          | while\n   bloque : instrucciones\n              | retorno\n  for : FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRAsentenciasAnidadas : instrucciones \n            | instrucciones sentenciasAnidadas\n  declaracionp :  decl_variable valorc valorc : menor\n              | mayormenor : MENOR_IGUAL ENTERO FIN_LINEAmayor : MAYOR_IGUAL ENTERO FIN_LINEAdeclaracion_s : decl_variable crecimiento\n                    | crecimiento decl_variable\n   crecimiento : INCREMENTO \n                | DECREMENTO retorno : RETURN salidas_posibles FIN_LINEA\n              | RETURN operaciones FIN_LINEA\n  foreach : FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n              | FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n  while : WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA if_else : if_else_inicio if_else_fin if_else : if_else_inicio if_else_cuerpo if_else_finif_else_inicio : IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo : ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA\n                    |  ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo\n  if_else_fin : ELSE LLAVE_ABRE bloque LLAVE_CIERRA'
    
_lr_action_items = {'CLASS':([0,],[4,]),'COMENTARIO_LINEA':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[11,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,11,-32,-17,-19,-123,11,-31,-33,-18,-20,-21,11,-127,11,11,11,-41,11,11,11,-42,11,-105,-119,-121,-22,11,-120,]),'COMENTARIO_BLOQUE':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[12,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,12,-32,-17,-19,-123,12,-31,-33,-18,-20,-21,12,-127,12,12,12,-41,12,12,12,-42,12,-105,-119,-121,-22,12,-120,]),'BREAK':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[15,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,15,-32,-17,-19,-123,15,-31,-33,-18,-20,-21,15,-127,15,15,15,-41,15,15,15,-42,15,-105,-119,-121,-22,15,-120,]),'ECHO':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[18,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,18,-32,-17,-19,-123,18,-31,-33,-18,-20,-21,18,-127,18,18,18,-41,18,18,18,-42,18,-105,-119,-121,-22,18,-120,]),'PRINT':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[20,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,20,-32,-17,-19,-123,20,-31,-33,-18,-20,-21,20,-127,20,20,20,-41,20,20,20,-42,20,-105,-119,-121,-22,20,-120,]),'READLINE':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[21,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,21,-32,-17,-19,-123,21,-31,-33,-18,-20,-21,21,-127,21,21,21,-41,21,21,21,-42,21,-105,-119,-121,-22,21,-120,]),'FGETS':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[23,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,23,-32,-17,-19,-123,23,-31,-33,-18,-20,-21,23,-127,23,23,23,-41,23,23,23,-42,23,-105,-119,-121,-22,23,-120,]),'FSCANF':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[24,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,24,-32,-17,-19,-123,24,-31,-33,-18,-20,-21,24,-127,24,24,24,-41,24,24,24,-42,24,-105,-119,-121,-22,24,-120,]),'FUNCTION':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[32,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,32,-32,-17,-19,-123,32,-31,-33,-18,-20,-21,32,-127,32,32,32,-41,32,32,32,-42,32,-105,-119,-121,-22,32,-120,]),'SIGNO_DOLAR':([0,5,6,7,8,9,10,11,12,18,20,28,29,30,31,37,38,49,50,51,52,53,54,55,56,57,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,114,115,116,120,124,125,128,137,142,146,156,159,160,161,172,173,174,189,191,195,197,206,207,208,210,216,217,218,222,232,235,237,238,247,251,256,257,258,259,260,262,265,267,273,275,278,279,280,282,],[25,-4,-5,-6,-7,-8,-9,-10,-11,25,25,-99,-100,-101,-102,25,107,25,-115,-116,-23,-24,-25,-26,-27,-28,-12,-13,-14,25,25,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,25,25,-62,-63,-64,-65,-66,-67,-79,-80,-81,-82,-83,25,-46,-47,25,25,-122,25,25,25,-32,-17,-19,182,25,-123,25,25,-31,-33,25,25,25,25,25,-18,-20,-21,25,-108,-109,-110,-127,25,250,25,182,25,-41,25,-111,-112,25,25,25,-42,25,-105,-119,-121,-22,25,-120,]),'NEW':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,64,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[39,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,39,-46,-47,-122,39,-32,-17,-19,-123,39,-31,-33,-18,-20,-21,39,-127,39,39,39,-41,39,39,39,-42,39,-105,-119,-121,-22,39,-120,]),'ARRAY':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,64,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[40,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,40,-46,-47,-122,40,-32,-17,-19,-123,40,-31,-33,-18,-20,-21,40,-127,40,40,40,-41,40,40,40,-42,40,-105,-119,-121,-22,40,-120,]),'CORCHETE_ABRE':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,64,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[41,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,41,-46,-47,-122,41,-32,-17,-19,-123,41,-31,-33,-18,-20,-21,41,-127,41,41,41,-41,41,41,41,-42,41,-105,-119,-121,-22,41,-120,]),'FOR':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[42,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,42,-32,-17,-19,-123,42,-31,-33,-18,-20,-21,42,-127,42,42,42,-41,42,42,42,-42,42,-105,-119,-121,-22,42,-120,]),'FOREACH':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[43,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,43,-32,-17,-19,-123,43,-31,-33,-18,-20,-21,43,-127,43,43,43,-41,43,43,43,-42,43,-105,-119,-121,-22,43,-120,]),'WHILE':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[45,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,45,-32,-17,-19,-123,45,-31,-33,-18,-20,-21,45,-127,45,45,45,-41,45,45,45,-42,45,-105,-119,-121,-22,45,-120,]),'ENTERO':([0,5,6,7,8,9,10,11,12,18,20,28,29,30,31,41,49,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,109,116,121,124,125,128,137,142,154,159,160,161,172,173,174,188,195,197,206,207,208,210,219,220,222,232,237,239,247,251,256,259,262,265,267,273,275,278,279,280,282,],[46,-4,-5,-6,-7,-8,-9,-10,-11,81,81,-99,-100,-101,-102,81,81,-12,-13,-14,81,133,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,81,81,-62,-63,-64,-65,-66,-67,-79,-80,-81,-82,-83,81,-46,-47,81,-122,163,166,46,-32,-17,-19,81,-123,46,166,-31,-33,81,81,226,81,-18,-20,-21,46,241,242,-127,46,46,81,46,-41,46,46,46,-42,46,-105,-119,-121,-22,46,-120,]),'FLOTANTE':([0,5,6,7,8,9,10,11,12,18,20,28,29,30,31,41,49,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,109,116,122,124,125,128,137,142,154,159,160,161,172,173,174,188,195,197,206,207,208,210,222,232,237,239,247,251,256,259,262,265,267,273,275,278,279,280,282,],[47,-4,-5,-6,-7,-8,-9,-10,-11,82,82,-99,-100,-101,-102,82,82,-12,-13,-14,82,134,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,82,82,-62,-63,-64,-65,-66,-67,-79,-80,-81,-82,-83,82,-46,-47,82,-122,164,167,47,-32,-17,-19,82,-123,47,167,-31,-33,82,82,227,82,-18,-20,-21,47,-127,47,47,82,47,-41,47,47,47,-42,47,-105,-119,-121,-22,47,-120,]),'BOOLEANO':([0,5,6,7,8,9,10,11,12,18,20,28,29,30,31,41,49,61,62,63,64,68,69,70,71,72,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,109,116,124,125,128,137,142,154,159,160,161,172,173,174,188,195,197,206,207,208,210,222,232,237,239,247,251,256,259,262,265,267,273,275,278,279,280,282,],[48,-4,-5,-6,-7,-8,-9,-10,-11,83,83,-99,-100,-101,-102,83,83,-12,-13,-14,83,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,83,83,-62,-63,-64,-65,-66,-67,-79,-80,-81,-82,-83,83,-46,-47,83,-122,168,48,-32,-17,-19,83,-123,48,168,-31,-33,83,83,228,83,-18,-20,-21,48,-127,48,48,83,48,-41,48,48,48,-42,48,-105,-119,-121,-22,48,-120,]),'NEGACION':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,195,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[49,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,49,-32,-17,-19,-123,49,-31,-33,49,-18,-20,-21,49,-127,49,49,49,-41,49,49,49,-42,49,-105,-119,-121,-22,49,-120,]),'INCREMENTO':([0,5,6,7,8,9,10,11,12,16,28,29,30,31,61,62,63,102,103,104,116,125,128,137,142,147,159,160,172,173,189,206,207,208,210,215,216,217,218,222,232,237,247,251,256,257,258,259,262,265,267,273,275,278,279,280,282,],[50,-4,-5,-6,-7,-8,-9,-10,-11,50,-99,-100,-101,-102,-12,-13,-14,-29,-46,-47,-122,50,-32,-17,-19,-30,-123,50,-31,-33,50,-18,-20,-21,50,50,-108,-109,-110,-127,50,50,50,-41,50,-111,-112,50,50,-42,50,-105,-119,-121,-22,50,-120,]),'DECREMENTO':([0,5,6,7,8,9,10,11,12,16,28,29,30,31,61,62,63,102,103,104,116,125,128,137,142,147,159,160,172,173,189,206,207,208,210,215,216,217,218,222,232,237,247,251,256,257,258,259,262,265,267,273,275,278,279,280,282,],[51,-4,-5,-6,-7,-8,-9,-10,-11,51,-99,-100,-101,-102,-12,-13,-14,-29,-46,-47,-122,51,-32,-17,-19,-30,-123,51,-31,-33,51,-18,-20,-21,51,51,-108,-109,-110,-127,51,51,51,-41,51,-111,-112,51,51,-42,51,-105,-119,-121,-22,51,-120,]),'CONST':([0,5,6,7,8,9,10,11,12,18,20,28,29,30,31,37,49,50,51,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,114,115,116,120,124,125,128,137,142,156,159,160,161,172,173,174,189,191,195,197,206,207,208,210,216,217,218,222,232,237,247,251,256,257,258,259,260,262,265,267,273,275,278,279,280,282,],[52,-4,-5,-6,-7,-8,-9,-10,-11,52,52,-99,-100,-101,-102,52,52,-115,-116,-12,-13,-14,52,52,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,52,52,-62,-63,-64,-65,-66,-67,-79,-80,-81,-82,-83,52,-46,-47,52,52,-122,52,52,52,-32,-17,-19,52,-123,52,52,-31,-33,52,52,52,52,52,-18,-20,-21,52,-108,-109,-110,-127,52,52,52,-41,52,-111,-112,52,52,52,-42,52,-105,-119,-121,-22,52,-120,]),'PRIVATE':([0,5,6,7,8,9,10,11,12,18,20,28,29,30,31,37,49,50,51,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,114,115,116,120,124,125,128,137,142,156,159,160,161,172,173,174,189,191,195,197,206,207,208,210,216,217,218,222,232,237,247,251,256,257,258,259,260,262,265,267,273,275,278,279,280,282,],[53,-4,-5,-6,-7,-8,-9,-10,-11,53,53,-99,-100,-101,-102,53,53,-115,-116,-12,-13,-14,53,53,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,53,53,-62,-63,-64,-65,-66,-67,-79,-80,-81,-82,-83,53,-46,-47,53,53,-122,53,53,53,-32,-17,-19,53,-123,53,53,-31,-33,53,53,53,53,53,-18,-20,-21,53,-108,-109,-110,-127,53,53,53,-41,53,-111,-112,53,53,53,-42,53,-105,-119,-121,-22,53,-120,]),'PUBLIC':([0,5,6,7,8,9,10,11,12,18,20,28,29,30,31,37,49,50,51,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,114,115,116,120,124,125,128,137,142,156,159,160,161,172,173,174,189,191,195,197,206,207,208,210,216,217,218,222,232,237,247,251,256,257,258,259,260,262,265,267,273,275,278,279,280,282,],[54,-4,-5,-6,-7,-8,-9,-10,-11,54,54,-99,-100,-101,-102,54,54,-115,-116,-12,-13,-14,54,54,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,54,54,-62,-63,-64,-65,-66,-67,-79,-80,-81,-82,-83,54,-46,-47,54,54,-122,54,54,54,-32,-17,-19,54,-123,54,54,-31,-33,54,54,54,54,54,-18,-20,-21,54,-108,-109,-110,-127,54,54,54,-41,54,-111,-112,54,54,54,-42,54,-105,-119,-121,-22,54,-120,]),'PROTECTED':([0,5,6,7,8,9,10,11,12,18,20,28,29,30,31,37,49,50,51,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,114,115,116,120,124,125,128,137,142,156,159,160,161,172,173,174,189,191,195,197,206,207,208,210,216,217,218,222,232,237,247,251,256,257,258,259,260,262,265,267,273,275,278,279,280,282,],[55,-4,-5,-6,-7,-8,-9,-10,-11,55,55,-99,-100,-101,-102,55,55,-115,-116,-12,-13,-14,55,55,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,55,55,-62,-63,-64,-65,-66,-67,-79,-80,-81,-82,-83,55,-46,-47,55,55,-122,55,55,55,-32,-17,-19,55,-123,55,55,-31,-33,55,55,55,55,55,-18,-20,-21,55,-108,-109,-110,-127,55,55,55,-41,55,-111,-112,55,55,55,-42,55,-105,-119,-121,-22,55,-120,]),'STATIC':([0,5,6,7,8,9,10,11,12,18,20,28,29,30,31,37,49,50,51,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,114,115,116,120,124,125,128,137,142,156,159,160,161,172,173,174,189,191,195,197,206,207,208,210,216,217,218,222,232,237,247,251,256,257,258,259,260,262,265,267,273,275,278,279,280,282,],[56,-4,-5,-6,-7,-8,-9,-10,-11,56,56,-99,-100,-101,-102,56,56,-115,-116,-12,-13,-14,56,56,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,56,56,-62,-63,-64,-65,-66,-67,-79,-80,-81,-82,-83,56,-46,-47,56,56,-122,56,56,56,-32,-17,-19,56,-123,56,56,-31,-33,56,56,56,56,56,-18,-20,-21,56,-108,-109,-110,-127,56,56,56,-41,56,-111,-112,56,56,56,-42,56,-105,-119,-121,-22,56,-120,]),'VAR':([0,5,6,7,8,9,10,11,12,18,20,28,29,30,31,37,49,50,51,61,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,114,115,116,120,124,125,128,137,142,156,159,160,161,172,173,174,189,191,195,197,206,207,208,210,216,217,218,222,232,237,247,251,256,257,258,259,260,262,265,267,273,275,278,279,280,282,],[57,-4,-5,-6,-7,-8,-9,-10,-11,57,57,-99,-100,-101,-102,57,57,-115,-116,-12,-13,-14,57,57,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,57,57,-62,-63,-64,-65,-66,-67,-79,-80,-81,-82,-83,57,-46,-47,57,57,-122,57,57,57,-32,-17,-19,57,-123,57,57,-31,-33,57,57,57,57,57,-18,-20,-21,57,-108,-109,-110,-127,57,57,57,-41,57,-111,-112,57,57,57,-42,57,-105,-119,-121,-22,57,-120,]),'IF':([0,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,125,128,137,142,159,160,172,173,206,207,208,210,222,232,237,247,251,256,259,262,265,267,273,275,278,279,280,282,],[58,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,58,-32,-17,-19,-123,58,-31,-33,-18,-20,-21,58,-127,58,58,58,-41,58,58,58,-42,58,-105,-119,-121,-22,58,-120,]),'CADENA':([0,5,6,7,8,9,10,11,12,18,20,28,29,30,31,41,49,61,62,63,64,68,69,70,71,72,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,104,109,116,125,128,137,142,154,159,160,172,173,174,179,188,195,197,206,207,208,210,222,232,237,239,247,251,256,259,262,265,267,273,275,278,279,280,282,],[22,-4,-5,-6,-7,-8,-9,-10,-11,22,22,-99,-100,-101,-102,22,22,-12,-13,-14,22,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,22,22,-62,-63,-64,-65,-66,-67,-79,-80,-81,-82,-83,22,143,-46,-47,22,-122,22,-32,-17,-19,22,-123,22,-31,-33,22,209,22,22,22,-18,-20,-21,22,-127,22,22,22,22,-41,22,22,22,-42,22,-105,-119,-121,-22,22,-120,]),'$end':([1,2,3,5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,128,137,142,159,172,173,199,206,207,208,222,251,265,273,275,278,279,282,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,-32,-17,-19,-123,-31,-33,-3,-18,-20,-21,-127,-41,-42,-105,-119,-121,-22,-120,]),'IDENTIFICADOR':([4,25,32,107,182,250,],[60,102,105,147,212,264,]),'LLAVE_CIERRA':([5,6,7,8,9,10,11,12,28,29,30,31,61,62,63,103,104,116,128,137,142,159,170,172,173,192,193,194,206,207,208,222,236,245,246,249,251,252,261,265,266,267,268,271,273,274,275,278,279,281,282,],[-4,-5,-6,-7,-8,-9,-10,-11,-99,-100,-101,-102,-12,-13,-14,-46,-47,-122,-32,-17,-19,-123,199,-31,-33,222,-103,-104,-18,-20,-21,-127,251,-117,-118,263,-41,265,270,-42,273,-106,275,278,-105,-107,-119,-121,-22,282,-120,]),'FIN_LINEA':([13,14,15,17,22,26,27,33,34,35,36,48,50,51,59,65,79,80,81,82,83,98,102,106,110,123,126,127,129,130,131,132,133,134,138,139,140,147,149,152,153,163,164,176,177,178,183,184,185,205,223,224,225,226,227,228,233,234,241,242,272,],[61,62,63,-98,-39,103,104,-94,-95,-96,-97,-90,-115,-116,-15,-113,137,-16,-37,-38,-40,142,-29,-114,-53,-87,-36,172,173,-34,-35,-91,-92,-93,-84,-85,-86,-30,-52,-55,-57,-88,-89,206,207,208,-48,-54,-56,-49,245,246,-16,-37,-38,-40,-50,-51,257,258,279,]),'IGUAL':([16,22,81,82,83,102,113,147,157,221,254,],[64,-39,-37,-38,-40,-29,155,-30,64,244,155,]),'LAMBDA':([16,102,126,147,225,],[67,-29,171,-30,67,]),'SUMA':([16,19,22,46,47,48,59,80,81,82,83,102,138,147,200,203,204,223,225,226,227,228,],[-16,86,-39,-37,-38,-40,-15,-16,-37,-38,-40,-29,86,-30,-16,-15,86,86,-16,-37,-38,-40,]),'RESTA':([16,19,22,46,47,48,59,80,81,82,83,102,138,147,200,203,204,223,225,226,227,228,],[-16,87,-39,-37,-38,-40,-15,-16,-37,-38,-40,-29,87,-30,-16,-15,87,87,-16,-37,-38,-40,]),'MULTIPLICACION':([16,19,22,46,47,48,59,80,81,82,83,102,138,147,200,203,204,223,225,226,227,228,],[-16,88,-39,-37,-38,-40,-15,-16,-37,-38,-40,-29,88,-30,-16,-15,88,88,-16,-37,-38,-40,]),'DIVISION':([16,19,22,46,47,48,59,80,81,82,83,102,138,147,200,203,204,223,225,226,227,228,],[-16,89,-39,-37,-38,-40,-15,-16,-37,-38,-40,-29,89,-30,-16,-15,89,89,-16,-37,-38,-40,]),'POTENCIA':([16,19,22,46,47,48,59,80,81,82,83,102,138,147,200,203,204,223,225,226,227,228,],[-16,90,-39,-37,-38,-40,-15,-16,-37,-38,-40,-29,90,-30,-16,-15,90,90,-16,-37,-38,-40,]),'MODULO':([16,19,22,46,47,48,59,80,81,82,83,102,138,147,200,203,204,223,225,226,227,228,],[-16,91,-39,-37,-38,-40,-15,-16,-37,-38,-40,-29,91,-30,-16,-15,91,91,-16,-37,-38,-40,]),'CONJUNCION':([16,19,22,46,47,48,59,102,147,223,225,226,227,228,],[-16,92,-39,-37,-38,-40,-15,-29,-30,92,-16,-37,-38,-40,]),'DISYUNCION':([16,19,22,46,47,48,59,102,147,223,225,226,227,228,],[-16,93,-39,-37,-38,-40,-15,-29,-30,93,-16,-37,-38,-40,]),'DISYUNCION_EXC':([16,19,22,46,47,48,59,102,147,223,225,226,227,228,],[-16,94,-39,-37,-38,-40,-15,-29,-30,94,-16,-37,-38,-40,]),'DESPLAZAR_BITS_IZQ':([16,19,22,46,47,48,59,102,147,223,225,226,227,228,],[-16,95,-39,-37,-38,-40,-15,-29,-30,95,-16,-37,-38,-40,]),'DESPLAZAR_BITS_DER':([16,19,22,46,47,48,59,102,147,223,225,226,227,228,],[-16,96,-39,-37,-38,-40,-15,-29,-30,96,-16,-37,-38,-40,]),'IGUALDAD':([16,46,47,102,147,162,166,167,169,225,226,227,],[68,68,68,-29,-30,68,68,68,68,68,68,68,]),'IDENTIDAD':([16,46,47,102,147,162,166,167,169,225,226,227,],[69,69,69,-29,-30,69,69,69,69,69,69,69,]),'DIFERENTE':([16,46,47,102,147,162,166,167,169,225,226,227,],[70,70,70,-29,-30,70,70,70,70,70,70,70,]),'NO_IDENTIDAD':([16,46,47,102,147,162,166,167,169,225,226,227,],[71,71,71,-29,-30,71,71,71,71,71,71,71,]),'MAYOR':([16,46,47,102,147,155,162,166,167,169,225,226,227,244,],[72,72,72,-29,-30,188,72,72,72,72,72,72,72,260,]),'MAYOR_IGUAL':([16,46,47,102,147,162,166,167,169,190,225,226,227,],[73,73,73,-29,-30,73,73,73,73,220,73,73,73,]),'MENOR':([16,46,47,102,147,162,166,167,169,225,226,227,],[74,74,74,-29,-30,74,74,74,74,74,74,74,]),'MENOR_IGUAL':([16,46,47,102,147,162,166,167,169,190,225,226,227,],[75,75,75,-29,-30,75,75,75,75,219,75,75,75,]),'AND':([16,46,47,102,147,162,166,167,169,225,226,227,],[76,76,76,-29,-30,76,76,76,76,76,76,76,]),'OR':([16,46,47,102,147,162,166,167,169,225,226,227,],[77,77,77,-29,-30,77,77,77,77,77,77,77,]),'XOR':([16,46,47,102,147,162,166,167,169,225,226,227,],[78,78,78,-29,-30,78,78,78,78,78,78,78,]),'PARENTESIS_ABRE':([20,21,23,24,40,42,43,45,58,105,108,119,135,136,],[97,99,100,101,109,114,115,120,124,146,148,161,174,175,]),'COMA':([22,81,82,83,113,145,186,209,212,213,],[-39,-37,-38,-40,154,179,154,235,238,239,]),'CORCHETE_CIERRA':([22,41,81,82,83,111,112,113,186,187,213,255,],[-39,110,-37,-38,-40,152,153,-60,-60,-61,-58,-59,]),'PARENTESIS_CIERRA':([22,50,51,59,65,80,81,82,83,102,106,109,113,130,131,132,133,134,138,139,141,143,144,146,147,148,150,151,163,164,165,168,175,181,186,187,196,200,201,202,203,212,213,214,221,230,231,253,255,264,269,],[-39,-115,-116,-15,-113,-16,-37,-38,-40,-29,-114,149,-60,-34,-35,-91,-92,-93,-84,-85,176,177,178,180,-30,183,184,185,-88,-89,198,-90,205,211,-60,-61,229,-36,233,234,-34,-44,-58,240,243,-36,248,-45,-59,272,276,]),'STACK':([39,],[108,]),'ELSE':([44,117,263,270,277,],[118,118,-124,-125,-126,]),'ELSEIF':([44,263,270,],[119,-124,119,]),'LLAVE_ABRE':([60,118,180,198,211,229,240,243,248,276,],[125,160,210,232,237,247,256,259,262,280,]),'NULO':([64,68,69,70,71,72,73,74,75,76,77,78,174,197,],[131,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,131,131,]),'PUSH':([67,],[135,]),'POP':([67,171,],[136,136,]),'STDIN':([100,101,],[144,145,]),'AS':([102,147,158,],[-29,-30,191,]),'RETURN':([160,210,232,237,247,],[195,195,195,195,195,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'clase':([0,],[2,]),'instrucciones':([0,125,160,210,232,237,247,256,259,262,267,280,],[3,170,193,193,193,193,193,267,267,271,267,267,]),'asignacion':([0,114,125,160,210,232,237,247,256,259,262,267,280,],[5,156,5,5,5,5,5,5,5,5,5,5,5,]),'salida':([0,125,160,210,232,237,247,256,259,262,267,280,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'ingreso':([0,125,160,210,232,237,247,256,259,262,267,280,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'estructuras_datos':([0,64,125,160,210,232,237,247,256,259,262,267,280,],[8,128,8,8,8,8,8,8,8,8,8,8,8,]),'estructuras_control':([0,125,160,210,232,237,247,256,259,262,267,280,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'funcion':([0,125,160,210,232,237,247,256,259,262,267,280,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'operaciones':([0,125,160,195,210,232,237,247,256,259,262,267,280,],[13,13,13,224,13,13,13,13,13,13,13,13,13,]),'declaracion_s':([0,125,160,189,210,232,237,247,256,259,262,267,280,],[14,14,14,214,14,14,14,14,14,14,14,14,14,]),'decl_variable':([0,18,20,37,49,64,66,84,85,97,114,115,120,124,125,156,160,161,174,189,191,195,197,210,232,237,247,256,259,260,262,267,280,],[16,80,80,106,80,126,132,80,80,80,157,158,162,169,16,190,16,169,200,215,221,225,230,16,16,16,16,16,16,269,16,16,16,]),'poppila':([0,64,125,160,195,210,232,237,247,256,259,262,267,280,],[17,129,17,17,17,17,17,17,17,17,17,17,17,17,]),'salidas_posibles':([0,18,20,49,84,85,97,125,160,174,195,210,232,237,247,256,259,262,267,280,],[19,79,98,123,138,140,141,19,19,204,223,19,19,19,19,19,19,19,19,19,]),'pila':([0,64,125,160,210,232,237,247,256,259,262,267,280,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'arreglo':([0,64,125,160,210,232,237,247,256,259,262,267,280,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'for':([0,125,160,210,232,237,247,256,259,262,267,280,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'foreach':([0,125,160,210,232,237,247,256,259,262,267,280,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'if_else':([0,125,160,210,232,237,247,256,259,262,267,280,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'while':([0,125,160,210,232,237,247,256,259,262,267,280,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'operaciones_logicas':([0,124,125,160,161,195,210,232,237,247,256,259,262,267,280,],[33,165,33,33,196,33,33,33,33,33,33,33,33,33,33,]),'operaciones_arit':([0,84,125,160,174,195,210,232,237,247,256,259,262,267,280,],[34,139,34,34,202,34,34,34,34,34,34,34,34,34,34,]),'operaciones_bits':([0,125,160,195,210,232,237,247,256,259,262,267,280,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'pushpila':([0,125,160,195,210,232,237,247,256,259,262,267,280,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'crecimiento':([0,16,125,160,189,210,215,232,237,247,256,259,262,267,280,],[37,65,37,37,37,37,65,37,37,37,37,37,37,37,37,]),'variable_tipo':([0,18,20,37,49,64,66,84,85,97,114,115,120,124,125,156,160,161,174,189,191,195,197,210,232,237,247,256,259,260,262,267,280,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'if_else_inicio':([0,125,160,210,232,237,247,256,259,262,267,280,],[44,44,44,44,44,44,44,44,44,44,44,44,]),'datos':([0,18,20,41,49,64,84,85,97,109,125,154,160,174,188,195,197,210,232,237,239,247,256,259,262,267,280,],[59,59,59,113,59,130,59,59,59,113,59,186,59,203,213,59,130,59,59,59,254,59,59,59,59,59,59,]),'operad_logico':([16,46,47,162,166,167,169,225,226,227,],[66,121,122,197,121,122,66,66,121,122,]),'operad_arit':([19,138,204,223,],[84,84,84,84,]),'operand_bits':([19,223,],[85,85,]),'elementos':([41,109,154,],[111,150,187,]),'asociacion':([41,109,239,],[112,151,255,]),'if_else_fin':([44,117,],[116,159,]),'if_else_cuerpo':([44,270,],[117,277,]),'valor':([64,174,197,],[127,201,231,]),'parametros':([146,238,],[181,253,]),'declaracionp':([156,],[189,]),'bloque':([160,210,232,237,247,],[192,236,249,252,261,]),'retorno':([160,210,232,237,247,],[194,194,194,194,194,]),'valorc':([190,],[216,]),'menor':([190,],[217,]),'mayor':([190,],[218,]),'sentenciasAnidadas':([256,259,267,280,],[266,268,274,281,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> clase','programa',1,'p_programa','sintactico.py',5),
  ('programa -> instrucciones','programa',1,'p_programa','sintactico.py',6),
  ('clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA','clase',5,'p_clase','sintactico.py',10),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> salida','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> ingreso','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> estructuras_datos','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> estructuras_control','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> funcion','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> COMENTARIO_LINEA','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> COMENTARIO_BLOQUE','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> operaciones FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> declaracion_s FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> BREAK FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',23),
  ('salidas_posibles -> datos','salidas_posibles',1,'p_salidas_posibles','sintactico.py',29),
  ('salidas_posibles -> decl_variable','salidas_posibles',1,'p_salidas_posibles','sintactico.py',30),
  ('salida -> ECHO salidas_posibles FIN_LINEA','salida',3,'p_salida_forma1','sintactico.py',34),
  ('salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA','salida',5,'p_salida_forma2','sintactico.py',37),
  ('salida -> PRINT salidas_posibles FIN_LINEA','salida',3,'p_salida_forma3','sintactico.py',40),
  ('ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma1','sintactico.py',45),
  ('ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma2','sintactico.py',48),
  ('ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA','ingreso',10,'p_ingreso_forma3','sintactico.py',51),
  ('variable_tipo -> CONST','variable_tipo',1,'p_variable_tipo','sintactico.py',56),
  ('variable_tipo -> PRIVATE','variable_tipo',1,'p_variable_tipo','sintactico.py',57),
  ('variable_tipo -> PUBLIC','variable_tipo',1,'p_variable_tipo','sintactico.py',58),
  ('variable_tipo -> PROTECTED','variable_tipo',1,'p_variable_tipo','sintactico.py',59),
  ('variable_tipo -> STATIC','variable_tipo',1,'p_variable_tipo','sintactico.py',60),
  ('variable_tipo -> VAR','variable_tipo',1,'p_variable_tipo','sintactico.py',61),
  ('decl_variable -> SIGNO_DOLAR IDENTIFICADOR','decl_variable',2,'p_decl_variable','sintactico.py',67),
  ('decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR','decl_variable',3,'p_decl_variable','sintactico.py',68),
  ('asignacion -> decl_variable IGUAL valor FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',71),
  ('asignacion -> decl_variable IGUAL estructuras_datos','asignacion',3,'p_asignacion','sintactico.py',72),
  ('asignacion -> decl_variable IGUAL poppila FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',73),
  ('valor -> datos','valor',1,'p_valor','sintactico.py',77),
  ('valor -> NULO','valor',1,'p_valor','sintactico.py',78),
  ('valor -> decl_variable','valor',1,'p_valor','sintactico.py',79),
  ('datos -> ENTERO','datos',1,'p_datos','sintactico.py',83),
  ('datos -> FLOTANTE','datos',1,'p_datos','sintactico.py',84),
  ('datos -> CADENA','datos',1,'p_datos','sintactico.py',85),
  ('datos -> BOOLEANO','datos',1,'p_datos','sintactico.py',86),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','funcion',7,'p_funcion','sintactico.py',92),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','funcion',8,'p_funcion_parametros','sintactico.py',96),
  ('funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA','funcionuso',4,'p_funcionenuso','sintactico.py',99),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR','parametros',2,'p_parametros','sintactico.py',103),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros','parametros',4,'p_parametros','sintactico.py',104),
  ('estructuras_datos -> pila FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','sintactico.py',110),
  ('estructuras_datos -> arreglo FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','sintactico.py',111),
  ('pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA','pila',4,'p_pila','sintactico.py',114),
  ('poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA','poppila',5,'p_pop','sintactico.py',117),
  ('pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA','pushpila',6,'p_push','sintactico.py',121),
  ('pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA','pushpila',6,'p_push','sintactico.py',122),
  ('arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA','arreglo',3,'p_arreglo_vacio','sintactico.py',126),
  ('arreglo -> CORCHETE_ABRE CORCHETE_CIERRA','arreglo',2,'p_arreglo_vacio','sintactico.py',127),
  ('arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA','arreglo',4,'p_arreglo_indexado','sintactico.py',131),
  ('arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA','arreglo',3,'p_arreglo_indexado','sintactico.py',132),
  ('arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA','arreglo',4,'p_arreglo_asociativo','sintactico.py',136),
  ('arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA','arreglo',3,'p_arreglo_asociativo','sintactico.py',137),
  ('asociacion -> datos IGUAL MAYOR datos','asociacion',4,'p_asociacion','sintactico.py',141),
  ('asociacion -> datos IGUAL MAYOR datos COMA asociacion','asociacion',6,'p_asociacion','sintactico.py',142),
  ('elementos -> datos','elementos',1,'p_elementos','sintactico.py',145),
  ('elementos -> datos COMA elementos','elementos',3,'p_elementos','sintactico.py',146),
  ('operad_arit -> SUMA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',151),
  ('operad_arit -> RESTA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',152),
  ('operad_arit -> MULTIPLICACION','operad_arit',1,'p_operad_aritmeticas','sintactico.py',153),
  ('operad_arit -> DIVISION','operad_arit',1,'p_operad_aritmeticas','sintactico.py',154),
  ('operad_arit -> POTENCIA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',155),
  ('operad_arit -> MODULO','operad_arit',1,'p_operad_aritmeticas','sintactico.py',156),
  ('operad_logico -> IGUALDAD','operad_logico',1,'p_operad_logicos','sintactico.py',160),
  ('operad_logico -> IDENTIDAD','operad_logico',1,'p_operad_logicos','sintactico.py',161),
  ('operad_logico -> DIFERENTE','operad_logico',1,'p_operad_logicos','sintactico.py',162),
  ('operad_logico -> NO_IDENTIDAD','operad_logico',1,'p_operad_logicos','sintactico.py',163),
  ('operad_logico -> MAYOR','operad_logico',1,'p_operad_logicos','sintactico.py',164),
  ('operad_logico -> MAYOR_IGUAL','operad_logico',1,'p_operad_logicos','sintactico.py',165),
  ('operad_logico -> MENOR','operad_logico',1,'p_operad_logicos','sintactico.py',166),
  ('operad_logico -> MENOR_IGUAL','operad_logico',1,'p_operad_logicos','sintactico.py',167),
  ('operad_logico -> AND','operad_logico',1,'p_operad_logicos','sintactico.py',168),
  ('operad_logico -> OR','operad_logico',1,'p_operad_logicos','sintactico.py',169),
  ('operad_logico -> XOR','operad_logico',1,'p_operad_logicos','sintactico.py',170),
  ('operand_bits -> CONJUNCION','operand_bits',1,'p_operad_bits','sintactico.py',176),
  ('operand_bits -> DISYUNCION','operand_bits',1,'p_operad_bits','sintactico.py',177),
  ('operand_bits -> DISYUNCION_EXC','operand_bits',1,'p_operad_bits','sintactico.py',178),
  ('operand_bits -> DESPLAZAR_BITS_IZQ','operand_bits',1,'p_operad_bits','sintactico.py',179),
  ('operand_bits -> DESPLAZAR_BITS_DER','operand_bits',1,'p_operad_bits','sintactico.py',180),
  ('operaciones_arit -> salidas_posibles operad_arit salidas_posibles','operaciones_arit',3,'p_operaciones_arit','sintactico.py',186),
  ('operaciones_arit -> salidas_posibles operad_arit operaciones_arit','operaciones_arit',3,'p_operaciones_arit','sintactico.py',187),
  ('operaciones_bits -> salidas_posibles operand_bits salidas_posibles','operaciones_bits',3,'p_operaciones_bits','sintactico.py',191),
  ('operaciones_bits -> NEGACION salidas_posibles','operaciones_bits',2,'p_operaciones_bits','sintactico.py',192),
  ('operaciones_logicas -> ENTERO operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',196),
  ('operaciones_logicas -> FLOTANTE operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',197),
  ('operaciones_logicas -> BOOLEANO','operaciones_logicas',1,'p_operaciones_logica','sintactico.py',198),
  ('operaciones_logicas -> decl_variable operad_logico decl_variable','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',199),
  ('operaciones_logicas -> decl_variable operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',200),
  ('operaciones_logicas -> decl_variable operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',201),
  ('operaciones -> operaciones_logicas','operaciones',1,'p_operaciones','sintactico.py',205),
  ('operaciones -> operaciones_arit','operaciones',1,'p_operaciones','sintactico.py',206),
  ('operaciones -> operaciones_bits','operaciones',1,'p_operaciones','sintactico.py',207),
  ('operaciones -> pushpila','operaciones',1,'p_operaciones','sintactico.py',208),
  ('operaciones -> poppila','operaciones',1,'p_operaciones','sintactico.py',209),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','sintactico.py',215),
  ('estructuras_control -> foreach','estructuras_control',1,'p_estructuras_control','sintactico.py',216),
  ('estructuras_control -> if_else','estructuras_control',1,'p_estructuras_control','sintactico.py',217),
  ('estructuras_control -> while','estructuras_control',1,'p_estructuras_control','sintactico.py',218),
  ('bloque -> instrucciones','bloque',1,'p_bloque','sintactico.py',223),
  ('bloque -> retorno','bloque',1,'p_bloque','sintactico.py',224),
  ('for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','for',9,'p_for','sintactico.py',230),
  ('sentenciasAnidadas -> instrucciones','sentenciasAnidadas',1,'p_sentenciasAnidadas','sintactico.py',233),
  ('sentenciasAnidadas -> instrucciones sentenciasAnidadas','sentenciasAnidadas',2,'p_sentenciasAnidadas','sintactico.py',234),
  ('declaracionp -> decl_variable valorc','declaracionp',2,'p_declaracionM','sintactico.py',238),
  ('valorc -> menor','valorc',1,'p_valorC','sintactico.py',241),
  ('valorc -> mayor','valorc',1,'p_valorC','sintactico.py',242),
  ('menor -> MENOR_IGUAL ENTERO FIN_LINEA','menor',3,'p_menor','sintactico.py',245),
  ('mayor -> MAYOR_IGUAL ENTERO FIN_LINEA','mayor',3,'p_mayor','sintactico.py',248),
  ('declaracion_s -> decl_variable crecimiento','declaracion_s',2,'p_declaracionsimple','sintactico.py',251),
  ('declaracion_s -> crecimiento decl_variable','declaracion_s',2,'p_declaracionsimple','sintactico.py',252),
  ('crecimiento -> INCREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',256),
  ('crecimiento -> DECREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',257),
  ('retorno -> RETURN salidas_posibles FIN_LINEA','retorno',3,'p_retorno','sintactico.py',260),
  ('retorno -> RETURN operaciones FIN_LINEA','retorno',3,'p_retorno','sintactico.py',261),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',9,'p_foreach','sintactico.py',267),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',12,'p_foreach','sintactico.py',268),
  ('while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','while',9,'p_while','sintactico.py',274),
  ('if_else -> if_else_inicio if_else_fin','if_else',2,'p_if_else_corto','sintactico.py',279),
  ('if_else -> if_else_inicio if_else_cuerpo if_else_fin','if_else',3,'p_if_else_extendido','sintactico.py',283),
  ('if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_inicio',7,'p_if_else_inicio','sintactico.py',287),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_cuerpo',7,'p_if_else_cuerpo','sintactico.py',291),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo','if_else_cuerpo',8,'p_if_else_cuerpo','sintactico.py',292),
  ('if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA','if_else_fin',4,'p_if_else_fin','sintactico.py',297),
]
