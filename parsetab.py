
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY AS BACKSLASH BOOLEANO BREAK CADENA CLASS COMA COMENTARIO_BLOQUE COMENTARIO_LINEA CONJUNCION CONJUNCIONBITS CONST CORCHETE_ABRE CORCHETE_CIERRA DECREMENTO DESPLAZAR_BITS_DER DESPLAZAR_BITS_IZQ DIFERENTE DISYUNCION DISYUNCIONBITS DISYUNCION_EXC DIVISION ECHO ELSE ELSEIF ENTERO EXPLODE FGETS FIN_LINEA FLOTANTE FOR FOREACH FSCANF FUNCTION IDENTIDAD IDENTIFICADOR IF IGUAL IGUALDAD INCREMENTO LAMBDA LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NEGACION NEW NO_IDENTIDAD NULO OR PARENTESIS_ABRE PARENTESIS_CIERRA POP POTENCIA PRINT PRIVATE PROTECTED PUBLIC PUNTO PUSH READLINE RESTA RETURN SIGNO_DOLAR STACK STATIC STDIN SUMA VAR WHILE XOR variaslineas : programa\n                    | programa variaslineasprograma : clase\n              | instrucciones\n  clase : CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRAinstrucciones : asignacion\n            | salida\n            | ingreso\n            | estructuras_datos\n            | estructuras_control\n            | funcionglobal\n            | COMENTARIO_LINEA\n            | COMENTARIO_BLOQUE\n            | operaciones FIN_LINEA\n            | declaracion_s FIN_LINEA\n            | BREAK FIN_LINEA\n  salidas_posibles : datos\n                | decl_variable\n  salida : ECHO salidas_posibles FIN_LINEAsalida : PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEAsalida : PRINT salidas_posibles FIN_LINEAingreso : READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEAingreso : FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEAingreso : FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEAvariable_tipo : CONST\n                  | PRIVATE\n                  | PUBLIC\n                  | PROTECTED\n                  | STATIC\n                  | VAR\n  decl_variable : SIGNO_DOLAR IDENTIFICADOR\n                    | variable_tipo SIGNO_DOLAR IDENTIFICADORasignacion : decl_variable IGUAL valor FIN_LINEA\n                | decl_variable IGUAL estructuras_datos\n                | decl_variable IGUAL explode FIN_LINEA\n                | decl_variable IGUAL funcionuso FIN_LINEA\n                | decl_variable IGUAL operaciones FIN_LINEA\n  valor : datos\n            | pila\n            | NULO\n            | decl_variable\n            | opAritVar\n            \n  datos : ENTERO\n          | FLOTANTE\n          | CADENA \n          | BOOLEANO\n  funcion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRAfuncion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRAfuncionglobal : funcion\n                    | variable_tipo funcion\n    funcionuso : IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA\n                | IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA\n  parametros : SIGNO_DOLAR IDENTIFICADOR\n                  | SIGNO_DOLAR IDENTIFICADOR COMA parametros\n   estructuras_datos : pila FIN_LINEA\n                        | arreglo FIN_LINEA\n  pila :  NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRApoppila : decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA\n  pushpila : decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA\n            | decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA\n  explode : EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA\n                | EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA\n    arreglo : ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA\n              | CORCHETE_ABRE CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA\n              | CORCHETE_ABRE elementos CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA\n              | CORCHETE_ABRE asociacion CORCHETE_CIERRA\n  asociacion : datos IGUAL MAYOR datos\n                  | datos IGUAL MAYOR datos COMA asociacion\n  elementos : datos\n                  | datos COMA elementos\n    operad_arit : SUMA\n                | RESTA\n                | MULTIPLICACION\n                | DIVISION\n                | POTENCIA\n                | MODULO\n  operad_logico : IGUALDAD\n                | IDENTIDAD\n                | DIFERENTE\n                | NO_IDENTIDAD\n                | MAYOR\n                | MAYOR_IGUAL\n                | MENOR\n                | MENOR_IGUAL\n                | AND\n                | OR\n                | XOR\n                | CONJUNCION\n                | DISYUNCION\n  operand_bits : CONJUNCIONBITS\n                  | DISYUNCIONBITS\n                  | DISYUNCION_EXC\n                  | DESPLAZAR_BITS_IZQ\n                  | DESPLAZAR_BITS_DER\n  operaciones_arit : salidas_posibles operad_arit salidas_posibles\n                | salidas_posibles operad_arit operaciones_arit\n                \n  operaciones_bits : salidas_posibles operand_bits salidas_posibles\n                  | NEGACION salidas_posibles\n   operaciones_logicas : ENTERO operad_logico ENTERO\n                | FLOTANTE operad_logico FLOTANTE\n                | BOOLEANO\n                | decl_variable operad_logico decl_variable\n                | decl_variable operad_logico ENTERO\n                | decl_variable operad_logico FLOTANTE\n                | operaciones_arit operad_logico ENTERO\n                | operaciones_arit operad_logico FLOTANTE\n                | funcionuso\n                | funcionuso operad_logico funcionuso\n                | funcionuso operad_logico operaciones_logicas\n                | operaciones_logicas operad_logico funcionuso\n  operaciones : operaciones_logicas\n                  | operaciones_arit\n                  | operaciones_bits\n                  | pushpila\n                  | poppila\n  paraCalculos : ENTERO\n                  | FLOTANTE\n                  | decl_variablecombinarOp : operad_arit paraCalculos\n                | operad_arit paraCalculos combinarOpopAritVar : paraCalculos combinarOp estructuras_control : for\n                          | foreach\n                          | if_else\n                          | while\n   bloque : sentenciasAnidadas retorno\n            | sentenciasAnidadas\n            | retorno\n  for : FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRAsentenciasAnidadas : instrucciones \n            | instrucciones sentenciasAnidadas\n  declaracionp :  decl_variable valorc valorc : menor\n              | mayormenor : MENOR_IGUAL ENTERO FIN_LINEA\n            | MENOR_IGUAL decl_variable FIN_LINEA\n            | MENOR ENTERO FIN_LINEA\n            | MENOR decl_variable FIN_LINEA\n  mayor : MAYOR_IGUAL ENTERO FIN_LINEA\n            | MENOR_IGUAL decl_variable FIN_LINEA\n            | MAYOR ENTERO FIN_LINEA\n            | MAYOR decl_variable FIN_LINEA\n  declaracion_s : decl_variable crecimiento\n                    | crecimiento decl_variable\n   crecimiento : INCREMENTO \n                | DECREMENTO retorno : RETURN salidas_posibles FIN_LINEA\n              | RETURN operaciones FIN_LINEA\n  foreach : FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n              | FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n  while : WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA if_else : if_else_inicio if_else_fin if_else : if_else_inicio if_else_cuerpo if_else_finif_else_inicio : IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo : ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA\n                    |  ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo\n  if_else_fin : ELSE LLAVE_ABRE bloque LLAVE_CIERRA'
    
_lr_action_items = {'CLASS':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,145,168,173,192,205,206,207,208,235,250,251,252,265,319,330,333,334,337,339,342,],[5,5,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,-34,-19,-21,-155,-33,-35,-36,-37,-5,-20,-22,-23,-159,-47,-48,-131,-151,-153,-24,-152,]),'COMENTARIO_LINEA':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[13,13,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,13,-34,-19,-21,-155,13,13,-33,-35,-36,-37,-5,-20,-22,-23,-159,13,13,13,13,13,13,13,-47,-48,-131,-151,-153,-24,13,-152,]),'COMENTARIO_BLOQUE':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[14,14,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,14,-34,-19,-21,-155,14,14,-33,-35,-36,-37,-5,-20,-22,-23,-159,14,14,14,14,14,14,14,-47,-48,-131,-151,-153,-24,14,-152,]),'BREAK':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[17,17,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,17,-34,-19,-21,-155,17,17,-33,-35,-36,-37,-5,-20,-22,-23,-159,17,17,17,17,17,17,17,-47,-48,-131,-151,-153,-24,17,-152,]),'ECHO':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[20,20,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,20,-34,-19,-21,-155,20,20,-33,-35,-36,-37,-5,-20,-22,-23,-159,20,20,20,20,20,20,20,-47,-48,-131,-151,-153,-24,20,-152,]),'PRINT':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[22,22,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,22,-34,-19,-21,-155,22,22,-33,-35,-36,-37,-5,-20,-22,-23,-159,22,22,22,22,22,22,22,-47,-48,-131,-151,-153,-24,22,-152,]),'READLINE':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[23,23,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,23,-34,-19,-21,-155,23,23,-33,-35,-36,-37,-5,-20,-22,-23,-159,23,23,23,23,23,23,23,-47,-48,-131,-151,-153,-24,23,-152,]),'FGETS':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[25,25,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,25,-34,-19,-21,-155,25,25,-33,-35,-36,-37,-5,-20,-22,-23,-159,25,25,25,25,25,25,25,-47,-48,-131,-151,-153,-24,25,-152,]),'FSCANF':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[26,26,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,26,-34,-19,-21,-155,26,26,-33,-35,-36,-37,-5,-20,-22,-23,-159,26,26,26,26,26,26,26,-47,-48,-131,-151,-153,-24,26,-152,]),'SIGNO_DOLAR':([0,2,3,4,7,8,9,10,11,12,13,14,20,22,30,31,32,33,34,35,41,50,51,52,53,54,55,59,60,61,66,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,126,127,128,132,137,138,145,168,173,189,192,193,194,196,201,205,206,207,208,211,212,223,225,229,231,235,237,250,251,252,257,258,259,260,261,263,265,276,278,280,284,298,301,307,308,309,310,311,312,313,314,315,316,318,319,330,333,334,337,339,340,342,],[27,27,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,27,27,-124,-125,-126,-127,-49,116,27,-25,-26,-27,-28,-29,-30,27,-147,-148,141,-14,-15,-16,27,27,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,27,116,27,27,-73,-74,-75,-76,-77,-78,-92,-93,-94,-95,-96,27,-55,-56,-50,27,27,-154,27,27,27,-34,-19,-21,27,-155,27,27,141,27,-33,-35,-36,-37,27,27,27,27,27,27,-5,141,-20,-22,-23,-134,-135,-136,27,27,27,-159,27,27,27,304,27,27,27,-137,-138,-139,-140,-141,-143,-144,27,27,27,-47,-48,-131,-151,-153,-24,27,-152,]),'NEW':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,212,231,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[42,42,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,42,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-55,-56,-50,-154,42,-34,-19,-21,-155,42,42,-33,-35,-36,-37,42,42,-5,-20,-22,-23,-159,42,42,42,42,42,42,42,-47,-48,-131,-151,-153,-24,42,-152,]),'ARRAY':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,70,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[43,43,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,43,-55,-56,-50,-154,43,-34,-19,-21,-155,43,43,-33,-35,-36,-37,-5,-20,-22,-23,-159,43,43,43,43,43,43,43,-47,-48,-131,-151,-153,-24,43,-152,]),'CORCHETE_ABRE':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,70,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[44,44,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,44,-55,-56,-50,-154,44,-34,-19,-21,-155,44,44,-33,-35,-36,-37,-5,-20,-22,-23,-159,44,44,44,44,44,44,44,-47,-48,-131,-151,-153,-24,44,-152,]),'FOR':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[45,45,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,45,-34,-19,-21,-155,45,45,-33,-35,-36,-37,-5,-20,-22,-23,-159,45,45,45,45,45,45,45,-47,-48,-131,-151,-153,-24,45,-152,]),'FOREACH':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[46,46,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,46,-34,-19,-21,-155,46,46,-33,-35,-36,-37,-5,-20,-22,-23,-159,46,46,46,46,46,46,46,-47,-48,-131,-151,-153,-24,46,-152,]),'WHILE':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[48,48,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,48,-34,-19,-21,-155,48,48,-33,-35,-36,-37,-5,-20,-22,-23,-159,48,48,48,48,48,48,48,-47,-48,-131,-151,-153,-24,48,-152,]),'FUNCTION':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,35,50,51,52,53,54,55,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[49,49,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,49,-25,-26,-27,-28,-29,-30,-14,-15,-16,-55,-56,-50,-154,49,-34,-19,-21,-155,49,49,-33,-35,-36,-37,-5,-20,-22,-23,-159,49,49,49,49,49,49,49,-47,-48,-131,-151,-153,-24,49,-152,]),'CONST':([0,2,3,4,7,8,9,10,11,12,13,14,20,22,30,31,32,33,34,41,59,60,61,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,126,127,128,132,137,138,145,168,173,189,192,193,194,201,205,206,207,208,211,212,223,225,229,231,235,250,251,252,257,258,259,260,261,263,265,276,278,280,298,301,307,308,309,310,311,312,313,314,315,316,318,319,330,333,334,337,339,340,342,],[50,50,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,50,50,-124,-125,-126,-127,-49,50,50,-147,-148,-14,-15,-16,50,50,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,50,50,50,-73,-74,-75,-76,-77,-78,-92,-93,-94,-95,-96,50,-55,-56,-50,50,50,-154,50,50,50,-34,-19,-21,50,-155,50,50,50,-33,-35,-36,-37,50,50,50,50,50,50,-5,-20,-22,-23,-134,-135,-136,50,50,50,-159,50,50,50,50,50,50,-137,-138,-139,-140,-141,-143,-144,50,50,50,-47,-48,-131,-151,-153,-24,50,-152,]),'PRIVATE':([0,2,3,4,7,8,9,10,11,12,13,14,20,22,30,31,32,33,34,41,59,60,61,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,126,127,128,132,137,138,145,168,173,189,192,193,194,201,205,206,207,208,211,212,223,225,229,231,235,250,251,252,257,258,259,260,261,263,265,276,278,280,298,301,307,308,309,310,311,312,313,314,315,316,318,319,330,333,334,337,339,340,342,],[51,51,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,51,51,-124,-125,-126,-127,-49,51,51,-147,-148,-14,-15,-16,51,51,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,51,51,51,-73,-74,-75,-76,-77,-78,-92,-93,-94,-95,-96,51,-55,-56,-50,51,51,-154,51,51,51,-34,-19,-21,51,-155,51,51,51,-33,-35,-36,-37,51,51,51,51,51,51,-5,-20,-22,-23,-134,-135,-136,51,51,51,-159,51,51,51,51,51,51,-137,-138,-139,-140,-141,-143,-144,51,51,51,-47,-48,-131,-151,-153,-24,51,-152,]),'PUBLIC':([0,2,3,4,7,8,9,10,11,12,13,14,20,22,30,31,32,33,34,41,59,60,61,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,126,127,128,132,137,138,145,168,173,189,192,193,194,201,205,206,207,208,211,212,223,225,229,231,235,250,251,252,257,258,259,260,261,263,265,276,278,280,298,301,307,308,309,310,311,312,313,314,315,316,318,319,330,333,334,337,339,340,342,],[52,52,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,52,52,-124,-125,-126,-127,-49,52,52,-147,-148,-14,-15,-16,52,52,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,52,52,52,-73,-74,-75,-76,-77,-78,-92,-93,-94,-95,-96,52,-55,-56,-50,52,52,-154,52,52,52,-34,-19,-21,52,-155,52,52,52,-33,-35,-36,-37,52,52,52,52,52,52,-5,-20,-22,-23,-134,-135,-136,52,52,52,-159,52,52,52,52,52,52,-137,-138,-139,-140,-141,-143,-144,52,52,52,-47,-48,-131,-151,-153,-24,52,-152,]),'PROTECTED':([0,2,3,4,7,8,9,10,11,12,13,14,20,22,30,31,32,33,34,41,59,60,61,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,126,127,128,132,137,138,145,168,173,189,192,193,194,201,205,206,207,208,211,212,223,225,229,231,235,250,251,252,257,258,259,260,261,263,265,276,278,280,298,301,307,308,309,310,311,312,313,314,315,316,318,319,330,333,334,337,339,340,342,],[53,53,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,53,53,-124,-125,-126,-127,-49,53,53,-147,-148,-14,-15,-16,53,53,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,53,53,53,-73,-74,-75,-76,-77,-78,-92,-93,-94,-95,-96,53,-55,-56,-50,53,53,-154,53,53,53,-34,-19,-21,53,-155,53,53,53,-33,-35,-36,-37,53,53,53,53,53,53,-5,-20,-22,-23,-134,-135,-136,53,53,53,-159,53,53,53,53,53,53,-137,-138,-139,-140,-141,-143,-144,53,53,53,-47,-48,-131,-151,-153,-24,53,-152,]),'STATIC':([0,2,3,4,7,8,9,10,11,12,13,14,20,22,30,31,32,33,34,41,59,60,61,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,126,127,128,132,137,138,145,168,173,189,192,193,194,201,205,206,207,208,211,212,223,225,229,231,235,250,251,252,257,258,259,260,261,263,265,276,278,280,298,301,307,308,309,310,311,312,313,314,315,316,318,319,330,333,334,337,339,340,342,],[54,54,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,54,54,-124,-125,-126,-127,-49,54,54,-147,-148,-14,-15,-16,54,54,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,54,54,54,-73,-74,-75,-76,-77,-78,-92,-93,-94,-95,-96,54,-55,-56,-50,54,54,-154,54,54,54,-34,-19,-21,54,-155,54,54,54,-33,-35,-36,-37,54,54,54,54,54,54,-5,-20,-22,-23,-134,-135,-136,54,54,54,-159,54,54,54,54,54,54,-137,-138,-139,-140,-141,-143,-144,54,54,54,-47,-48,-131,-151,-153,-24,54,-152,]),'VAR':([0,2,3,4,7,8,9,10,11,12,13,14,20,22,30,31,32,33,34,41,59,60,61,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,126,127,128,132,137,138,145,168,173,189,192,193,194,201,205,206,207,208,211,212,223,225,229,231,235,250,251,252,257,258,259,260,261,263,265,276,278,280,298,301,307,308,309,310,311,312,313,314,315,316,318,319,330,333,334,337,339,340,342,],[55,55,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,55,55,-124,-125,-126,-127,-49,55,55,-147,-148,-14,-15,-16,55,55,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,55,55,55,-73,-74,-75,-76,-77,-78,-92,-93,-94,-95,-96,55,-55,-56,-50,55,55,-154,55,55,55,-34,-19,-21,55,-155,55,55,55,-33,-35,-36,-37,55,55,55,55,55,55,-5,-20,-22,-23,-134,-135,-136,55,55,55,-159,55,55,55,55,55,55,-137,-138,-139,-140,-141,-143,-144,55,55,55,-47,-48,-131,-151,-153,-24,55,-152,]),'ENTERO':([0,2,3,4,7,8,9,10,11,12,13,14,20,22,30,31,32,33,34,44,59,66,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,118,121,128,134,137,138,145,168,173,187,192,193,194,201,205,206,207,208,211,212,222,229,231,235,250,251,252,260,261,262,263,265,276,278,280,285,298,301,307,315,318,319,322,330,333,334,337,339,340,342,],[56,56,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,90,90,-124,-125,-126,-127,-49,90,90,90,-14,-15,-16,154,159,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,56,90,90,-73,-74,-75,-76,-77,-78,-92,-93,-94,-95,-96,90,-55,-56,-50,179,90,-154,197,56,56,-34,-19,-21,90,-155,56,56,56,-33,-35,-36,-37,240,247,90,270,247,-5,-20,-22,-23,287,289,291,292,-159,56,56,90,90,56,56,56,56,56,-47,331,-48,-131,-151,-153,-24,56,-152,]),'FLOTANTE':([0,2,3,4,7,8,9,10,11,12,13,14,20,22,30,31,32,33,34,44,59,66,67,68,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,118,121,128,135,137,138,145,168,173,187,192,193,194,201,205,206,207,208,211,212,222,229,231,235,250,251,252,265,276,278,280,285,298,301,307,315,318,319,330,333,334,337,339,340,342,],[57,57,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,91,91,-124,-125,-126,-127,-49,91,91,91,-14,-15,-16,155,160,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,57,91,91,-73,-74,-75,-76,-77,-78,-92,-93,-94,-95,-96,91,-55,-56,-50,180,91,-154,198,57,57,-34,-19,-21,91,-155,57,57,57,-33,-35,-36,-37,241,248,91,271,248,-5,-20,-22,-23,-159,57,57,91,91,57,57,57,57,57,-47,-48,-131,-151,-153,-24,57,-152,]),'BOOLEANO':([0,2,3,4,7,8,9,10,11,12,13,14,20,22,30,31,32,33,34,44,59,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,121,128,137,138,145,168,173,187,192,193,194,201,205,206,207,208,212,222,229,231,235,250,251,252,265,276,278,280,285,298,301,307,315,318,319,330,333,334,337,339,340,342,],[58,58,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,92,92,-124,-125,-126,-127,-49,92,92,92,-14,-15,-16,156,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,58,92,92,-73,-74,-75,-76,-77,-78,-92,-93,-94,-95,-96,92,-55,-56,-50,92,-154,58,58,-34,-19,-21,92,-155,58,58,58,-33,-35,-36,-37,92,92,156,92,-5,-20,-22,-23,-159,58,58,92,92,58,58,58,58,58,-47,-48,-131,-151,-153,-24,58,-152,]),'NEGACION':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,70,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,229,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[59,59,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,59,-55,-56,-50,-154,59,-34,-19,-21,-155,59,59,-33,-35,-36,-37,59,-5,-20,-22,-23,-159,59,59,59,59,59,59,59,-47,-48,-131,-151,-153,-24,59,-152,]),'INCREMENTO':([0,2,3,4,7,8,9,10,11,12,13,14,18,30,31,32,33,34,67,68,69,112,113,114,115,128,138,145,168,173,177,192,193,201,205,206,207,208,223,235,250,251,252,256,257,258,259,265,276,278,298,301,307,308,309,310,311,312,313,314,315,318,319,330,333,334,337,339,340,342,],[60,60,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,60,-124,-125,-126,-127,-49,-14,-15,-16,-31,-55,-56,-50,-154,60,-34,-19,-21,-32,-155,60,60,-33,-35,-36,-37,60,-5,-20,-22,-23,60,-134,-135,-136,-159,60,60,60,60,60,-137,-138,-139,-140,-141,-143,-144,60,60,-47,-48,-131,-151,-153,-24,60,-152,]),'DECREMENTO':([0,2,3,4,7,8,9,10,11,12,13,14,18,30,31,32,33,34,67,68,69,112,113,114,115,128,138,145,168,173,177,192,193,201,205,206,207,208,223,235,250,251,252,256,257,258,259,265,276,278,298,301,307,308,309,310,311,312,313,314,315,318,319,330,333,334,337,339,340,342,],[61,61,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,61,-124,-125,-126,-127,-49,-14,-15,-16,-31,-55,-56,-50,-154,61,-34,-19,-21,-32,-155,61,61,-33,-35,-36,-37,61,-5,-20,-22,-23,61,-134,-135,-136,-159,61,61,61,61,61,-137,-138,-139,-140,-141,-143,-144,61,61,-47,-48,-131,-151,-153,-24,61,-152,]),'IF':([0,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,138,145,168,173,192,193,201,205,206,207,208,235,250,251,252,265,276,278,298,301,307,315,318,319,330,333,334,337,339,340,342,],[62,62,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,62,-34,-19,-21,-155,62,62,-33,-35,-36,-37,-5,-20,-22,-23,-159,62,62,62,62,62,62,62,-47,-48,-131,-151,-153,-24,62,-152,]),'IDENTIFICADOR':([0,2,3,4,5,7,8,9,10,11,12,13,14,27,30,31,32,33,34,49,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,113,114,115,116,117,128,137,138,141,145,168,173,192,193,194,201,205,206,207,208,229,235,250,251,252,265,276,278,298,301,304,307,315,318,319,330,333,334,337,339,340,342,],[6,6,-3,-4,65,-6,-7,-8,-9,-10,-11,-12,-13,112,-124,-125,-126,-127,-49,133,-14,-15,-16,6,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,6,-55,-56,-50,177,6,-154,6,6,204,-34,-19,-21,-155,6,6,6,-33,-35,-36,-37,6,-5,-20,-22,-23,-159,6,6,6,6,324,6,6,6,-47,-48,-131,-151,-153,-24,6,-152,]),'CADENA':([0,2,3,4,7,8,9,10,11,12,13,14,20,22,30,31,32,33,34,44,59,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,113,114,115,121,128,137,138,145,168,173,187,192,193,194,201,205,206,207,208,209,212,217,222,229,231,235,250,251,252,265,276,278,280,285,298,301,307,315,318,319,330,333,334,337,339,340,342,],[24,24,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,24,24,-124,-125,-126,-127,-49,24,24,24,-14,-15,-16,24,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,24,24,24,-73,-74,-75,-76,-77,-78,-92,-93,-94,-95,-96,24,174,-55,-56,-50,24,-154,24,24,-34,-19,-21,24,-155,24,24,24,-33,-35,-36,-37,238,24,253,24,24,24,-5,-20,-22,-23,-159,24,24,24,24,24,24,24,24,24,-47,-48,-131,-151,-153,-24,24,-152,]),'$end':([1,2,3,4,7,8,9,10,11,12,13,14,30,31,32,33,34,64,67,68,69,113,114,115,128,145,168,173,192,205,206,207,208,235,250,251,252,265,319,330,333,334,337,339,342,],[0,-1,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-2,-14,-15,-16,-55,-56,-50,-154,-34,-19,-21,-155,-33,-35,-36,-37,-5,-20,-22,-23,-159,-47,-48,-131,-151,-153,-24,-152,]),'PARENTESIS_ABRE':([6,22,23,25,26,43,45,46,48,62,120,131,133,153,161,162,],[66,107,109,110,111,121,126,127,132,137,181,194,196,209,212,213,]),'LLAVE_CIERRA':([7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,145,168,173,192,200,201,205,206,207,208,226,227,228,236,250,251,252,265,266,296,297,300,302,317,319,320,325,326,329,330,333,334,337,339,341,342,],[-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,-34,-19,-21,-155,235,-132,-33,-35,-36,-37,265,-129,-130,-133,-20,-22,-23,-159,-128,-149,-150,319,321,328,-47,330,333,334,337,-48,-131,-151,-153,-24,342,-152,]),'RETURN':([7,8,9,10,11,12,13,14,30,31,32,33,34,67,68,69,113,114,115,128,145,168,173,192,193,201,205,206,207,208,227,236,250,251,252,265,276,278,298,301,319,330,333,334,337,339,342,],[-6,-7,-8,-9,-10,-11,-12,-13,-124,-125,-126,-127,-49,-14,-15,-16,-55,-56,-50,-154,-34,-19,-21,-155,229,-132,-33,-35,-36,-37,229,-133,-20,-22,-23,-159,229,229,229,229,-47,-48,-131,-151,-153,-24,-152,]),'FIN_LINEA':([15,16,17,19,24,28,29,36,37,38,39,40,58,60,61,63,71,88,89,90,91,92,108,112,119,122,136,143,144,146,147,148,149,150,151,152,154,155,156,158,159,160,163,164,169,170,171,177,178,179,180,182,185,186,197,198,202,203,210,214,215,216,218,219,220,239,240,241,242,249,267,268,269,270,271,281,282,283,287,288,289,290,291,292,293,323,332,338,],[67,68,69,-109,-45,113,114,-113,-114,-115,-116,-117,-103,-147,-148,-17,-145,168,-18,-43,-44,-46,173,-31,-146,-64,-100,-41,205,206,207,208,-38,113,-40,-42,-43,-44,-46,-104,-105,-106,-109,-111,-97,-98,-99,-32,-112,-107,-108,-63,-66,-68,-101,-102,-51,-52,-123,250,251,252,-57,-65,-67,-121,-118,-119,-120,-58,296,297,-18,-43,-44,-122,-59,-60,308,309,310,311,312,313,314,-62,339,-61,]),'IGUAL':([18,24,90,91,92,112,125,177,190,264,305,],[70,-45,-43,-44,-46,-31,188,-32,70,295,188,]),'LAMBDA':([18,112,143,177,269,],[73,-31,73,-32,73,]),'SUMA':([18,21,24,56,57,58,63,89,90,91,92,112,143,149,154,155,156,157,165,167,169,177,239,240,241,242,243,247,248,267,269,270,271,273,],[-18,96,-45,-43,-44,-46,-17,-18,-43,-44,-46,-31,-18,-17,-43,-44,-46,96,-18,96,96,-32,96,-118,-119,-120,-18,-43,-44,96,-18,-43,-44,-120,]),'RESTA':([18,21,24,56,57,58,63,89,90,91,92,112,143,149,154,155,156,157,165,167,169,177,239,240,241,242,243,247,248,267,269,270,271,273,],[-18,97,-45,-43,-44,-46,-17,-18,-43,-44,-46,-31,-18,-17,-43,-44,-46,97,-18,97,97,-32,97,-118,-119,-120,-18,-43,-44,97,-18,-43,-44,-120,]),'MULTIPLICACION':([18,21,24,56,57,58,63,89,90,91,92,112,143,149,154,155,156,157,165,167,169,177,239,240,241,242,243,247,248,267,269,270,271,273,],[-18,98,-45,-43,-44,-46,-17,-18,-43,-44,-46,-31,-18,-17,-43,-44,-46,98,-18,98,98,-32,98,-118,-119,-120,-18,-43,-44,98,-18,-43,-44,-120,]),'DIVISION':([18,21,24,56,57,58,63,89,90,91,92,112,143,149,154,155,156,157,165,167,169,177,239,240,241,242,243,247,248,267,269,270,271,273,],[-18,99,-45,-43,-44,-46,-17,-18,-43,-44,-46,-31,-18,-17,-43,-44,-46,99,-18,99,99,-32,99,-118,-119,-120,-18,-43,-44,99,-18,-43,-44,-120,]),'POTENCIA':([18,21,24,56,57,58,63,89,90,91,92,112,143,149,154,155,156,157,165,167,169,177,239,240,241,242,243,247,248,267,269,270,271,273,],[-18,100,-45,-43,-44,-46,-17,-18,-43,-44,-46,-31,-18,-17,-43,-44,-46,100,-18,100,100,-32,100,-118,-119,-120,-18,-43,-44,100,-18,-43,-44,-120,]),'MODULO':([18,21,24,56,57,58,63,89,90,91,92,112,143,149,154,155,156,157,165,167,169,177,239,240,241,242,243,247,248,267,269,270,271,273,],[-18,101,-45,-43,-44,-46,-17,-18,-43,-44,-46,-31,-18,-17,-43,-44,-46,101,-18,101,101,-32,101,-118,-119,-120,-18,-43,-44,101,-18,-43,-44,-120,]),'CONJUNCIONBITS':([18,21,24,56,57,58,63,112,143,149,154,155,156,177,267,269,270,271,],[-18,102,-45,-43,-44,-46,-17,-31,-18,-17,-43,-44,-46,-32,102,-18,-43,-44,]),'DISYUNCIONBITS':([18,21,24,56,57,58,63,112,143,149,154,155,156,177,267,269,270,271,],[-18,103,-45,-43,-44,-46,-17,-31,-18,-17,-43,-44,-46,-32,103,-18,-43,-44,]),'DISYUNCION_EXC':([18,21,24,56,57,58,63,112,143,149,154,155,156,177,267,269,270,271,],[-18,104,-45,-43,-44,-46,-17,-31,-18,-17,-43,-44,-46,-32,104,-18,-43,-44,]),'DESPLAZAR_BITS_IZQ':([18,21,24,56,57,58,63,112,143,149,154,155,156,177,267,269,270,271,],[-18,105,-45,-43,-44,-46,-17,-31,-18,-17,-43,-44,-46,-32,105,-18,-43,-44,]),'DESPLAZAR_BITS_DER':([18,21,24,56,57,58,63,112,143,149,154,155,156,177,267,269,270,271,],[-18,106,-45,-43,-44,-46,-17,-31,-18,-17,-43,-44,-46,-32,106,-18,-43,-44,]),'IGUALDAD':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,230,269,270,271,],[74,74,-45,74,74,74,74,-103,-17,-18,-43,-44,-46,-31,74,74,74,74,-103,-104,-105,-106,74,74,74,74,-97,-98,-32,-112,-107,-108,74,-101,-102,74,-51,-52,74,74,74,74,]),'IDENTIDAD':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,230,269,270,271,],[75,75,-45,75,75,75,75,-103,-17,-18,-43,-44,-46,-31,75,75,75,75,-103,-104,-105,-106,75,75,75,75,-97,-98,-32,-112,-107,-108,75,-101,-102,75,-51,-52,75,75,75,75,]),'DIFERENTE':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,230,269,270,271,],[76,76,-45,76,76,76,76,-103,-17,-18,-43,-44,-46,-31,76,76,76,76,-103,-104,-105,-106,76,76,76,76,-97,-98,-32,-112,-107,-108,76,-101,-102,76,-51,-52,76,76,76,76,]),'NO_IDENTIDAD':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,230,269,270,271,],[77,77,-45,77,77,77,77,-103,-17,-18,-43,-44,-46,-31,77,77,77,77,-103,-104,-105,-106,77,77,77,77,-97,-98,-32,-112,-107,-108,77,-101,-102,77,-51,-52,77,77,77,77,]),'MAYOR':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,188,195,197,198,199,202,203,224,230,269,270,271,295,],[78,78,-45,78,78,78,78,-103,-17,-18,-43,-44,-46,-31,78,78,78,78,-103,-104,-105,-106,78,78,78,78,-97,-98,-32,-112,-107,-108,222,78,-101,-102,78,-51,-52,263,78,78,78,78,316,]),'MAYOR_IGUAL':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,224,230,269,270,271,],[79,79,-45,79,79,79,79,-103,-17,-18,-43,-44,-46,-31,79,79,79,79,-103,-104,-105,-106,79,79,79,79,-97,-98,-32,-112,-107,-108,79,-101,-102,79,-51,-52,262,79,79,79,79,]),'MENOR':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,224,230,269,270,271,],[80,80,-45,80,80,80,80,-103,-17,-18,-43,-44,-46,-31,80,80,80,80,-103,-104,-105,-106,80,80,80,80,-97,-98,-32,-112,-107,-108,80,-101,-102,80,-51,-52,261,80,80,80,80,]),'MENOR_IGUAL':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,224,230,269,270,271,],[81,81,-45,81,81,81,81,-103,-17,-18,-43,-44,-46,-31,81,81,81,81,-103,-104,-105,-106,81,81,81,81,-97,-98,-32,-112,-107,-108,81,-101,-102,81,-51,-52,260,81,81,81,81,]),'AND':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,230,269,270,271,],[82,82,-45,82,82,82,82,-103,-17,-18,-43,-44,-46,-31,82,82,82,82,-103,-104,-105,-106,82,82,82,82,-97,-98,-32,-112,-107,-108,82,-101,-102,82,-51,-52,82,82,82,82,]),'OR':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,230,269,270,271,],[83,83,-45,83,83,83,83,-103,-17,-18,-43,-44,-46,-31,83,83,83,83,-103,-104,-105,-106,83,83,83,83,-97,-98,-32,-112,-107,-108,83,-101,-102,83,-51,-52,83,83,83,83,]),'XOR':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,230,269,270,271,],[84,84,-45,84,84,84,84,-103,-17,-18,-43,-44,-46,-31,84,84,84,84,-103,-104,-105,-106,84,84,84,84,-97,-98,-32,-112,-107,-108,84,-101,-102,84,-51,-52,84,84,84,84,]),'CONJUNCION':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,230,269,270,271,],[85,85,-45,85,85,85,85,-103,-17,-18,-43,-44,-46,-31,85,85,85,85,-103,-104,-105,-106,85,85,85,85,-97,-98,-32,-112,-107,-108,85,-101,-102,85,-51,-52,85,85,85,85,]),'DISYUNCION':([18,19,24,36,37,56,57,58,63,89,90,91,92,112,143,147,154,155,156,158,159,160,163,164,165,166,169,170,177,178,179,180,195,197,198,199,202,203,230,269,270,271,],[86,86,-45,86,86,86,86,-103,-17,-18,-43,-44,-46,-31,86,86,86,86,-103,-104,-105,-106,86,86,86,86,-97,-98,-32,-112,-107,-108,86,-101,-102,86,-51,-52,86,86,86,86,]),'PARENTESIS_CIERRA':([19,24,58,60,61,63,71,89,90,91,92,112,119,121,125,139,140,142,149,151,152,158,159,160,163,164,169,170,172,174,175,177,178,179,180,181,183,184,196,197,198,199,202,203,204,210,213,218,221,230,233,239,240,241,242,243,244,245,246,247,248,254,255,264,273,274,275,279,281,303,306,324,327,331,],[-109,-45,-103,-147,-148,-17,-145,-18,-43,-44,-46,-31,-146,182,-71,202,203,-71,-38,-40,-42,-104,-105,-106,-109,-111,-97,-98,214,215,216,-32,-112,-107,-108,218,219,220,232,-101,-102,234,-51,-52,-53,-123,249,-57,-72,272,277,-121,-118,-119,-120,-41,282,283,-39,-43,-44,-69,286,294,-41,299,-38,-54,-122,323,-70,332,335,338,]),'COMA':([24,63,89,90,91,92,112,125,142,176,177,204,238,253,254,303,],[-45,-17,-18,-43,-44,-46,-31,187,187,217,-32,237,280,284,285,322,]),'CORCHETE_CIERRA':([24,44,90,91,92,123,124,125,142,221,254,306,],[-45,122,-43,-44,-46,185,186,-71,-71,-72,-69,-70,]),'STACK':([42,],[120,]),'ELSE':([47,129,321,328,336,],[130,130,-156,-157,-158,]),'ELSEIF':([47,321,328,],[131,-156,131,]),'LLAVE_ABRE':([65,130,232,234,272,277,286,294,299,335,],[138,193,276,278,298,301,307,315,318,340,]),'NULO':([70,74,75,76,77,78,79,80,81,82,83,84,85,86,212,231,],[151,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,151,151,]),'EXPLODE':([70,],[153,]),'PUSH':([73,],[161,]),'POP':([73,],[162,]),'STDIN':([110,111,],[175,176,]),'AS':([112,177,191,],[-31,-32,225,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'variaslineas':([0,2,],[1,64,]),'programa':([0,2,],[2,2,]),'clase':([0,2,],[3,3,]),'instrucciones':([0,2,138,193,201,276,278,298,301,307,315,318,340,],[4,4,201,201,201,201,201,201,201,201,201,329,201,]),'asignacion':([0,2,126,138,193,201,276,278,298,301,307,315,318,340,],[7,7,189,7,7,7,7,7,7,7,7,7,7,7,]),'salida':([0,2,138,193,201,276,278,298,301,307,315,318,340,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ingreso':([0,2,138,193,201,276,278,298,301,307,315,318,340,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'estructuras_datos':([0,2,70,138,193,201,276,278,298,301,307,315,318,340,],[10,10,145,10,10,10,10,10,10,10,10,10,10,10,]),'estructuras_control':([0,2,138,193,201,276,278,298,301,307,315,318,340,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'funcionglobal':([0,2,138,193,201,276,278,298,301,307,315,318,340,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'operaciones':([0,2,70,138,193,201,229,276,278,298,301,307,315,318,340,],[15,15,148,15,15,15,268,15,15,15,15,15,15,15,15,]),'declaracion_s':([0,2,138,193,201,223,276,278,298,301,307,315,318,340,],[16,16,16,16,16,255,16,16,16,16,16,16,16,16,]),'decl_variable':([0,2,20,22,41,59,70,72,87,94,95,107,126,127,132,137,138,189,193,194,201,211,212,223,225,229,231,260,261,263,276,278,280,298,301,307,315,316,318,340,],[18,18,89,89,119,89,143,158,165,89,89,89,190,191,195,165,18,224,18,165,18,242,243,256,264,269,273,288,290,293,18,18,89,18,18,18,18,327,18,18,]),'funcionuso':([0,2,70,87,117,137,138,193,194,201,229,276,278,298,301,307,315,318,340,],[19,19,147,163,178,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'salidas_posibles':([0,2,20,22,59,70,87,94,95,107,137,138,193,194,201,212,229,276,278,280,298,301,307,315,318,340,],[21,21,88,108,136,21,167,169,171,172,167,21,21,167,21,167,267,21,21,303,21,21,21,21,21,21,]),'pila':([0,2,70,138,193,201,212,231,276,278,298,301,307,315,318,340,],[28,28,150,28,28,28,246,246,28,28,28,28,28,28,28,28,]),'arreglo':([0,2,70,138,193,201,276,278,298,301,307,315,318,340,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'for':([0,2,138,193,201,276,278,298,301,307,315,318,340,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'foreach':([0,2,138,193,201,276,278,298,301,307,315,318,340,],[31,31,31,31,31,31,31,31,31,31,31,31,31,]),'if_else':([0,2,138,193,201,276,278,298,301,307,315,318,340,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'while':([0,2,138,193,201,276,278,298,301,307,315,318,340,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'funcion':([0,2,35,138,193,201,276,278,298,301,307,315,318,340,],[34,34,115,34,34,34,34,34,34,34,34,34,34,34,]),'variable_tipo':([0,2,20,22,41,59,70,72,87,94,95,107,126,127,132,137,138,189,193,194,201,211,212,223,225,229,231,260,261,263,276,278,280,298,301,307,315,316,318,340,],[35,35,93,93,93,93,93,93,93,93,93,93,93,93,93,93,35,93,35,93,35,93,93,93,93,93,93,93,93,93,35,35,93,35,35,35,35,93,35,35,]),'operaciones_logicas':([0,2,70,87,137,138,193,194,201,229,276,278,298,301,307,315,318,340,],[36,36,36,164,199,36,36,230,36,36,36,36,36,36,36,36,36,36,]),'operaciones_arit':([0,2,70,87,94,137,138,193,194,201,212,229,276,278,298,301,307,315,318,340,],[37,37,37,166,170,166,37,37,166,37,245,37,37,37,37,37,37,37,37,37,]),'operaciones_bits':([0,2,70,138,193,201,229,276,278,298,301,307,315,318,340,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'pushpila':([0,2,70,138,193,201,229,276,278,298,301,307,315,318,340,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'poppila':([0,2,70,138,193,201,229,276,278,298,301,307,315,318,340,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'crecimiento':([0,2,18,138,193,201,223,256,276,278,298,301,307,315,318,340,],[41,41,71,41,41,41,41,71,41,41,41,41,41,41,41,41,]),'if_else_inicio':([0,2,138,193,201,276,278,298,301,307,315,318,340,],[47,47,47,47,47,47,47,47,47,47,47,47,47,]),'datos':([0,2,20,22,44,59,66,70,87,94,95,107,121,137,138,187,193,194,201,212,222,229,231,276,278,280,285,298,301,307,315,318,340,],[63,63,63,63,125,63,142,149,63,63,63,63,125,63,63,142,63,63,63,149,254,63,275,63,63,63,305,63,63,63,63,63,63,]),'operad_logico':([18,19,36,37,56,57,143,147,154,155,163,164,165,166,195,199,230,269,270,271,],[72,87,117,118,134,135,72,87,134,135,87,117,72,118,231,117,117,72,134,135,]),'operad_arit':([21,157,167,169,239,267,],[94,211,94,94,211,94,]),'operand_bits':([21,267,],[95,95,]),'elementos':([44,66,121,187,],[123,140,183,221,]),'asociacion':([44,121,285,],[124,184,306,]),'if_else_fin':([47,129,],[128,192,]),'if_else_cuerpo':([47,328,],[129,336,]),'parametros':([66,196,237,],[139,233,279,]),'valor':([70,212,231,],[144,244,274,]),'explode':([70,],[146,]),'opAritVar':([70,212,231,],[152,152,152,]),'paraCalculos':([70,211,212,231,],[157,239,157,157,]),'sentenciasAnidadas':([138,193,201,276,278,298,301,307,315,340,],[200,227,236,227,227,227,227,325,326,341,]),'combinarOp':([157,239,],[210,281,]),'declaracionp':([189,],[223,]),'bloque':([193,276,278,298,301,],[226,300,302,317,320,]),'retorno':([193,227,276,278,298,301,],[228,266,228,228,228,228,]),'valorc':([224,],[257,]),'menor':([224,],[258,]),'mayor':([224,],[259,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> variaslineas","S'",1,None,None,None),
  ('variaslineas -> programa','variaslineas',1,'p_variaslineas','sintactico.py',5),
  ('variaslineas -> programa variaslineas','variaslineas',2,'p_variaslineas','sintactico.py',6),
  ('programa -> clase','programa',1,'p_programa','sintactico.py',10),
  ('programa -> instrucciones','programa',1,'p_programa','sintactico.py',11),
  ('clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','clase',5,'p_clase','sintactico.py',15),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> salida','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> ingreso','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> estructuras_datos','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> estructuras_control','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> funcionglobal','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('instrucciones -> COMENTARIO_LINEA','instrucciones',1,'p_instrucciones','sintactico.py',24),
  ('instrucciones -> COMENTARIO_BLOQUE','instrucciones',1,'p_instrucciones','sintactico.py',25),
  ('instrucciones -> operaciones FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',26),
  ('instrucciones -> declaracion_s FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',27),
  ('instrucciones -> BREAK FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',28),
  ('salidas_posibles -> datos','salidas_posibles',1,'p_salidas_posibles','sintactico.py',34),
  ('salidas_posibles -> decl_variable','salidas_posibles',1,'p_salidas_posibles','sintactico.py',35),
  ('salida -> ECHO salidas_posibles FIN_LINEA','salida',3,'p_salida_forma1','sintactico.py',39),
  ('salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA','salida',5,'p_salida_forma2','sintactico.py',42),
  ('salida -> PRINT salidas_posibles FIN_LINEA','salida',3,'p_salida_forma3','sintactico.py',45),
  ('ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma1','sintactico.py',50),
  ('ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma2','sintactico.py',53),
  ('ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA','ingreso',10,'p_ingreso_forma3','sintactico.py',56),
  ('variable_tipo -> CONST','variable_tipo',1,'p_variable_tipo','sintactico.py',61),
  ('variable_tipo -> PRIVATE','variable_tipo',1,'p_variable_tipo','sintactico.py',62),
  ('variable_tipo -> PUBLIC','variable_tipo',1,'p_variable_tipo','sintactico.py',63),
  ('variable_tipo -> PROTECTED','variable_tipo',1,'p_variable_tipo','sintactico.py',64),
  ('variable_tipo -> STATIC','variable_tipo',1,'p_variable_tipo','sintactico.py',65),
  ('variable_tipo -> VAR','variable_tipo',1,'p_variable_tipo','sintactico.py',66),
  ('decl_variable -> SIGNO_DOLAR IDENTIFICADOR','decl_variable',2,'p_decl_variable','sintactico.py',72),
  ('decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR','decl_variable',3,'p_decl_variable','sintactico.py',73),
  ('asignacion -> decl_variable IGUAL valor FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',76),
  ('asignacion -> decl_variable IGUAL estructuras_datos','asignacion',3,'p_asignacion','sintactico.py',77),
  ('asignacion -> decl_variable IGUAL explode FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',78),
  ('asignacion -> decl_variable IGUAL funcionuso FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',79),
  ('asignacion -> decl_variable IGUAL operaciones FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',80),
  ('valor -> datos','valor',1,'p_valor','sintactico.py',84),
  ('valor -> pila','valor',1,'p_valor','sintactico.py',85),
  ('valor -> NULO','valor',1,'p_valor','sintactico.py',86),
  ('valor -> decl_variable','valor',1,'p_valor','sintactico.py',87),
  ('valor -> opAritVar','valor',1,'p_valor','sintactico.py',88),
  ('datos -> ENTERO','datos',1,'p_datos','sintactico.py',93),
  ('datos -> FLOTANTE','datos',1,'p_datos','sintactico.py',94),
  ('datos -> CADENA','datos',1,'p_datos','sintactico.py',95),
  ('datos -> BOOLEANO','datos',1,'p_datos','sintactico.py',96),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','funcion',7,'p_funcion','sintactico.py',102),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','funcion',8,'p_funcion_parametros','sintactico.py',105),
  ('funcionglobal -> funcion','funcionglobal',1,'p_funcion_global','sintactico.py',108),
  ('funcionglobal -> variable_tipo funcion','funcionglobal',2,'p_funcion_global','sintactico.py',109),
  ('funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA','funcionuso',4,'p_funcionenuso','sintactico.py',113),
  ('funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA','funcionuso',4,'p_funcionenuso','sintactico.py',114),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR','parametros',2,'p_parametros','sintactico.py',118),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros','parametros',4,'p_parametros','sintactico.py',119),
  ('estructuras_datos -> pila FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','sintactico.py',125),
  ('estructuras_datos -> arreglo FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','sintactico.py',126),
  ('pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA','pila',4,'p_pila','sintactico.py',129),
  ('poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA','poppila',5,'p_pop','sintactico.py',132),
  ('pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA','pushpila',6,'p_push','sintactico.py',136),
  ('pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA','pushpila',6,'p_push','sintactico.py',137),
  ('explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA','explode',8,'p_explode','sintactico.py',141),
  ('explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA','explode',6,'p_explode','sintactico.py',142),
  ('arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA','arreglo',3,'p_arreglo_vacio','sintactico.py',146),
  ('arreglo -> CORCHETE_ABRE CORCHETE_CIERRA','arreglo',2,'p_arreglo_vacio','sintactico.py',147),
  ('arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA','arreglo',4,'p_arreglo_indexado','sintactico.py',151),
  ('arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA','arreglo',3,'p_arreglo_indexado','sintactico.py',152),
  ('arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA','arreglo',4,'p_arreglo_asociativo','sintactico.py',156),
  ('arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA','arreglo',3,'p_arreglo_asociativo','sintactico.py',157),
  ('asociacion -> datos IGUAL MAYOR datos','asociacion',4,'p_asociacion','sintactico.py',161),
  ('asociacion -> datos IGUAL MAYOR datos COMA asociacion','asociacion',6,'p_asociacion','sintactico.py',162),
  ('elementos -> datos','elementos',1,'p_elementos','sintactico.py',165),
  ('elementos -> datos COMA elementos','elementos',3,'p_elementos','sintactico.py',166),
  ('operad_arit -> SUMA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',171),
  ('operad_arit -> RESTA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',172),
  ('operad_arit -> MULTIPLICACION','operad_arit',1,'p_operad_aritmeticas','sintactico.py',173),
  ('operad_arit -> DIVISION','operad_arit',1,'p_operad_aritmeticas','sintactico.py',174),
  ('operad_arit -> POTENCIA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',175),
  ('operad_arit -> MODULO','operad_arit',1,'p_operad_aritmeticas','sintactico.py',176),
  ('operad_logico -> IGUALDAD','operad_logico',1,'p_operad_logicos','sintactico.py',180),
  ('operad_logico -> IDENTIDAD','operad_logico',1,'p_operad_logicos','sintactico.py',181),
  ('operad_logico -> DIFERENTE','operad_logico',1,'p_operad_logicos','sintactico.py',182),
  ('operad_logico -> NO_IDENTIDAD','operad_logico',1,'p_operad_logicos','sintactico.py',183),
  ('operad_logico -> MAYOR','operad_logico',1,'p_operad_logicos','sintactico.py',184),
  ('operad_logico -> MAYOR_IGUAL','operad_logico',1,'p_operad_logicos','sintactico.py',185),
  ('operad_logico -> MENOR','operad_logico',1,'p_operad_logicos','sintactico.py',186),
  ('operad_logico -> MENOR_IGUAL','operad_logico',1,'p_operad_logicos','sintactico.py',187),
  ('operad_logico -> AND','operad_logico',1,'p_operad_logicos','sintactico.py',188),
  ('operad_logico -> OR','operad_logico',1,'p_operad_logicos','sintactico.py',189),
  ('operad_logico -> XOR','operad_logico',1,'p_operad_logicos','sintactico.py',190),
  ('operad_logico -> CONJUNCION','operad_logico',1,'p_operad_logicos','sintactico.py',191),
  ('operad_logico -> DISYUNCION','operad_logico',1,'p_operad_logicos','sintactico.py',192),
  ('operand_bits -> CONJUNCIONBITS','operand_bits',1,'p_operad_bits','sintactico.py',198),
  ('operand_bits -> DISYUNCIONBITS','operand_bits',1,'p_operad_bits','sintactico.py',199),
  ('operand_bits -> DISYUNCION_EXC','operand_bits',1,'p_operad_bits','sintactico.py',200),
  ('operand_bits -> DESPLAZAR_BITS_IZQ','operand_bits',1,'p_operad_bits','sintactico.py',201),
  ('operand_bits -> DESPLAZAR_BITS_DER','operand_bits',1,'p_operad_bits','sintactico.py',202),
  ('operaciones_arit -> salidas_posibles operad_arit salidas_posibles','operaciones_arit',3,'p_operaciones_arit','sintactico.py',208),
  ('operaciones_arit -> salidas_posibles operad_arit operaciones_arit','operaciones_arit',3,'p_operaciones_arit','sintactico.py',209),
  ('operaciones_bits -> salidas_posibles operand_bits salidas_posibles','operaciones_bits',3,'p_operaciones_bits','sintactico.py',214),
  ('operaciones_bits -> NEGACION salidas_posibles','operaciones_bits',2,'p_operaciones_bits','sintactico.py',215),
  ('operaciones_logicas -> ENTERO operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',219),
  ('operaciones_logicas -> FLOTANTE operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',220),
  ('operaciones_logicas -> BOOLEANO','operaciones_logicas',1,'p_operaciones_logica','sintactico.py',221),
  ('operaciones_logicas -> decl_variable operad_logico decl_variable','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',222),
  ('operaciones_logicas -> decl_variable operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',223),
  ('operaciones_logicas -> decl_variable operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',224),
  ('operaciones_logicas -> operaciones_arit operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',225),
  ('operaciones_logicas -> operaciones_arit operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',226),
  ('operaciones_logicas -> funcionuso','operaciones_logicas',1,'p_operaciones_logica','sintactico.py',227),
  ('operaciones_logicas -> funcionuso operad_logico funcionuso','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',228),
  ('operaciones_logicas -> funcionuso operad_logico operaciones_logicas','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',229),
  ('operaciones_logicas -> operaciones_logicas operad_logico funcionuso','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',230),
  ('operaciones -> operaciones_logicas','operaciones',1,'p_operaciones','sintactico.py',234),
  ('operaciones -> operaciones_arit','operaciones',1,'p_operaciones','sintactico.py',235),
  ('operaciones -> operaciones_bits','operaciones',1,'p_operaciones','sintactico.py',236),
  ('operaciones -> pushpila','operaciones',1,'p_operaciones','sintactico.py',237),
  ('operaciones -> poppila','operaciones',1,'p_operaciones','sintactico.py',238),
  ('paraCalculos -> ENTERO','paraCalculos',1,'p_paraCalculos','sintactico.py',242),
  ('paraCalculos -> FLOTANTE','paraCalculos',1,'p_paraCalculos','sintactico.py',243),
  ('paraCalculos -> decl_variable','paraCalculos',1,'p_paraCalculos','sintactico.py',244),
  ('combinarOp -> operad_arit paraCalculos','combinarOp',2,'p_combinarOp','sintactico.py',247),
  ('combinarOp -> operad_arit paraCalculos combinarOp','combinarOp',3,'p_combinarOp','sintactico.py',248),
  ('opAritVar -> paraCalculos combinarOp','opAritVar',2,'p_opAritmeticaEnVar','sintactico.py',251),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','sintactico.py',256),
  ('estructuras_control -> foreach','estructuras_control',1,'p_estructuras_control','sintactico.py',257),
  ('estructuras_control -> if_else','estructuras_control',1,'p_estructuras_control','sintactico.py',258),
  ('estructuras_control -> while','estructuras_control',1,'p_estructuras_control','sintactico.py',259),
  ('bloque -> sentenciasAnidadas retorno','bloque',2,'p_bloque','sintactico.py',264),
  ('bloque -> sentenciasAnidadas','bloque',1,'p_bloque','sintactico.py',265),
  ('bloque -> retorno','bloque',1,'p_bloque','sintactico.py',266),
  ('for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','for',9,'p_for','sintactico.py',272),
  ('sentenciasAnidadas -> instrucciones','sentenciasAnidadas',1,'p_sentenciasAnidadas','sintactico.py',275),
  ('sentenciasAnidadas -> instrucciones sentenciasAnidadas','sentenciasAnidadas',2,'p_sentenciasAnidadas','sintactico.py',276),
  ('declaracionp -> decl_variable valorc','declaracionp',2,'p_declaracionM','sintactico.py',280),
  ('valorc -> menor','valorc',1,'p_valorC','sintactico.py',283),
  ('valorc -> mayor','valorc',1,'p_valorC','sintactico.py',284),
  ('menor -> MENOR_IGUAL ENTERO FIN_LINEA','menor',3,'p_menor','sintactico.py',287),
  ('menor -> MENOR_IGUAL decl_variable FIN_LINEA','menor',3,'p_menor','sintactico.py',288),
  ('menor -> MENOR ENTERO FIN_LINEA','menor',3,'p_menor','sintactico.py',289),
  ('menor -> MENOR decl_variable FIN_LINEA','menor',3,'p_menor','sintactico.py',290),
  ('mayor -> MAYOR_IGUAL ENTERO FIN_LINEA','mayor',3,'p_mayor','sintactico.py',294),
  ('mayor -> MENOR_IGUAL decl_variable FIN_LINEA','mayor',3,'p_mayor','sintactico.py',295),
  ('mayor -> MAYOR ENTERO FIN_LINEA','mayor',3,'p_mayor','sintactico.py',296),
  ('mayor -> MAYOR decl_variable FIN_LINEA','mayor',3,'p_mayor','sintactico.py',297),
  ('declaracion_s -> decl_variable crecimiento','declaracion_s',2,'p_declaracionsimple','sintactico.py',301),
  ('declaracion_s -> crecimiento decl_variable','declaracion_s',2,'p_declaracionsimple','sintactico.py',302),
  ('crecimiento -> INCREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',306),
  ('crecimiento -> DECREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',307),
  ('retorno -> RETURN salidas_posibles FIN_LINEA','retorno',3,'p_retorno','sintactico.py',310),
  ('retorno -> RETURN operaciones FIN_LINEA','retorno',3,'p_retorno','sintactico.py',311),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',9,'p_foreach','sintactico.py',317),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',12,'p_foreach','sintactico.py',318),
  ('while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','while',9,'p_while','sintactico.py',324),
  ('if_else -> if_else_inicio if_else_fin','if_else',2,'p_if_else_corto','sintactico.py',329),
  ('if_else -> if_else_inicio if_else_cuerpo if_else_fin','if_else',3,'p_if_else_extendido','sintactico.py',333),
  ('if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_inicio',7,'p_if_else_inicio','sintactico.py',337),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_cuerpo',7,'p_if_else_cuerpo','sintactico.py',341),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo','if_else_cuerpo',8,'p_if_else_cuerpo','sintactico.py',342),
  ('if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA','if_else_fin',4,'p_if_else_fin','sintactico.py',347),
]
