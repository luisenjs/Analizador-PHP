
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY AS BACKSLASH BOOLEANO BREAK CADENA CLASS COMA COMENTARIO_BLOQUE COMENTARIO_LINEA CONJUNCION CONST CORCHETE_ABRE CORCHETE_CIERRA DECREMENTO DESPLAZAR_BITS_DER DESPLAZAR_BITS_IZQ DIFERENTE DISYUNCION DISYUNCION_EXC DIVISION ECHO ELSE ELSEIF ENTERO EXPLODE FGETS FIN_LINEA FLOTANTE FOR FOREACH FSCANF FUNCTION IDENTIDAD IDENTIFICADOR IF IGUAL IGUALDAD INCREMENTO LAMBDA LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NEGACION NEW NO_IDENTIDAD NULO OR PARENTESIS_ABRE PARENTESIS_CIERRA POP POTENCIA PRINT PRIVATE PROTECTED PUBLIC PUNTO PUSH READLINE RESTA RETURN SIGNO_DOLAR STACK STATIC STDIN SUMA VAR WHILE XOR variaslineas : programa\n                    | programa variaslineasprograma : clase\n              | instrucciones\n  clase : CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRAinstrucciones : asignacion\n            | salida\n            | ingreso\n            | estructuras_datos\n            | estructuras_control\n            | funcion\n            | COMENTARIO_LINEA\n            | COMENTARIO_BLOQUE\n            | operaciones FIN_LINEA\n            | declaracion_s FIN_LINEA\n            | BREAK FIN_LINEA\n  salidas_posibles : datos\n                | decl_variable\n  salida : ECHO salidas_posibles FIN_LINEAsalida : PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEAsalida : PRINT salidas_posibles FIN_LINEAingreso : READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEAingreso : FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEAingreso : FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEAvariable_tipo : CONST\n                  | PRIVATE\n                  | PUBLIC\n                  | PROTECTED\n                  | STATIC\n                  | VAR\n  decl_variable : SIGNO_DOLAR IDENTIFICADOR\n                    | variable_tipo SIGNO_DOLAR IDENTIFICADORasignacion : decl_variable IGUAL valor FIN_LINEA\n                | decl_variable IGUAL estructuras_datos\n                | decl_variable IGUAL poppila FIN_LINEA\n                \n  valor : datos\n            | pila\n            | NULO\n            | decl_variable\n            | opAritVar\n            \n  datos : ENTERO\n          | FLOTANTE\n          | CADENA \n          | BOOLEANO\n  funcion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA\n  funcion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRAfuncionuso : IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA\n  parametros : SIGNO_DOLAR IDENTIFICADOR\n                  | SIGNO_DOLAR IDENTIFICADOR COMA parametros\n   estructuras_datos : pila FIN_LINEA\n                        | arreglo FIN_LINEA\n  pila :  NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRApoppila : decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA\n  pushpila : decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA\n            | decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA\n              | CORCHETE_ABRE CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA\n              | CORCHETE_ABRE elementos CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA\n              | CORCHETE_ABRE asociacion CORCHETE_CIERRA\n  asociacion : datos IGUAL MAYOR datos\n                  | datos IGUAL MAYOR datos COMA asociacion\n  elementos : datos\n                  | datos COMA elementos\n    operad_arit : SUMA\n                | RESTA\n                | MULTIPLICACION\n                | DIVISION\n                | POTENCIA\n                | MODULO\n  operad_logico : IGUALDAD\n                | IDENTIDAD\n                | DIFERENTE\n                | NO_IDENTIDAD\n                | MAYOR\n                | MAYOR_IGUAL\n                | MENOR\n                | MENOR_IGUAL\n                | AND\n                | OR\n                | XOR\n  operand_bits : CONJUNCION\n                  | DISYUNCION\n                  | DISYUNCION_EXC\n                  | DESPLAZAR_BITS_IZQ\n                  | DESPLAZAR_BITS_DER\n  operaciones_arit : salidas_posibles operad_arit salidas_posibles\n                | salidas_posibles operad_arit operaciones_arit\n                \n  operaciones_bits : salidas_posibles operand_bits salidas_posibles\n                  | NEGACION salidas_posibles\n   operaciones_logicas : ENTERO operad_logico ENTERO\n                | FLOTANTE operad_logico FLOTANTE\n                | BOOLEANO\n                | decl_variable operad_logico decl_variable\n                | decl_variable operad_logico ENTERO\n                | decl_variable operad_logico FLOTANTE\n  operaciones : operaciones_logicas\n                  | operaciones_arit\n                  | operaciones_bits\n                  | pushpila\n                  | poppila\n  paraCalculos : ENTERO\n                  | FLOTANTE\n                  | decl_variablecombinarOp : operad_arit paraCalculos\n                | operad_arit paraCalculos combinarOpopAritVar : paraCalculos combinarOp estructuras_control : for\n                          | foreach\n                          | if_else\n                          | while\n   bloque : instrucciones\n              | retorno\n  for : FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRAsentenciasAnidadas : instrucciones \n            | instrucciones sentenciasAnidadas\n  declaracionp :  decl_variable valorc valorc : menor\n              | mayormenor : MENOR_IGUAL ENTERO FIN_LINEAmayor : MAYOR_IGUAL ENTERO FIN_LINEAdeclaracion_s : decl_variable crecimiento\n                    | crecimiento decl_variable\n   crecimiento : INCREMENTO \n                | DECREMENTO retorno : RETURN salidas_posibles FIN_LINEA\n              | RETURN operaciones FIN_LINEA\n  foreach : FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n              | FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n  while : WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA if_else : if_else_inicio if_else_fin if_else : if_else_inicio if_else_cuerpo if_else_finif_else_inicio : IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo : ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA\n                    |  ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo\n  if_else_fin : ELSE LLAVE_ABRE bloque LLAVE_CIERRA'
    
_lr_action_items = {'CLASS':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,130,144,149,166,179,180,208,220,221,222,236,266,280,288,290,293,294,297,],[5,5,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,-34,-19,-21,-133,-33,-35,-5,-20,-22,-23,-137,-45,-46,-115,-129,-131,-24,-130,]),'COMENTARIO_LINEA':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[12,12,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,12,-34,-19,-21,-133,12,-33,-35,-5,-20,-22,-23,12,-137,12,12,12,-45,12,12,12,-46,12,-115,-129,-131,-24,12,-130,]),'COMENTARIO_BLOQUE':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[13,13,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,13,-34,-19,-21,-133,13,-33,-35,-5,-20,-22,-23,13,-137,13,13,13,-45,13,13,13,-46,13,-115,-129,-131,-24,13,-130,]),'BREAK':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[16,16,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,16,-34,-19,-21,-133,16,-33,-35,-5,-20,-22,-23,16,-137,16,16,16,-45,16,16,16,-46,16,-115,-129,-131,-24,16,-130,]),'ECHO':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[19,19,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,19,-34,-19,-21,-133,19,-33,-35,-5,-20,-22,-23,19,-137,19,19,19,-45,19,19,19,-46,19,-115,-129,-131,-24,19,-130,]),'PRINT':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[21,21,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,21,-34,-19,-21,-133,21,-33,-35,-5,-20,-22,-23,21,-137,21,21,21,-45,21,21,21,-46,21,-115,-129,-131,-24,21,-130,]),'READLINE':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[22,22,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,22,-34,-19,-21,-133,22,-33,-35,-5,-20,-22,-23,22,-137,22,22,22,-45,22,22,22,-46,22,-115,-129,-131,-24,22,-130,]),'FGETS':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[24,24,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,24,-34,-19,-21,-133,24,-33,-35,-5,-20,-22,-23,24,-137,24,24,24,-45,24,24,24,-46,24,-115,-129,-131,-24,24,-130,]),'FSCANF':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[25,25,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,25,-34,-19,-21,-133,25,-33,-35,-5,-20,-22,-23,25,-137,25,25,25,-45,25,25,25,-46,25,-115,-129,-131,-24,25,-130,]),'FUNCTION':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[33,33,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,33,-34,-19,-21,-133,33,-33,-35,-5,-20,-22,-23,33,-137,33,33,33,-45,33,33,33,-46,33,-115,-129,-131,-24,33,-130,]),'SIGNO_DOLAR':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,39,50,51,52,53,54,55,56,57,58,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,144,149,153,163,166,167,168,179,180,182,183,198,200,204,206,208,220,221,222,224,230,231,232,236,246,250,252,253,262,266,271,272,273,274,275,277,280,282,288,290,293,294,295,297,],[26,26,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,26,26,-109,-110,-111,-112,26,109,26,-125,-126,-25,-26,-27,-28,-29,-30,-14,-15,-16,26,26,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,26,26,-66,-67,-68,-69,-70,-71,-83,-84,-85,-86,-87,26,-50,-51,26,26,-132,26,26,26,-34,-19,-21,191,26,-133,26,26,-33,-35,26,26,26,26,26,26,-5,-20,-22,-23,26,-118,-119,-120,-137,26,265,26,191,26,-45,26,-121,-122,26,26,26,-46,26,-115,-129,-131,-24,26,-130,]),'NEW':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,105,106,118,127,130,144,149,166,167,179,180,183,206,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[40,40,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,40,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-50,-51,-132,40,-34,-19,-21,-133,40,-33,-35,40,40,-5,-20,-22,-23,40,-137,40,40,40,-45,40,40,40,-46,40,-115,-129,-131,-24,40,-130,]),'ARRAY':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,66,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[41,41,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,41,-50,-51,-132,41,-34,-19,-21,-133,41,-33,-35,-5,-20,-22,-23,41,-137,41,41,41,-45,41,41,41,-46,41,-115,-129,-131,-24,41,-130,]),'CORCHETE_ABRE':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,66,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[42,42,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,42,-50,-51,-132,42,-34,-19,-21,-133,42,-33,-35,-5,-20,-22,-23,42,-137,42,42,42,-45,42,42,42,-46,42,-115,-129,-131,-24,42,-130,]),'FOR':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[43,43,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,43,-34,-19,-21,-133,43,-33,-35,-5,-20,-22,-23,43,-137,43,43,43,-45,43,43,43,-46,43,-115,-129,-131,-24,43,-130,]),'FOREACH':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[44,44,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,44,-34,-19,-21,-133,44,-33,-35,-5,-20,-22,-23,44,-137,44,44,44,-45,44,44,44,-46,44,-115,-129,-131,-24,44,-130,]),'WHILE':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[46,46,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,46,-34,-19,-21,-133,46,-33,-35,-5,-20,-22,-23,46,-137,46,46,46,-45,46,46,46,-46,46,-115,-129,-131,-24,46,-130,]),'ENTERO':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,42,50,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,111,118,123,126,127,130,144,149,161,166,167,168,179,180,182,183,197,204,206,208,220,221,222,224,233,234,236,246,252,254,262,266,271,274,277,280,282,288,290,293,294,295,297,],[47,47,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,83,83,-109,-110,-111,-112,83,83,-14,-15,-16,136,140,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,83,83,-66,-67,-68,-69,-70,-71,-83,-84,-85,-86,-87,83,-50,-51,83,-132,170,173,47,-34,-19,-21,83,-133,47,173,-33,-35,210,136,83,240,136,-5,-20,-22,-23,47,256,257,-137,47,47,83,47,-45,47,47,47,-46,47,-115,-129,-131,-24,47,-130,]),'FLOTANTE':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,42,50,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,111,118,124,126,127,130,144,149,161,166,167,168,179,180,182,183,197,204,206,208,220,221,222,224,236,246,252,254,262,266,271,274,277,280,282,288,290,293,294,295,297,],[48,48,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,84,84,-109,-110,-111,-112,84,84,-14,-15,-16,137,141,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,84,84,-66,-67,-68,-69,-70,-71,-83,-84,-85,-86,-87,84,-50,-51,84,-132,171,174,48,-34,-19,-21,84,-133,48,174,-33,-35,211,137,84,241,137,-5,-20,-22,-23,48,-137,48,48,84,48,-45,48,48,48,-46,48,-115,-129,-131,-24,48,-130,]),'BOOLEANO':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,42,50,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,111,118,126,127,130,144,149,161,166,167,168,179,180,183,197,204,206,208,220,221,222,224,236,246,252,254,262,266,271,274,277,280,282,288,290,293,294,295,297,],[49,49,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,85,85,-109,-110,-111,-112,85,85,-14,-15,-16,85,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,85,85,-66,-67,-68,-69,-70,-71,-83,-84,-85,-86,-87,85,-50,-51,85,-132,175,49,-34,-19,-21,85,-133,49,175,-33,-35,85,85,242,85,-5,-20,-22,-23,49,-137,49,49,85,49,-45,49,49,49,-46,49,-115,-129,-131,-24,49,-130,]),'NEGACION':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,204,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[50,50,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,50,-34,-19,-21,-133,50,-33,-35,50,-5,-20,-22,-23,50,-137,50,50,50,-45,50,50,50,-46,50,-115,-129,-131,-24,50,-130,]),'INCREMENTO':([0,2,3,4,6,7,8,9,10,11,12,13,17,29,30,31,32,63,64,65,104,105,106,118,127,130,144,149,154,166,167,179,180,198,208,220,221,222,224,229,230,231,232,236,246,252,262,266,271,272,273,274,277,280,282,288,290,293,294,295,297,],[51,51,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,51,-109,-110,-111,-112,-14,-15,-16,-31,-50,-51,-132,51,-34,-19,-21,-32,-133,51,-33,-35,51,-5,-20,-22,-23,51,51,-118,-119,-120,-137,51,51,51,-45,51,-121,-122,51,51,-46,51,-115,-129,-131,-24,51,-130,]),'DECREMENTO':([0,2,3,4,6,7,8,9,10,11,12,13,17,29,30,31,32,63,64,65,104,105,106,118,127,130,144,149,154,166,167,179,180,198,208,220,221,222,224,229,230,231,232,236,246,252,262,266,271,272,273,274,277,280,282,288,290,293,294,295,297,],[52,52,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,52,-109,-110,-111,-112,-14,-15,-16,-31,-50,-51,-132,52,-34,-19,-21,-32,-133,52,-33,-35,52,-5,-20,-22,-23,52,52,-118,-119,-120,-137,52,52,52,-45,52,-121,-122,52,52,-46,52,-115,-129,-131,-24,52,-130,]),'CONST':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,144,149,163,166,167,168,179,180,182,183,198,200,204,206,208,220,221,222,224,230,231,232,236,246,252,262,266,271,272,273,274,275,277,280,282,288,290,293,294,295,297,],[53,53,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,53,53,-109,-110,-111,-112,53,53,-125,-126,-14,-15,-16,53,53,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,53,53,-66,-67,-68,-69,-70,-71,-83,-84,-85,-86,-87,53,-50,-51,53,53,-132,53,53,53,-34,-19,-21,53,-133,53,53,-33,-35,53,53,53,53,53,53,-5,-20,-22,-23,53,-118,-119,-120,-137,53,53,53,-45,53,-121,-122,53,53,53,-46,53,-115,-129,-131,-24,53,-130,]),'PRIVATE':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,144,149,163,166,167,168,179,180,182,183,198,200,204,206,208,220,221,222,224,230,231,232,236,246,252,262,266,271,272,273,274,275,277,280,282,288,290,293,294,295,297,],[54,54,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,54,54,-109,-110,-111,-112,54,54,-125,-126,-14,-15,-16,54,54,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,54,54,-66,-67,-68,-69,-70,-71,-83,-84,-85,-86,-87,54,-50,-51,54,54,-132,54,54,54,-34,-19,-21,54,-133,54,54,-33,-35,54,54,54,54,54,54,-5,-20,-22,-23,54,-118,-119,-120,-137,54,54,54,-45,54,-121,-122,54,54,54,-46,54,-115,-129,-131,-24,54,-130,]),'PUBLIC':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,144,149,163,166,167,168,179,180,182,183,198,200,204,206,208,220,221,222,224,230,231,232,236,246,252,262,266,271,272,273,274,275,277,280,282,288,290,293,294,295,297,],[55,55,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,55,55,-109,-110,-111,-112,55,55,-125,-126,-14,-15,-16,55,55,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,55,55,-66,-67,-68,-69,-70,-71,-83,-84,-85,-86,-87,55,-50,-51,55,55,-132,55,55,55,-34,-19,-21,55,-133,55,55,-33,-35,55,55,55,55,55,55,-5,-20,-22,-23,55,-118,-119,-120,-137,55,55,55,-45,55,-121,-122,55,55,55,-46,55,-115,-129,-131,-24,55,-130,]),'PROTECTED':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,144,149,163,166,167,168,179,180,182,183,198,200,204,206,208,220,221,222,224,230,231,232,236,246,252,262,266,271,272,273,274,275,277,280,282,288,290,293,294,295,297,],[56,56,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,56,56,-109,-110,-111,-112,56,56,-125,-126,-14,-15,-16,56,56,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,56,56,-66,-67,-68,-69,-70,-71,-83,-84,-85,-86,-87,56,-50,-51,56,56,-132,56,56,56,-34,-19,-21,56,-133,56,56,-33,-35,56,56,56,56,56,56,-5,-20,-22,-23,56,-118,-119,-120,-137,56,56,56,-45,56,-121,-122,56,56,56,-46,56,-115,-129,-131,-24,56,-130,]),'STATIC':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,144,149,163,166,167,168,179,180,182,183,198,200,204,206,208,220,221,222,224,230,231,232,236,246,252,262,266,271,272,273,274,275,277,280,282,288,290,293,294,295,297,],[57,57,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,57,57,-109,-110,-111,-112,57,57,-125,-126,-14,-15,-16,57,57,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,57,57,-66,-67,-68,-69,-70,-71,-83,-84,-85,-86,-87,57,-50,-51,57,57,-132,57,57,57,-34,-19,-21,57,-133,57,57,-33,-35,57,57,57,57,57,57,-5,-20,-22,-23,57,-118,-119,-120,-137,57,57,57,-45,57,-121,-122,57,57,57,-46,57,-115,-129,-131,-24,57,-130,]),'VAR':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,38,50,51,52,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,116,117,118,122,126,127,130,144,149,163,166,167,168,179,180,182,183,198,200,204,206,208,220,221,222,224,230,231,232,236,246,252,262,266,271,272,273,274,275,277,280,282,288,290,293,294,295,297,],[58,58,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,58,58,-109,-110,-111,-112,58,58,-125,-126,-14,-15,-16,58,58,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,58,58,-66,-67,-68,-69,-70,-71,-83,-84,-85,-86,-87,58,-50,-51,58,58,-132,58,58,58,-34,-19,-21,58,-133,58,58,-33,-35,58,58,58,58,58,58,-5,-20,-22,-23,58,-118,-119,-120,-137,58,58,58,-45,58,-121,-122,58,58,58,-46,58,-115,-129,-131,-24,58,-130,]),'IF':([0,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,127,130,144,149,166,167,179,180,208,220,221,222,224,236,246,252,262,266,271,274,277,280,282,288,290,293,294,295,297,],[59,59,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,59,-34,-19,-21,-133,59,-33,-35,-5,-20,-22,-23,59,-137,59,59,59,-45,59,59,59,-46,59,-115,-129,-131,-24,59,-130,]),'CADENA':([0,2,3,4,6,7,8,9,10,11,12,13,19,21,29,30,31,32,42,50,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,105,106,111,118,127,130,144,149,161,166,167,179,180,183,188,197,204,206,208,220,221,222,224,236,246,252,254,262,266,271,274,277,280,282,288,290,293,294,295,297,],[23,23,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,23,23,-109,-110,-111,-112,23,23,-14,-15,-16,23,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,23,23,-66,-67,-68,-69,-70,-71,-83,-84,-85,-86,-87,23,150,-50,-51,23,-132,23,-34,-19,-21,23,-133,23,-33,-35,23,223,23,23,23,-5,-20,-22,-23,23,-137,23,23,23,23,-45,23,23,23,-46,23,-115,-129,-131,-24,23,-130,]),'$end':([1,2,3,4,6,7,8,9,10,11,12,13,29,30,31,32,61,63,64,65,105,106,118,130,144,149,166,179,180,208,220,221,222,236,266,280,288,290,293,294,297,],[0,-1,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-2,-14,-15,-16,-50,-51,-132,-34,-19,-21,-133,-33,-35,-5,-20,-22,-23,-137,-45,-46,-115,-129,-131,-24,-130,]),'IDENTIFICADOR':([5,26,33,109,191,265,],[62,104,107,154,226,279,]),'LLAVE_CIERRA':([6,7,8,9,10,11,12,13,29,30,31,32,63,64,65,105,106,118,130,144,149,166,177,179,180,201,202,203,220,221,222,236,251,260,261,264,266,267,276,280,281,282,283,286,288,289,290,293,294,296,297,],[-6,-7,-8,-9,-10,-11,-12,-13,-109,-110,-111,-112,-14,-15,-16,-50,-51,-132,-34,-19,-21,-133,208,-33,-35,236,-113,-114,-20,-22,-23,-137,266,-127,-128,278,-45,280,285,-46,288,-116,290,293,-115,-117,-129,-131,-24,297,-130,]),'FIN_LINEA':([14,15,16,18,23,27,28,34,35,36,37,49,51,52,60,67,81,82,83,84,85,100,104,108,112,125,128,129,131,132,133,134,135,136,137,139,140,141,145,146,147,154,156,159,160,170,171,181,185,186,187,192,193,194,209,210,211,212,219,237,238,239,240,241,242,247,248,249,256,257,287,],[63,64,65,-102,-43,105,106,-98,-99,-100,-101,-94,-125,-126,-17,-123,144,-18,-41,-42,-44,149,-31,-124,-57,-91,-39,179,180,-36,105,-38,-40,-41,-42,-95,-96,-97,-88,-89,-90,-32,-56,-59,-61,-92,-93,-108,220,221,222,-52,-58,-60,-106,-103,-104,-105,-53,260,261,-18,-41,-42,-44,-107,-54,-55,272,273,294,]),'IGUAL':([17,23,83,84,85,104,115,154,164,235,269,],[66,-43,-41,-42,-44,-31,162,-32,66,259,162,]),'LAMBDA':([17,104,128,154,239,],[69,-31,178,-32,69,]),'SUMA':([17,20,23,47,48,49,60,82,83,84,85,104,128,136,137,138,145,154,209,210,211,212,213,216,218,237,239,240,241,242,244,],[-18,88,-43,-41,-42,-44,-17,-18,-41,-42,-44,-31,-105,-41,-42,88,88,-32,88,-103,-104,-105,-18,-17,88,88,-18,-41,-42,-44,-105,]),'RESTA':([17,20,23,47,48,49,60,82,83,84,85,104,128,136,137,138,145,154,209,210,211,212,213,216,218,237,239,240,241,242,244,],[-18,89,-43,-41,-42,-44,-17,-18,-41,-42,-44,-31,-105,-41,-42,89,89,-32,89,-103,-104,-105,-18,-17,89,89,-18,-41,-42,-44,-105,]),'MULTIPLICACION':([17,20,23,47,48,49,60,82,83,84,85,104,128,136,137,138,145,154,209,210,211,212,213,216,218,237,239,240,241,242,244,],[-18,90,-43,-41,-42,-44,-17,-18,-41,-42,-44,-31,-105,-41,-42,90,90,-32,90,-103,-104,-105,-18,-17,90,90,-18,-41,-42,-44,-105,]),'DIVISION':([17,20,23,47,48,49,60,82,83,84,85,104,128,136,137,138,145,154,209,210,211,212,213,216,218,237,239,240,241,242,244,],[-18,91,-43,-41,-42,-44,-17,-18,-41,-42,-44,-31,-105,-41,-42,91,91,-32,91,-103,-104,-105,-18,-17,91,91,-18,-41,-42,-44,-105,]),'POTENCIA':([17,20,23,47,48,49,60,82,83,84,85,104,128,136,137,138,145,154,209,210,211,212,213,216,218,237,239,240,241,242,244,],[-18,92,-43,-41,-42,-44,-17,-18,-41,-42,-44,-31,-105,-41,-42,92,92,-32,92,-103,-104,-105,-18,-17,92,92,-18,-41,-42,-44,-105,]),'MODULO':([17,20,23,47,48,49,60,82,83,84,85,104,128,136,137,138,145,154,209,210,211,212,213,216,218,237,239,240,241,242,244,],[-18,93,-43,-41,-42,-44,-17,-18,-41,-42,-44,-31,-105,-41,-42,93,93,-32,93,-103,-104,-105,-18,-17,93,93,-18,-41,-42,-44,-105,]),'CONJUNCION':([17,20,23,47,48,49,60,104,154,237,239,240,241,242,],[-18,94,-43,-41,-42,-44,-17,-31,-32,94,-18,-41,-42,-44,]),'DISYUNCION':([17,20,23,47,48,49,60,104,154,237,239,240,241,242,],[-18,95,-43,-41,-42,-44,-17,-31,-32,95,-18,-41,-42,-44,]),'DISYUNCION_EXC':([17,20,23,47,48,49,60,104,154,237,239,240,241,242,],[-18,96,-43,-41,-42,-44,-17,-31,-32,96,-18,-41,-42,-44,]),'DESPLAZAR_BITS_IZQ':([17,20,23,47,48,49,60,104,154,237,239,240,241,242,],[-18,97,-43,-41,-42,-44,-17,-31,-32,97,-18,-41,-42,-44,]),'DESPLAZAR_BITS_DER':([17,20,23,47,48,49,60,104,154,237,239,240,241,242,],[-18,98,-43,-41,-42,-44,-17,-31,-32,98,-18,-41,-42,-44,]),'IGUALDAD':([17,47,48,104,154,169,173,174,176,239,240,241,],[70,70,70,-31,-32,70,70,70,70,70,70,70,]),'IDENTIDAD':([17,47,48,104,154,169,173,174,176,239,240,241,],[71,71,71,-31,-32,71,71,71,71,71,71,71,]),'DIFERENTE':([17,47,48,104,154,169,173,174,176,239,240,241,],[72,72,72,-31,-32,72,72,72,72,72,72,72,]),'NO_IDENTIDAD':([17,47,48,104,154,169,173,174,176,239,240,241,],[73,73,73,-31,-32,73,73,73,73,73,73,73,]),'MAYOR':([17,47,48,104,154,162,169,173,174,176,239,240,241,259,],[74,74,74,-31,-32,197,74,74,74,74,74,74,74,275,]),'MAYOR_IGUAL':([17,47,48,104,154,169,173,174,176,199,239,240,241,],[75,75,75,-31,-32,75,75,75,75,234,75,75,75,]),'MENOR':([17,47,48,104,154,169,173,174,176,239,240,241,],[76,76,76,-31,-32,76,76,76,76,76,76,76,]),'MENOR_IGUAL':([17,47,48,104,154,169,173,174,176,199,239,240,241,],[77,77,77,-31,-32,77,77,77,77,233,77,77,77,]),'AND':([17,47,48,104,154,169,173,174,176,239,240,241,],[78,78,78,-31,-32,78,78,78,78,78,78,78,]),'OR':([17,47,48,104,154,169,173,174,176,239,240,241,],[79,79,79,-31,-32,79,79,79,79,79,79,79,]),'XOR':([17,47,48,104,154,169,173,174,176,239,240,241,],[80,80,80,-31,-32,80,80,80,80,80,80,80,]),'PARENTESIS_ABRE':([21,22,24,25,41,43,44,46,59,107,110,121,142,143,],[99,101,102,103,111,116,117,122,126,153,155,168,183,184,]),'COMA':([23,83,84,85,115,152,195,223,226,227,],[-43,-41,-42,-44,161,188,161,250,253,254,]),'CORCHETE_CIERRA':([23,42,83,84,85,113,114,115,195,196,227,270,],[-43,112,-41,-42,-44,159,160,-64,-64,-65,-62,-63,]),'PARENTESIS_CIERRA':([23,51,52,60,67,82,83,84,85,104,108,111,115,132,134,135,136,137,139,140,141,145,146,148,150,151,153,154,155,157,158,170,171,172,175,181,184,190,192,195,196,205,209,210,211,212,213,214,215,216,217,226,227,228,235,244,245,247,268,270,279,284,],[-43,-125,-126,-17,-123,-18,-41,-42,-44,-31,-124,156,-64,-36,-38,-40,-41,-42,-95,-96,-97,-88,-89,185,186,187,189,-32,192,193,194,-92,-93,207,-94,-108,219,225,-52,-64,-65,243,-106,-103,-104,-105,-39,248,249,-36,-37,-48,-62,255,258,-39,263,-107,-49,-63,287,291,]),'STACK':([40,],[110,]),'ELSE':([45,119,278,285,292,],[120,120,-134,-135,-136,]),'ELSEIF':([45,278,285,],[121,-134,121,]),'LLAVE_ABRE':([62,120,189,207,225,243,255,258,263,291,],[127,167,224,246,252,262,271,274,277,295,]),'NULO':([66,70,71,72,73,74,75,76,77,78,79,80,183,206,],[134,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,134,134,]),'PUSH':([69,],[142,]),'POP':([69,178,],[143,143,]),'STDIN':([102,103,],[151,152,]),'AS':([104,154,165,],[-31,-32,200,]),'RETURN':([167,224,246,252,262,],[204,204,204,204,204,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'variaslineas':([0,2,],[1,61,]),'programa':([0,2,],[2,2,]),'clase':([0,2,],[3,3,]),'instrucciones':([0,2,127,167,224,246,252,262,271,274,277,282,295,],[4,4,177,202,202,202,202,202,282,282,286,282,282,]),'asignacion':([0,2,116,127,167,224,246,252,262,271,274,277,282,295,],[6,6,163,6,6,6,6,6,6,6,6,6,6,6,]),'salida':([0,2,127,167,224,246,252,262,271,274,277,282,295,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'ingreso':([0,2,127,167,224,246,252,262,271,274,277,282,295,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'estructuras_datos':([0,2,66,127,167,224,246,252,262,271,274,277,282,295,],[9,9,130,9,9,9,9,9,9,9,9,9,9,9,]),'estructuras_control':([0,2,127,167,224,246,252,262,271,274,277,282,295,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'funcion':([0,2,127,167,224,246,252,262,271,274,277,282,295,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'operaciones':([0,2,127,167,204,224,246,252,262,271,274,277,282,295,],[14,14,14,14,238,14,14,14,14,14,14,14,14,14,]),'declaracion_s':([0,2,127,167,198,224,246,252,262,271,274,277,282,295,],[15,15,15,15,228,15,15,15,15,15,15,15,15,15,]),'decl_variable':([0,2,19,21,38,50,66,68,86,87,99,116,117,122,126,127,163,167,168,182,183,198,200,204,206,224,246,252,262,271,274,275,277,282,295,],[17,17,82,82,108,82,128,139,82,82,82,164,165,169,176,17,199,17,176,212,213,229,235,239,244,17,17,17,17,17,17,284,17,17,17,]),'poppila':([0,2,66,127,167,204,224,246,252,262,271,274,277,282,295,],[18,18,131,18,18,18,18,18,18,18,18,18,18,18,18,]),'salidas_posibles':([0,2,19,21,50,86,87,99,127,167,183,204,224,246,252,262,271,274,277,282,295,],[20,20,81,100,125,145,147,148,20,20,218,237,20,20,20,20,20,20,20,20,20,]),'pila':([0,2,66,127,167,183,206,224,246,252,262,271,274,277,282,295,],[27,27,133,27,27,217,217,27,27,27,27,27,27,27,27,27,]),'arreglo':([0,2,66,127,167,224,246,252,262,271,274,277,282,295,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'for':([0,2,127,167,224,246,252,262,271,274,277,282,295,],[29,29,29,29,29,29,29,29,29,29,29,29,29,]),'foreach':([0,2,127,167,224,246,252,262,271,274,277,282,295,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'if_else':([0,2,127,167,224,246,252,262,271,274,277,282,295,],[31,31,31,31,31,31,31,31,31,31,31,31,31,]),'while':([0,2,127,167,224,246,252,262,271,274,277,282,295,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'operaciones_logicas':([0,2,126,127,167,168,204,224,246,252,262,271,274,277,282,295,],[34,34,172,34,34,205,34,34,34,34,34,34,34,34,34,34,]),'operaciones_arit':([0,2,86,127,167,183,204,224,246,252,262,271,274,277,282,295,],[35,35,146,35,35,215,35,35,35,35,35,35,35,35,35,35,]),'operaciones_bits':([0,2,127,167,204,224,246,252,262,271,274,277,282,295,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'pushpila':([0,2,127,167,204,224,246,252,262,271,274,277,282,295,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'crecimiento':([0,2,17,127,167,198,224,229,246,252,262,271,274,277,282,295,],[38,38,67,38,38,38,38,67,38,38,38,38,38,38,38,38,]),'variable_tipo':([0,2,19,21,38,50,66,68,86,87,99,116,117,122,126,127,163,167,168,182,183,198,200,204,206,224,246,252,262,271,274,275,277,282,295,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'if_else_inicio':([0,2,127,167,224,246,252,262,271,274,277,282,295,],[45,45,45,45,45,45,45,45,45,45,45,45,45,]),'datos':([0,2,19,21,42,50,66,86,87,99,111,127,161,167,183,197,204,206,224,246,252,254,262,271,274,277,282,295,],[60,60,60,60,115,60,132,60,60,60,115,60,195,60,216,227,60,132,60,60,60,269,60,60,60,60,60,60,]),'operad_logico':([17,47,48,169,173,174,176,239,240,241,],[68,123,124,206,123,124,68,68,123,124,]),'operad_arit':([20,138,145,209,218,237,],[86,182,86,182,86,86,]),'operand_bits':([20,237,],[87,87,]),'elementos':([42,111,161,],[113,157,196,]),'asociacion':([42,111,254,],[114,158,270,]),'if_else_fin':([45,119,],[118,166,]),'if_else_cuerpo':([45,285,],[119,292,]),'valor':([66,183,206,],[129,214,245,]),'opAritVar':([66,183,206,],[135,135,135,]),'paraCalculos':([66,182,183,206,],[138,209,138,138,]),'combinarOp':([138,209,],[181,247,]),'parametros':([153,253,],[190,268,]),'declaracionp':([163,],[198,]),'bloque':([167,224,246,252,262,],[201,251,264,267,276,]),'retorno':([167,224,246,252,262,],[203,203,203,203,203,]),'valorc':([199,],[230,]),'menor':([199,],[231,]),'mayor':([199,],[232,]),'sentenciasAnidadas':([271,274,282,295,],[281,283,289,296,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> variaslineas","S'",1,None,None,None),
  ('variaslineas -> programa','variaslineas',1,'p_variaslineas','sintactico.py',5),
  ('variaslineas -> programa variaslineas','variaslineas',2,'p_variaslineas','sintactico.py',6),
  ('programa -> clase','programa',1,'p_programa','sintactico.py',10),
  ('programa -> instrucciones','programa',1,'p_programa','sintactico.py',11),
  ('clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA','clase',5,'p_clase','sintactico.py',15),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> salida','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> ingreso','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> estructuras_datos','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> estructuras_control','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> funcion','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('instrucciones -> COMENTARIO_LINEA','instrucciones',1,'p_instrucciones','sintactico.py',24),
  ('instrucciones -> COMENTARIO_BLOQUE','instrucciones',1,'p_instrucciones','sintactico.py',25),
  ('instrucciones -> operaciones FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',26),
  ('instrucciones -> declaracion_s FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',27),
  ('instrucciones -> BREAK FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',28),
  ('salidas_posibles -> datos','salidas_posibles',1,'p_salidas_posibles','sintactico.py',34),
  ('salidas_posibles -> decl_variable','salidas_posibles',1,'p_salidas_posibles','sintactico.py',35),
  ('salida -> ECHO salidas_posibles FIN_LINEA','salida',3,'p_salida_forma1','sintactico.py',39),
  ('salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA','salida',5,'p_salida_forma2','sintactico.py',42),
  ('salida -> PRINT salidas_posibles FIN_LINEA','salida',3,'p_salida_forma3','sintactico.py',45),
  ('ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma1','sintactico.py',50),
  ('ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma2','sintactico.py',53),
  ('ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA','ingreso',10,'p_ingreso_forma3','sintactico.py',56),
  ('variable_tipo -> CONST','variable_tipo',1,'p_variable_tipo','sintactico.py',61),
  ('variable_tipo -> PRIVATE','variable_tipo',1,'p_variable_tipo','sintactico.py',62),
  ('variable_tipo -> PUBLIC','variable_tipo',1,'p_variable_tipo','sintactico.py',63),
  ('variable_tipo -> PROTECTED','variable_tipo',1,'p_variable_tipo','sintactico.py',64),
  ('variable_tipo -> STATIC','variable_tipo',1,'p_variable_tipo','sintactico.py',65),
  ('variable_tipo -> VAR','variable_tipo',1,'p_variable_tipo','sintactico.py',66),
  ('decl_variable -> SIGNO_DOLAR IDENTIFICADOR','decl_variable',2,'p_decl_variable','sintactico.py',72),
  ('decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR','decl_variable',3,'p_decl_variable','sintactico.py',73),
  ('asignacion -> decl_variable IGUAL valor FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',76),
  ('asignacion -> decl_variable IGUAL estructuras_datos','asignacion',3,'p_asignacion','sintactico.py',77),
  ('asignacion -> decl_variable IGUAL poppila FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',78),
  ('valor -> datos','valor',1,'p_valor','sintactico.py',83),
  ('valor -> pila','valor',1,'p_valor','sintactico.py',84),
  ('valor -> NULO','valor',1,'p_valor','sintactico.py',85),
  ('valor -> decl_variable','valor',1,'p_valor','sintactico.py',86),
  ('valor -> opAritVar','valor',1,'p_valor','sintactico.py',87),
  ('datos -> ENTERO','datos',1,'p_datos','sintactico.py',92),
  ('datos -> FLOTANTE','datos',1,'p_datos','sintactico.py',93),
  ('datos -> CADENA','datos',1,'p_datos','sintactico.py',94),
  ('datos -> BOOLEANO','datos',1,'p_datos','sintactico.py',95),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','funcion',7,'p_funcion','sintactico.py',101),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','funcion',8,'p_funcion_parametros','sintactico.py',105),
  ('funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA','funcionuso',4,'p_funcionenuso','sintactico.py',108),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR','parametros',2,'p_parametros','sintactico.py',112),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros','parametros',4,'p_parametros','sintactico.py',113),
  ('estructuras_datos -> pila FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','sintactico.py',119),
  ('estructuras_datos -> arreglo FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','sintactico.py',120),
  ('pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA','pila',4,'p_pila','sintactico.py',123),
  ('poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA','poppila',5,'p_pop','sintactico.py',126),
  ('pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA','pushpila',6,'p_push','sintactico.py',130),
  ('pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA','pushpila',6,'p_push','sintactico.py',131),
  ('arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA','arreglo',3,'p_arreglo_vacio','sintactico.py',135),
  ('arreglo -> CORCHETE_ABRE CORCHETE_CIERRA','arreglo',2,'p_arreglo_vacio','sintactico.py',136),
  ('arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA','arreglo',4,'p_arreglo_indexado','sintactico.py',140),
  ('arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA','arreglo',3,'p_arreglo_indexado','sintactico.py',141),
  ('arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA','arreglo',4,'p_arreglo_asociativo','sintactico.py',145),
  ('arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA','arreglo',3,'p_arreglo_asociativo','sintactico.py',146),
  ('asociacion -> datos IGUAL MAYOR datos','asociacion',4,'p_asociacion','sintactico.py',150),
  ('asociacion -> datos IGUAL MAYOR datos COMA asociacion','asociacion',6,'p_asociacion','sintactico.py',151),
  ('elementos -> datos','elementos',1,'p_elementos','sintactico.py',154),
  ('elementos -> datos COMA elementos','elementos',3,'p_elementos','sintactico.py',155),
  ('operad_arit -> SUMA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',160),
  ('operad_arit -> RESTA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',161),
  ('operad_arit -> MULTIPLICACION','operad_arit',1,'p_operad_aritmeticas','sintactico.py',162),
  ('operad_arit -> DIVISION','operad_arit',1,'p_operad_aritmeticas','sintactico.py',163),
  ('operad_arit -> POTENCIA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',164),
  ('operad_arit -> MODULO','operad_arit',1,'p_operad_aritmeticas','sintactico.py',165),
  ('operad_logico -> IGUALDAD','operad_logico',1,'p_operad_logicos','sintactico.py',169),
  ('operad_logico -> IDENTIDAD','operad_logico',1,'p_operad_logicos','sintactico.py',170),
  ('operad_logico -> DIFERENTE','operad_logico',1,'p_operad_logicos','sintactico.py',171),
  ('operad_logico -> NO_IDENTIDAD','operad_logico',1,'p_operad_logicos','sintactico.py',172),
  ('operad_logico -> MAYOR','operad_logico',1,'p_operad_logicos','sintactico.py',173),
  ('operad_logico -> MAYOR_IGUAL','operad_logico',1,'p_operad_logicos','sintactico.py',174),
  ('operad_logico -> MENOR','operad_logico',1,'p_operad_logicos','sintactico.py',175),
  ('operad_logico -> MENOR_IGUAL','operad_logico',1,'p_operad_logicos','sintactico.py',176),
  ('operad_logico -> AND','operad_logico',1,'p_operad_logicos','sintactico.py',177),
  ('operad_logico -> OR','operad_logico',1,'p_operad_logicos','sintactico.py',178),
  ('operad_logico -> XOR','operad_logico',1,'p_operad_logicos','sintactico.py',179),
  ('operand_bits -> CONJUNCION','operand_bits',1,'p_operad_bits','sintactico.py',185),
  ('operand_bits -> DISYUNCION','operand_bits',1,'p_operad_bits','sintactico.py',186),
  ('operand_bits -> DISYUNCION_EXC','operand_bits',1,'p_operad_bits','sintactico.py',187),
  ('operand_bits -> DESPLAZAR_BITS_IZQ','operand_bits',1,'p_operad_bits','sintactico.py',188),
  ('operand_bits -> DESPLAZAR_BITS_DER','operand_bits',1,'p_operad_bits','sintactico.py',189),
  ('operaciones_arit -> salidas_posibles operad_arit salidas_posibles','operaciones_arit',3,'p_operaciones_arit','sintactico.py',195),
  ('operaciones_arit -> salidas_posibles operad_arit operaciones_arit','operaciones_arit',3,'p_operaciones_arit','sintactico.py',196),
  ('operaciones_bits -> salidas_posibles operand_bits salidas_posibles','operaciones_bits',3,'p_operaciones_bits','sintactico.py',201),
  ('operaciones_bits -> NEGACION salidas_posibles','operaciones_bits',2,'p_operaciones_bits','sintactico.py',202),
  ('operaciones_logicas -> ENTERO operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',206),
  ('operaciones_logicas -> FLOTANTE operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',207),
  ('operaciones_logicas -> BOOLEANO','operaciones_logicas',1,'p_operaciones_logica','sintactico.py',208),
  ('operaciones_logicas -> decl_variable operad_logico decl_variable','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',209),
  ('operaciones_logicas -> decl_variable operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',210),
  ('operaciones_logicas -> decl_variable operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',211),
  ('operaciones -> operaciones_logicas','operaciones',1,'p_operaciones','sintactico.py',215),
  ('operaciones -> operaciones_arit','operaciones',1,'p_operaciones','sintactico.py',216),
  ('operaciones -> operaciones_bits','operaciones',1,'p_operaciones','sintactico.py',217),
  ('operaciones -> pushpila','operaciones',1,'p_operaciones','sintactico.py',218),
  ('operaciones -> poppila','operaciones',1,'p_operaciones','sintactico.py',219),
  ('paraCalculos -> ENTERO','paraCalculos',1,'p_paraCalculos','sintactico.py',223),
  ('paraCalculos -> FLOTANTE','paraCalculos',1,'p_paraCalculos','sintactico.py',224),
  ('paraCalculos -> decl_variable','paraCalculos',1,'p_paraCalculos','sintactico.py',225),
  ('combinarOp -> operad_arit paraCalculos','combinarOp',2,'p_combinarOp','sintactico.py',228),
  ('combinarOp -> operad_arit paraCalculos combinarOp','combinarOp',3,'p_combinarOp','sintactico.py',229),
  ('opAritVar -> paraCalculos combinarOp','opAritVar',2,'p_opAritmeticaEnVar','sintactico.py',232),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','sintactico.py',237),
  ('estructuras_control -> foreach','estructuras_control',1,'p_estructuras_control','sintactico.py',238),
  ('estructuras_control -> if_else','estructuras_control',1,'p_estructuras_control','sintactico.py',239),
  ('estructuras_control -> while','estructuras_control',1,'p_estructuras_control','sintactico.py',240),
  ('bloque -> instrucciones','bloque',1,'p_bloque','sintactico.py',245),
  ('bloque -> retorno','bloque',1,'p_bloque','sintactico.py',246),
  ('for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','for',9,'p_for','sintactico.py',252),
  ('sentenciasAnidadas -> instrucciones','sentenciasAnidadas',1,'p_sentenciasAnidadas','sintactico.py',255),
  ('sentenciasAnidadas -> instrucciones sentenciasAnidadas','sentenciasAnidadas',2,'p_sentenciasAnidadas','sintactico.py',256),
  ('declaracionp -> decl_variable valorc','declaracionp',2,'p_declaracionM','sintactico.py',260),
  ('valorc -> menor','valorc',1,'p_valorC','sintactico.py',263),
  ('valorc -> mayor','valorc',1,'p_valorC','sintactico.py',264),
  ('menor -> MENOR_IGUAL ENTERO FIN_LINEA','menor',3,'p_menor','sintactico.py',267),
  ('mayor -> MAYOR_IGUAL ENTERO FIN_LINEA','mayor',3,'p_mayor','sintactico.py',270),
  ('declaracion_s -> decl_variable crecimiento','declaracion_s',2,'p_declaracionsimple','sintactico.py',273),
  ('declaracion_s -> crecimiento decl_variable','declaracion_s',2,'p_declaracionsimple','sintactico.py',274),
  ('crecimiento -> INCREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',278),
  ('crecimiento -> DECREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',279),
  ('retorno -> RETURN salidas_posibles FIN_LINEA','retorno',3,'p_retorno','sintactico.py',282),
  ('retorno -> RETURN operaciones FIN_LINEA','retorno',3,'p_retorno','sintactico.py',283),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',9,'p_foreach','sintactico.py',289),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',12,'p_foreach','sintactico.py',290),
  ('while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','while',9,'p_while','sintactico.py',296),
  ('if_else -> if_else_inicio if_else_fin','if_else',2,'p_if_else_corto','sintactico.py',301),
  ('if_else -> if_else_inicio if_else_cuerpo if_else_fin','if_else',3,'p_if_else_extendido','sintactico.py',305),
  ('if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_inicio',7,'p_if_else_inicio','sintactico.py',309),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_cuerpo',7,'p_if_else_cuerpo','sintactico.py',313),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo','if_else_cuerpo',8,'p_if_else_cuerpo','sintactico.py',314),
  ('if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA','if_else_fin',4,'p_if_else_fin','sintactico.py',319),
]
