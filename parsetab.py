
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY AS BACKSLASH BOOLEANO BREAK CADENA CLASS COMA COMENTARIO_BLOQUE COMENTARIO_LINEA CONJUNCION CONJUNCIONBITS CONST CORCHETE_ABRE CORCHETE_CIERRA DECREMENTO DESPLAZAR_BITS_DER DESPLAZAR_BITS_IZQ DIFERENTE DISYUNCION DISYUNCIONBITS DISYUNCION_EXC DIVISION ECHO ELSE ELSEIF ENTERO EXPLODE FGETS FIN_LINEA FLOTANTE FOR FOREACH FSCANF FUNCTION IDENTIDAD IDENTIFICADOR IF IGUAL IGUALDAD INCREMENTO LAMBDA LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NEGACION NEW NO_IDENTIDAD NULO OR PARENTESIS_ABRE PARENTESIS_CIERRA POP POTENCIA PRINT PRIVATE PROTECTED PUBLIC PUNTO PUSH READLINE RESTA RETURN SIGNO_DOLAR STACK STATIC STDIN SUMA VAR WHILE XOR variaslineas : programa\n                    | programa variaslineasprograma : clase\n              | instrucciones\n  clase : CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRAinstrucciones : asignacion\n            | salida\n            | ingreso\n            | estructuras_datos\n            | estructuras_control\n            | funcionglobal\n            | COMENTARIO_LINEA\n            | COMENTARIO_BLOQUE\n            | operaciones FIN_LINEA\n            | declaracion_s FIN_LINEA\n            | BREAK FIN_LINEA\n            | concadenacion1\n            | concatenacion2\n  salidas_posibles : datos\n                | decl_variable\n  salida : ECHO salidas_posibles FIN_LINEAsalida : PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEAsalida : PRINT salidas_posibles FIN_LINEAingreso : READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEAingreso : FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEAingreso : FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEAvariable_tipo : CONST\n                  | PRIVATE\n                  | PUBLIC\n                  | PROTECTED\n                  | STATIC\n                  | VAR\n  decl_variable : SIGNO_DOLAR IDENTIFICADOR\n                    | variable_tipo SIGNO_DOLAR IDENTIFICADORasignacion : decl_variable IGUAL valor FIN_LINEA\n                | decl_variable IGUAL estructuras_datos\n                | decl_variable IGUAL explode FIN_LINEA\n                | decl_variable IGUAL funcionuso FIN_LINEA\n                | decl_variable IGUAL operaciones FIN_LINEA\n  valor : datos\n            | pila\n            | NULO\n            | decl_variable\n            | opAritVar\n            \n  datos : ENTERO\n          | FLOTANTE\n          | CADENA \n          | BOOLEANO\n  funcion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRAfuncion : FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRAfuncionglobal : funcion\n                    | variable_tipo funcion\n    funcionuso : IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA\n                | IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA\n  parametros : SIGNO_DOLAR IDENTIFICADOR\n                  | SIGNO_DOLAR IDENTIFICADOR COMA parametros\n   estructuras_datos : pila FIN_LINEA\n                        | arreglo FIN_LINEA\n  pila :  NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRApoppila : decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA\n  pushpila : decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA\n            | decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA\n  explode : EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA\n                | EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA\n    arreglo : ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA\n              | CORCHETE_ABRE CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA\n              | CORCHETE_ABRE elementos CORCHETE_CIERRA\n  arreglo : ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA\n              | CORCHETE_ABRE asociacion CORCHETE_CIERRA\n  asociacion : datos IGUAL MAYOR datos\n                  | datos IGUAL MAYOR datos COMA asociacion\n  elementos : datos\n                  | datos COMA elementos\n    operad_arit : SUMA\n                | RESTA\n                | MULTIPLICACION\n                | DIVISION\n                | POTENCIA\n                | MODULO\n  operad_logico : IGUALDAD\n                | IDENTIDAD\n                | DIFERENTE\n                | NO_IDENTIDAD\n                | MAYOR\n                | MAYOR_IGUAL\n                | MENOR\n                | MENOR_IGUAL\n                | AND\n                | OR\n                | XOR\n                | CONJUNCION\n                | DISYUNCION\n  operand_bits : CONJUNCIONBITS\n                  | DISYUNCIONBITS\n                  | DISYUNCION_EXC\n                  | DESPLAZAR_BITS_IZQ\n                  | DESPLAZAR_BITS_DER\n  operaciones_arit : salidas_posibles operad_arit salidas_posibles\n                | salidas_posibles operad_arit operaciones_arit\n                \n  operaciones_bits : salidas_posibles operand_bits salidas_posibles\n                  | NEGACION salidas_posibles\n   operaciones_logicas : ENTERO operad_logico ENTERO\n                | FLOTANTE operad_logico FLOTANTE\n                | BOOLEANO\n                | decl_variable operad_logico decl_variable\n                | decl_variable operad_logico ENTERO\n                | decl_variable operad_logico FLOTANTE\n                | operaciones_arit operad_logico ENTERO\n                | operaciones_arit operad_logico FLOTANTE\n                | funcionuso\n                | funcionuso operad_logico funcionuso\n                | funcionuso operad_logico operaciones_logicas\n                | operaciones_logicas operad_logico funcionuso\n  operaciones : operaciones_logicas\n                  | operaciones_arit\n                  | operaciones_bits\n                  | pushpila\n                  | poppila\n  paraCalculos : ENTERO\n                  | FLOTANTE\n                  | decl_variablecombinarOp : operad_arit paraCalculos\n                | operad_arit paraCalculos combinarOpopAritVar : paraCalculos combinarOp estructuras_control : for\n                          | foreach\n                          | if_else\n                          | while\n   bloque : sentenciasAnidadas retorno\n            | sentenciasAnidadas\n            | retorno\n  for : FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRAsentenciasAnidadas : instrucciones \n            | instrucciones sentenciasAnidadas\n  declaracionp :  decl_variable valorc valorc : menor\n              | mayormenor : MENOR_IGUAL ENTERO FIN_LINEA\n            | MENOR_IGUAL decl_variable FIN_LINEA\n            | MENOR ENTERO FIN_LINEA\n            | MENOR decl_variable FIN_LINEA\n  mayor : MAYOR_IGUAL ENTERO FIN_LINEA\n            | MENOR_IGUAL decl_variable FIN_LINEA\n            | MAYOR ENTERO FIN_LINEA\n            | MAYOR decl_variable FIN_LINEA\n  declaracion_s : decl_variable crecimiento\n                    | crecimiento decl_variable\n   crecimiento : INCREMENTO \n                | DECREMENTO retorno : RETURN salidas_posibles FIN_LINEA\n              | RETURN operaciones FIN_LINEA\n  foreach : FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n              | FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA\n  while : WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA if_else : if_else_inicio if_else_fin if_else : if_else_inicio if_else_cuerpo if_else_finif_else_inicio : IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo : ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA\n                    |  ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo\n  if_else_fin : ELSE LLAVE_ABRE bloque LLAVE_CIERRAconcadenacion1 : ECHO salidas_posibles PUNTO decl_variable FIN_LINEAconcatenacion2 : decl_variable PUNTO IGUAL  datos FIN_LINEA'
    
_lr_action_items = {'CLASS':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,148,172,178,197,210,211,212,213,242,250,258,259,260,261,274,328,339,342,343,346,348,351,],[5,5,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,-36,-21,-23,-157,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,-49,-50,-133,-153,-155,-26,-154,]),'COMENTARIO_LINEA':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[13,13,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,13,-36,-21,-23,-157,13,13,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,13,13,13,13,13,13,13,-49,-50,-133,-153,-155,-26,13,-154,]),'COMENTARIO_BLOQUE':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[14,14,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,14,-36,-21,-23,-157,14,14,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,14,14,14,14,14,14,14,-49,-50,-133,-153,-155,-26,14,-154,]),'BREAK':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[17,17,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,17,-36,-21,-23,-157,17,17,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,17,17,17,17,17,17,17,-49,-50,-133,-153,-155,-26,17,-154,]),'ECHO':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[22,22,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,22,-36,-21,-23,-157,22,22,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,22,22,22,22,22,22,22,-49,-50,-133,-153,-155,-26,22,-154,]),'PRINT':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[24,24,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,24,-36,-21,-23,-157,24,24,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,24,24,24,24,24,24,24,-49,-50,-133,-153,-155,-26,24,-154,]),'READLINE':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[25,25,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,25,-36,-21,-23,-157,25,25,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,25,25,25,25,25,25,25,-49,-50,-133,-153,-155,-26,25,-154,]),'FGETS':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[27,27,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,27,-36,-21,-23,-157,27,27,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,27,27,27,27,27,27,27,-49,-50,-133,-153,-155,-26,27,-154,]),'FSCANF':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[28,28,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,28,-36,-21,-23,-157,28,28,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,28,28,28,28,28,28,28,-49,-50,-133,-153,-155,-26,28,-154,]),'SIGNO_DOLAR':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,22,24,32,33,34,35,36,37,43,53,54,55,56,57,58,62,63,64,68,69,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,129,130,131,135,140,141,148,172,173,178,194,197,198,199,201,206,210,211,212,213,216,218,230,232,236,238,242,244,250,258,259,260,261,266,267,268,269,270,272,274,285,287,289,293,307,310,316,317,318,319,320,321,322,323,324,325,327,328,339,342,343,346,348,349,351,],[29,29,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,29,29,-126,-127,-128,-129,-51,119,29,-27,-28,-29,-30,-31,-32,29,-149,-150,144,-14,-15,-16,29,29,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,29,119,29,29,-75,-76,-77,-78,-79,-80,-94,-95,-96,-97,-98,29,-57,-58,-52,29,29,-156,29,29,29,-36,-21,29,-23,29,-157,29,29,144,29,-35,-37,-38,-39,29,29,29,29,29,29,-5,144,-163,-162,-22,-24,-25,-136,-137,-138,29,29,29,-161,29,29,29,313,29,29,29,-139,-140,-141,-142,-143,-145,-146,29,29,29,-49,-50,-133,-153,-155,-26,29,-154,]),'NEW':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,218,238,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[45,45,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,45,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-57,-58,-52,-156,45,-36,-21,-23,-157,45,45,-35,-37,-38,-39,45,45,-5,-163,-162,-22,-24,-25,-161,45,45,45,45,45,45,45,-49,-50,-133,-153,-155,-26,45,-154,]),'ARRAY':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,72,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[46,46,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,46,-57,-58,-52,-156,46,-36,-21,-23,-157,46,46,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,46,46,46,46,46,46,46,-49,-50,-133,-153,-155,-26,46,-154,]),'CORCHETE_ABRE':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,72,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[47,47,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,47,-57,-58,-52,-156,47,-36,-21,-23,-157,47,47,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,47,47,47,47,47,47,47,-49,-50,-133,-153,-155,-26,47,-154,]),'FOR':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[48,48,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,48,-36,-21,-23,-157,48,48,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,48,48,48,48,48,48,48,-49,-50,-133,-153,-155,-26,48,-154,]),'FOREACH':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[49,49,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,49,-36,-21,-23,-157,49,49,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,49,49,49,49,49,49,49,-49,-50,-133,-153,-155,-26,49,-154,]),'WHILE':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[51,51,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,51,-36,-21,-23,-157,51,51,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,51,51,51,51,51,51,51,-49,-50,-133,-153,-155,-26,51,-154,]),'FUNCTION':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,37,53,54,55,56,57,58,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[52,52,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,52,-27,-28,-29,-30,-31,-32,-14,-15,-16,-57,-58,-52,-156,52,-36,-21,-23,-157,52,52,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,52,52,52,52,52,52,52,-49,-50,-133,-153,-155,-26,52,-154,]),'CONST':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,22,24,32,33,34,35,36,43,62,63,64,69,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,129,130,131,135,140,141,148,172,173,178,194,197,198,199,206,210,211,212,213,216,218,230,232,236,238,242,250,258,259,260,261,266,267,268,269,270,272,274,285,287,289,307,310,316,317,318,319,320,321,322,323,324,325,327,328,339,342,343,346,348,349,351,],[53,53,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,53,53,-126,-127,-128,-129,-51,53,53,-149,-150,-14,-15,-16,53,53,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,53,53,53,-75,-76,-77,-78,-79,-80,-94,-95,-96,-97,-98,53,-57,-58,-52,53,53,-156,53,53,53,-36,-21,53,-23,53,-157,53,53,53,-35,-37,-38,-39,53,53,53,53,53,53,-5,-163,-162,-22,-24,-25,-136,-137,-138,53,53,53,-161,53,53,53,53,53,53,-139,-140,-141,-142,-143,-145,-146,53,53,53,-49,-50,-133,-153,-155,-26,53,-154,]),'PRIVATE':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,22,24,32,33,34,35,36,43,62,63,64,69,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,129,130,131,135,140,141,148,172,173,178,194,197,198,199,206,210,211,212,213,216,218,230,232,236,238,242,250,258,259,260,261,266,267,268,269,270,272,274,285,287,289,307,310,316,317,318,319,320,321,322,323,324,325,327,328,339,342,343,346,348,349,351,],[54,54,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,54,54,-126,-127,-128,-129,-51,54,54,-149,-150,-14,-15,-16,54,54,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,54,54,54,-75,-76,-77,-78,-79,-80,-94,-95,-96,-97,-98,54,-57,-58,-52,54,54,-156,54,54,54,-36,-21,54,-23,54,-157,54,54,54,-35,-37,-38,-39,54,54,54,54,54,54,-5,-163,-162,-22,-24,-25,-136,-137,-138,54,54,54,-161,54,54,54,54,54,54,-139,-140,-141,-142,-143,-145,-146,54,54,54,-49,-50,-133,-153,-155,-26,54,-154,]),'PUBLIC':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,22,24,32,33,34,35,36,43,62,63,64,69,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,129,130,131,135,140,141,148,172,173,178,194,197,198,199,206,210,211,212,213,216,218,230,232,236,238,242,250,258,259,260,261,266,267,268,269,270,272,274,285,287,289,307,310,316,317,318,319,320,321,322,323,324,325,327,328,339,342,343,346,348,349,351,],[55,55,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,55,55,-126,-127,-128,-129,-51,55,55,-149,-150,-14,-15,-16,55,55,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,55,55,55,-75,-76,-77,-78,-79,-80,-94,-95,-96,-97,-98,55,-57,-58,-52,55,55,-156,55,55,55,-36,-21,55,-23,55,-157,55,55,55,-35,-37,-38,-39,55,55,55,55,55,55,-5,-163,-162,-22,-24,-25,-136,-137,-138,55,55,55,-161,55,55,55,55,55,55,-139,-140,-141,-142,-143,-145,-146,55,55,55,-49,-50,-133,-153,-155,-26,55,-154,]),'PROTECTED':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,22,24,32,33,34,35,36,43,62,63,64,69,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,129,130,131,135,140,141,148,172,173,178,194,197,198,199,206,210,211,212,213,216,218,230,232,236,238,242,250,258,259,260,261,266,267,268,269,270,272,274,285,287,289,307,310,316,317,318,319,320,321,322,323,324,325,327,328,339,342,343,346,348,349,351,],[56,56,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,56,56,-126,-127,-128,-129,-51,56,56,-149,-150,-14,-15,-16,56,56,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,56,56,56,-75,-76,-77,-78,-79,-80,-94,-95,-96,-97,-98,56,-57,-58,-52,56,56,-156,56,56,56,-36,-21,56,-23,56,-157,56,56,56,-35,-37,-38,-39,56,56,56,56,56,56,-5,-163,-162,-22,-24,-25,-136,-137,-138,56,56,56,-161,56,56,56,56,56,56,-139,-140,-141,-142,-143,-145,-146,56,56,56,-49,-50,-133,-153,-155,-26,56,-154,]),'STATIC':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,22,24,32,33,34,35,36,43,62,63,64,69,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,129,130,131,135,140,141,148,172,173,178,194,197,198,199,206,210,211,212,213,216,218,230,232,236,238,242,250,258,259,260,261,266,267,268,269,270,272,274,285,287,289,307,310,316,317,318,319,320,321,322,323,324,325,327,328,339,342,343,346,348,349,351,],[57,57,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,57,57,-126,-127,-128,-129,-51,57,57,-149,-150,-14,-15,-16,57,57,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,57,57,57,-75,-76,-77,-78,-79,-80,-94,-95,-96,-97,-98,57,-57,-58,-52,57,57,-156,57,57,57,-36,-21,57,-23,57,-157,57,57,57,-35,-37,-38,-39,57,57,57,57,57,57,-5,-163,-162,-22,-24,-25,-136,-137,-138,57,57,57,-161,57,57,57,57,57,57,-139,-140,-141,-142,-143,-145,-146,57,57,57,-49,-50,-133,-153,-155,-26,57,-154,]),'VAR':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,22,24,32,33,34,35,36,43,62,63,64,69,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,129,130,131,135,140,141,148,172,173,178,194,197,198,199,206,210,211,212,213,216,218,230,232,236,238,242,250,258,259,260,261,266,267,268,269,270,272,274,285,287,289,307,310,316,317,318,319,320,321,322,323,324,325,327,328,339,342,343,346,348,349,351,],[58,58,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,58,58,-126,-127,-128,-129,-51,58,58,-149,-150,-14,-15,-16,58,58,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,58,58,58,-75,-76,-77,-78,-79,-80,-94,-95,-96,-97,-98,58,-57,-58,-52,58,58,-156,58,58,58,-36,-21,58,-23,58,-157,58,58,58,-35,-37,-38,-39,58,58,58,58,58,58,-5,-163,-162,-22,-24,-25,-136,-137,-138,58,58,58,-161,58,58,58,58,58,58,-139,-140,-141,-142,-143,-145,-146,58,58,58,-49,-50,-133,-153,-155,-26,58,-154,]),'ENTERO':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,22,24,32,33,34,35,36,47,62,68,69,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,121,124,131,137,140,141,148,161,172,178,192,197,198,199,206,210,211,212,213,216,218,229,236,238,242,250,258,259,260,261,269,270,271,272,274,285,287,289,294,307,310,316,324,327,328,331,339,342,343,346,348,349,351,],[59,59,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,93,93,-126,-127,-128,-129,-51,93,93,93,-14,-15,-16,157,163,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,59,93,93,-75,-76,-77,-78,-79,-80,-94,-95,-96,-97,-98,93,-57,-58,-52,184,93,-156,202,59,59,-36,93,-21,-23,93,-157,59,59,59,-35,-37,-38,-39,247,255,93,279,255,-5,-163,-162,-22,-24,-25,296,298,300,301,-161,59,59,93,93,59,59,59,59,59,-49,340,-50,-133,-153,-155,-26,59,-154,]),'FLOTANTE':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,22,24,32,33,34,35,36,47,62,68,69,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,121,124,131,138,140,141,148,161,172,178,192,197,198,199,206,210,211,212,213,216,218,229,236,238,242,250,258,259,260,261,274,285,287,289,294,307,310,316,324,327,328,339,342,343,346,348,349,351,],[60,60,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,94,94,-126,-127,-128,-129,-51,94,94,94,-14,-15,-16,158,164,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,60,94,94,-75,-76,-77,-78,-79,-80,-94,-95,-96,-97,-98,94,-57,-58,-52,185,94,-156,203,60,60,-36,94,-21,-23,94,-157,60,60,60,-35,-37,-38,-39,248,256,94,280,256,-5,-163,-162,-22,-24,-25,-161,60,60,94,94,60,60,60,60,60,-49,-50,-133,-153,-155,-26,60,-154,]),'BOOLEANO':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,22,24,32,33,34,35,36,47,62,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,124,131,140,141,148,161,172,178,192,197,198,199,206,210,211,212,213,218,229,236,238,242,250,258,259,260,261,274,285,287,289,294,307,310,316,324,327,328,339,342,343,346,348,349,351,],[61,61,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,95,95,-126,-127,-128,-129,-51,95,95,95,-14,-15,-16,159,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,61,95,95,-75,-76,-77,-78,-79,-80,-94,-95,-96,-97,-98,95,-57,-58,-52,95,-156,61,61,-36,95,-21,-23,95,-157,61,61,61,-35,-37,-38,-39,95,95,159,95,-5,-163,-162,-22,-24,-25,-161,61,61,95,95,61,61,61,61,61,-49,-50,-133,-153,-155,-26,61,-154,]),'NEGACION':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,72,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,236,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[62,62,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,62,-57,-58,-52,-156,62,-36,-21,-23,-157,62,62,-35,-37,-38,-39,62,-5,-163,-162,-22,-24,-25,-161,62,62,62,62,62,62,62,-49,-50,-133,-153,-155,-26,62,-154,]),'INCREMENTO':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,20,32,33,34,35,36,69,70,71,115,116,117,118,131,141,148,172,178,182,197,198,206,210,211,212,213,230,242,250,258,259,260,261,265,266,267,268,274,285,287,307,310,316,317,318,319,320,321,322,323,324,327,328,339,342,343,346,348,349,351,],[63,63,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,63,-126,-127,-128,-129,-51,-14,-15,-16,-33,-57,-58,-52,-156,63,-36,-21,-23,-34,-157,63,63,-35,-37,-38,-39,63,-5,-163,-162,-22,-24,-25,63,-136,-137,-138,-161,63,63,63,63,63,-139,-140,-141,-142,-143,-145,-146,63,63,-49,-50,-133,-153,-155,-26,63,-154,]),'DECREMENTO':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,20,32,33,34,35,36,69,70,71,115,116,117,118,131,141,148,172,178,182,197,198,206,210,211,212,213,230,242,250,258,259,260,261,265,266,267,268,274,285,287,307,310,316,317,318,319,320,321,322,323,324,327,328,339,342,343,346,348,349,351,],[64,64,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,64,-126,-127,-128,-129,-51,-14,-15,-16,-33,-57,-58,-52,-156,64,-36,-21,-23,-34,-157,64,64,-35,-37,-38,-39,64,-5,-163,-162,-22,-24,-25,64,-136,-137,-138,-161,64,64,64,64,64,-139,-140,-141,-142,-143,-145,-146,64,64,-49,-50,-133,-153,-155,-26,64,-154,]),'IF':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,141,148,172,178,197,198,206,210,211,212,213,242,250,258,259,260,261,274,285,287,307,310,316,324,327,328,339,342,343,346,348,349,351,],[65,65,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,65,-36,-21,-23,-157,65,65,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,65,65,65,65,65,65,65,-49,-50,-133,-153,-155,-26,65,-154,]),'IDENTIFICADOR':([0,2,3,4,5,7,8,9,10,11,12,13,14,18,19,29,32,33,34,35,36,52,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,116,117,118,119,120,131,140,141,144,148,172,178,197,198,199,206,210,211,212,213,236,242,250,258,259,260,261,274,285,287,307,310,313,316,324,327,328,339,342,343,346,348,349,351,],[6,6,-3,-4,67,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,115,-126,-127,-128,-129,-51,136,-14,-15,-16,6,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,6,-57,-58,-52,182,6,-156,6,6,209,-36,-21,-23,-157,6,6,6,-35,-37,-38,-39,6,-5,-163,-162,-22,-24,-25,-161,6,6,6,6,333,6,6,6,-49,-50,-133,-153,-155,-26,6,-154,]),'CADENA':([0,2,3,4,7,8,9,10,11,12,13,14,18,19,22,24,32,33,34,35,36,47,62,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,117,118,124,131,140,141,148,161,172,178,192,197,198,199,206,210,211,212,213,214,218,224,229,236,238,242,250,258,259,260,261,274,285,287,289,294,307,310,316,324,327,328,339,342,343,346,348,349,351,],[26,26,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,26,26,-126,-127,-128,-129,-51,26,26,26,-14,-15,-16,26,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,26,26,26,-75,-76,-77,-78,-79,-80,-94,-95,-96,-97,-98,26,179,-57,-58,-52,26,-156,26,26,-36,26,-21,-23,26,-157,26,26,26,-35,-37,-38,-39,245,26,262,26,26,26,-5,-163,-162,-22,-24,-25,-161,26,26,26,26,26,26,26,26,26,-49,-50,-133,-153,-155,-26,26,-154,]),'$end':([1,2,3,4,7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,66,69,70,71,116,117,118,131,148,172,178,197,210,211,212,213,242,250,258,259,260,261,274,328,339,342,343,346,348,351,],[0,-1,-3,-4,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-2,-14,-15,-16,-57,-58,-52,-156,-36,-21,-23,-157,-35,-37,-38,-39,-5,-163,-162,-22,-24,-25,-161,-49,-50,-133,-153,-155,-26,-154,]),'PARENTESIS_ABRE':([6,24,25,27,28,46,48,49,51,65,123,134,136,156,165,166,],[68,110,112,113,114,124,129,130,135,140,186,199,201,214,218,219,]),'LLAVE_CIERRA':([7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,148,172,178,197,205,206,210,211,212,213,233,234,235,243,250,258,259,260,261,274,275,305,306,309,311,326,328,329,334,335,338,339,342,343,346,348,350,351,],[-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,-36,-21,-23,-157,242,-134,-35,-37,-38,-39,274,-131,-132,-135,-163,-162,-22,-24,-25,-161,-130,-151,-152,328,330,337,-49,339,342,343,346,-50,-133,-153,-155,-26,351,-154,]),'RETURN':([7,8,9,10,11,12,13,14,18,19,32,33,34,35,36,69,70,71,116,117,118,131,148,172,178,197,198,206,210,211,212,213,234,243,250,258,259,260,261,274,285,287,307,310,328,339,342,343,346,348,351,],[-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-126,-127,-128,-129,-51,-14,-15,-16,-57,-58,-52,-156,-36,-21,-23,-157,236,-134,-35,-37,-38,-39,236,-135,-163,-162,-22,-24,-25,-161,236,236,236,236,-49,-50,-133,-153,-155,-26,-154,]),'FIN_LINEA':([15,16,17,21,26,30,31,38,39,40,41,42,44,61,63,64,73,91,92,93,94,95,111,115,122,125,139,146,147,149,150,151,152,153,154,155,157,158,159,162,163,164,167,168,174,175,176,182,183,184,185,187,190,191,202,203,207,208,215,217,220,221,222,223,225,226,227,246,247,248,249,257,276,277,278,279,280,290,291,292,296,297,298,299,300,301,302,332,341,347,],[69,70,71,-111,-47,116,117,-115,-116,-117,-118,-119,-19,-105,-149,-150,-147,172,-20,-45,-46,-48,178,-33,-148,-66,-102,-43,210,211,212,213,-40,116,-42,-44,-45,-46,-48,-106,-107,-108,-111,-113,-99,-100,-101,-34,-114,-109,-110,-65,-68,-70,-103,-104,-53,-54,-125,250,258,259,260,261,-59,-67,-69,-123,-120,-121,-122,-60,305,306,-20,-45,-46,-124,-61,-62,317,318,319,320,321,322,323,-64,348,-63,]),'IGUAL':([20,26,74,93,94,95,115,128,182,195,273,314,],[72,-47,161,-45,-46,-48,-33,193,-34,72,304,193,]),'PUNTO':([20,26,44,91,92,93,94,95,115,182,],[74,-47,-19,173,-20,-45,-46,-48,-33,-34,]),'LAMBDA':([20,115,146,182,278,],[76,-33,76,-34,76,]),'SUMA':([20,23,26,44,59,60,61,92,93,94,95,115,146,152,157,158,159,160,169,171,174,182,246,247,248,249,251,255,256,276,278,279,280,282,],[-20,99,-47,-19,-45,-46,-48,-20,-45,-46,-48,-33,-20,-19,-45,-46,-48,99,-20,99,99,-34,99,-120,-121,-122,-20,-45,-46,99,-20,-45,-46,-122,]),'RESTA':([20,23,26,44,59,60,61,92,93,94,95,115,146,152,157,158,159,160,169,171,174,182,246,247,248,249,251,255,256,276,278,279,280,282,],[-20,100,-47,-19,-45,-46,-48,-20,-45,-46,-48,-33,-20,-19,-45,-46,-48,100,-20,100,100,-34,100,-120,-121,-122,-20,-45,-46,100,-20,-45,-46,-122,]),'MULTIPLICACION':([20,23,26,44,59,60,61,92,93,94,95,115,146,152,157,158,159,160,169,171,174,182,246,247,248,249,251,255,256,276,278,279,280,282,],[-20,101,-47,-19,-45,-46,-48,-20,-45,-46,-48,-33,-20,-19,-45,-46,-48,101,-20,101,101,-34,101,-120,-121,-122,-20,-45,-46,101,-20,-45,-46,-122,]),'DIVISION':([20,23,26,44,59,60,61,92,93,94,95,115,146,152,157,158,159,160,169,171,174,182,246,247,248,249,251,255,256,276,278,279,280,282,],[-20,102,-47,-19,-45,-46,-48,-20,-45,-46,-48,-33,-20,-19,-45,-46,-48,102,-20,102,102,-34,102,-120,-121,-122,-20,-45,-46,102,-20,-45,-46,-122,]),'POTENCIA':([20,23,26,44,59,60,61,92,93,94,95,115,146,152,157,158,159,160,169,171,174,182,246,247,248,249,251,255,256,276,278,279,280,282,],[-20,103,-47,-19,-45,-46,-48,-20,-45,-46,-48,-33,-20,-19,-45,-46,-48,103,-20,103,103,-34,103,-120,-121,-122,-20,-45,-46,103,-20,-45,-46,-122,]),'MODULO':([20,23,26,44,59,60,61,92,93,94,95,115,146,152,157,158,159,160,169,171,174,182,246,247,248,249,251,255,256,276,278,279,280,282,],[-20,104,-47,-19,-45,-46,-48,-20,-45,-46,-48,-33,-20,-19,-45,-46,-48,104,-20,104,104,-34,104,-120,-121,-122,-20,-45,-46,104,-20,-45,-46,-122,]),'CONJUNCIONBITS':([20,23,26,44,59,60,61,115,146,152,157,158,159,182,276,278,279,280,],[-20,105,-47,-19,-45,-46,-48,-33,-20,-19,-45,-46,-48,-34,105,-20,-45,-46,]),'DISYUNCIONBITS':([20,23,26,44,59,60,61,115,146,152,157,158,159,182,276,278,279,280,],[-20,106,-47,-19,-45,-46,-48,-33,-20,-19,-45,-46,-48,-34,106,-20,-45,-46,]),'DISYUNCION_EXC':([20,23,26,44,59,60,61,115,146,152,157,158,159,182,276,278,279,280,],[-20,107,-47,-19,-45,-46,-48,-33,-20,-19,-45,-46,-48,-34,107,-20,-45,-46,]),'DESPLAZAR_BITS_IZQ':([20,23,26,44,59,60,61,115,146,152,157,158,159,182,276,278,279,280,],[-20,108,-47,-19,-45,-46,-48,-33,-20,-19,-45,-46,-48,-34,108,-20,-45,-46,]),'DESPLAZAR_BITS_DER':([20,23,26,44,59,60,61,115,146,152,157,158,159,182,276,278,279,280,],[-20,109,-47,-19,-45,-46,-48,-33,-20,-19,-45,-46,-48,-34,109,-20,-45,-46,]),'IGUALDAD':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,237,278,279,280,],[77,77,-47,77,77,-19,77,77,-105,-20,-45,-46,-48,-33,77,77,77,77,-105,-106,-107,-108,77,77,77,77,-99,-100,-34,-114,-109,-110,77,-103,-104,77,-53,-54,77,77,77,77,]),'IDENTIDAD':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,237,278,279,280,],[78,78,-47,78,78,-19,78,78,-105,-20,-45,-46,-48,-33,78,78,78,78,-105,-106,-107,-108,78,78,78,78,-99,-100,-34,-114,-109,-110,78,-103,-104,78,-53,-54,78,78,78,78,]),'DIFERENTE':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,237,278,279,280,],[79,79,-47,79,79,-19,79,79,-105,-20,-45,-46,-48,-33,79,79,79,79,-105,-106,-107,-108,79,79,79,79,-99,-100,-34,-114,-109,-110,79,-103,-104,79,-53,-54,79,79,79,79,]),'NO_IDENTIDAD':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,237,278,279,280,],[80,80,-47,80,80,-19,80,80,-105,-20,-45,-46,-48,-33,80,80,80,80,-105,-106,-107,-108,80,80,80,80,-99,-100,-34,-114,-109,-110,80,-103,-104,80,-53,-54,80,80,80,80,]),'MAYOR':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,193,200,202,203,204,207,208,231,237,278,279,280,304,],[81,81,-47,81,81,-19,81,81,-105,-20,-45,-46,-48,-33,81,81,81,81,-105,-106,-107,-108,81,81,81,81,-99,-100,-34,-114,-109,-110,229,81,-103,-104,81,-53,-54,272,81,81,81,81,325,]),'MAYOR_IGUAL':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,231,237,278,279,280,],[82,82,-47,82,82,-19,82,82,-105,-20,-45,-46,-48,-33,82,82,82,82,-105,-106,-107,-108,82,82,82,82,-99,-100,-34,-114,-109,-110,82,-103,-104,82,-53,-54,271,82,82,82,82,]),'MENOR':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,231,237,278,279,280,],[83,83,-47,83,83,-19,83,83,-105,-20,-45,-46,-48,-33,83,83,83,83,-105,-106,-107,-108,83,83,83,83,-99,-100,-34,-114,-109,-110,83,-103,-104,83,-53,-54,270,83,83,83,83,]),'MENOR_IGUAL':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,231,237,278,279,280,],[84,84,-47,84,84,-19,84,84,-105,-20,-45,-46,-48,-33,84,84,84,84,-105,-106,-107,-108,84,84,84,84,-99,-100,-34,-114,-109,-110,84,-103,-104,84,-53,-54,269,84,84,84,84,]),'AND':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,237,278,279,280,],[85,85,-47,85,85,-19,85,85,-105,-20,-45,-46,-48,-33,85,85,85,85,-105,-106,-107,-108,85,85,85,85,-99,-100,-34,-114,-109,-110,85,-103,-104,85,-53,-54,85,85,85,85,]),'OR':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,237,278,279,280,],[86,86,-47,86,86,-19,86,86,-105,-20,-45,-46,-48,-33,86,86,86,86,-105,-106,-107,-108,86,86,86,86,-99,-100,-34,-114,-109,-110,86,-103,-104,86,-53,-54,86,86,86,86,]),'XOR':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,237,278,279,280,],[87,87,-47,87,87,-19,87,87,-105,-20,-45,-46,-48,-33,87,87,87,87,-105,-106,-107,-108,87,87,87,87,-99,-100,-34,-114,-109,-110,87,-103,-104,87,-53,-54,87,87,87,87,]),'CONJUNCION':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,237,278,279,280,],[88,88,-47,88,88,-19,88,88,-105,-20,-45,-46,-48,-33,88,88,88,88,-105,-106,-107,-108,88,88,88,88,-99,-100,-34,-114,-109,-110,88,-103,-104,88,-53,-54,88,88,88,88,]),'DISYUNCION':([20,21,26,38,39,44,59,60,61,92,93,94,95,115,146,150,157,158,159,162,163,164,167,168,169,170,174,175,182,183,184,185,200,202,203,204,207,208,237,278,279,280,],[89,89,-47,89,89,-19,89,89,-105,-20,-45,-46,-48,-33,89,89,89,89,-105,-106,-107,-108,89,89,89,89,-99,-100,-34,-114,-109,-110,89,-103,-104,89,-53,-54,89,89,89,89,]),'PARENTESIS_CIERRA':([21,26,44,61,63,64,73,92,93,94,95,115,122,124,128,142,143,145,152,154,155,162,163,164,167,168,174,175,177,179,180,182,183,184,185,186,188,189,201,202,203,204,207,208,209,215,219,225,228,237,240,246,247,248,249,251,252,253,254,255,256,263,264,273,282,283,284,288,290,312,315,333,336,340,],[-111,-47,-19,-105,-149,-150,-147,-20,-45,-46,-48,-33,-148,187,-73,207,208,-73,-40,-42,-44,-106,-107,-108,-111,-113,-99,-100,221,222,223,-34,-114,-109,-110,225,226,227,239,-103,-104,241,-53,-54,-55,-125,257,-59,-74,281,286,-123,-120,-121,-122,-43,291,292,-41,-45,-46,-71,295,303,-43,308,-40,-56,-124,332,-72,341,344,347,]),'COMA':([26,44,92,93,94,95,115,128,145,181,182,209,245,262,263,312,],[-47,-19,-20,-45,-46,-48,-33,192,192,224,-34,244,289,293,294,331,]),'CORCHETE_CIERRA':([26,47,93,94,95,126,127,128,145,228,263,315,],[-47,125,-45,-46,-48,190,191,-73,-73,-74,-71,-72,]),'STACK':([45,],[123,]),'ELSE':([50,132,330,337,345,],[133,133,-158,-159,-160,]),'ELSEIF':([50,330,337,],[134,-158,134,]),'LLAVE_ABRE':([67,133,239,241,281,286,295,303,308,344,],[141,198,285,287,307,310,316,324,327,349,]),'NULO':([72,77,78,79,80,81,82,83,84,85,86,87,88,89,218,238,],[154,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,154,154,]),'EXPLODE':([72,],[156,]),'PUSH':([76,],[165,]),'POP':([76,],[166,]),'STDIN':([113,114,],[180,181,]),'AS':([115,182,196,],[-33,-34,232,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'variaslineas':([0,2,],[1,66,]),'programa':([0,2,],[2,2,]),'clase':([0,2,],[3,3,]),'instrucciones':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[4,4,206,206,206,206,206,206,206,206,206,338,206,]),'asignacion':([0,2,129,141,198,206,285,287,307,310,316,324,327,349,],[7,7,194,7,7,7,7,7,7,7,7,7,7,7,]),'salida':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ingreso':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'estructuras_datos':([0,2,72,141,198,206,285,287,307,310,316,324,327,349,],[10,10,148,10,10,10,10,10,10,10,10,10,10,10,]),'estructuras_control':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'funcionglobal':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'operaciones':([0,2,72,141,198,206,236,285,287,307,310,316,324,327,349,],[15,15,151,15,15,15,277,15,15,15,15,15,15,15,15,]),'declaracion_s':([0,2,141,198,206,230,285,287,307,310,316,324,327,349,],[16,16,16,16,16,264,16,16,16,16,16,16,16,16,]),'concadenacion1':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'concatenacion2':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'decl_variable':([0,2,22,24,43,62,72,75,90,97,98,110,129,130,135,140,141,173,194,198,199,206,216,218,230,232,236,238,269,270,272,285,287,289,307,310,316,324,325,327,349,],[20,20,92,92,122,92,146,162,169,92,92,92,195,196,200,169,20,220,231,20,169,20,249,251,265,273,278,282,297,299,302,20,20,92,20,20,20,20,336,20,20,]),'funcionuso':([0,2,72,90,120,140,141,198,199,206,236,285,287,307,310,316,324,327,349,],[21,21,150,167,183,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'salidas_posibles':([0,2,22,24,62,72,90,97,98,110,140,141,198,199,206,218,236,285,287,289,307,310,316,324,327,349,],[23,23,91,111,139,23,171,174,176,177,171,23,23,171,23,171,276,23,23,312,23,23,23,23,23,23,]),'pila':([0,2,72,141,198,206,218,238,285,287,307,310,316,324,327,349,],[30,30,153,30,30,30,254,254,30,30,30,30,30,30,30,30,]),'arreglo':([0,2,72,141,198,206,285,287,307,310,316,324,327,349,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'for':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'foreach':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'if_else':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[34,34,34,34,34,34,34,34,34,34,34,34,34,]),'while':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'funcion':([0,2,37,141,198,206,285,287,307,310,316,324,327,349,],[36,36,118,36,36,36,36,36,36,36,36,36,36,36,]),'variable_tipo':([0,2,22,24,43,62,72,75,90,97,98,110,129,130,135,140,141,173,194,198,199,206,216,218,230,232,236,238,269,270,272,285,287,289,307,310,316,324,325,327,349,],[37,37,96,96,96,96,96,96,96,96,96,96,96,96,96,96,37,96,96,37,96,37,96,96,96,96,96,96,96,96,96,37,37,96,37,37,37,37,96,37,37,]),'operaciones_logicas':([0,2,72,90,140,141,198,199,206,236,285,287,307,310,316,324,327,349,],[38,38,38,168,204,38,38,237,38,38,38,38,38,38,38,38,38,38,]),'operaciones_arit':([0,2,72,90,97,140,141,198,199,206,218,236,285,287,307,310,316,324,327,349,],[39,39,39,170,175,170,39,39,170,39,253,39,39,39,39,39,39,39,39,39,]),'operaciones_bits':([0,2,72,141,198,206,236,285,287,307,310,316,324,327,349,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'pushpila':([0,2,72,141,198,206,236,285,287,307,310,316,324,327,349,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'poppila':([0,2,72,141,198,206,236,285,287,307,310,316,324,327,349,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'crecimiento':([0,2,20,141,198,206,230,265,285,287,307,310,316,324,327,349,],[43,43,73,43,43,43,43,73,43,43,43,43,43,43,43,43,]),'datos':([0,2,22,24,47,62,68,72,90,97,98,110,124,140,141,161,192,198,199,206,218,229,236,238,285,287,289,294,307,310,316,324,327,349,],[44,44,44,44,128,44,145,152,44,44,44,44,128,44,44,217,145,44,44,44,152,263,44,284,44,44,44,314,44,44,44,44,44,44,]),'if_else_inicio':([0,2,141,198,206,285,287,307,310,316,324,327,349,],[50,50,50,50,50,50,50,50,50,50,50,50,50,]),'operad_logico':([20,21,38,39,59,60,146,150,157,158,167,168,169,170,200,204,237,278,279,280,],[75,90,120,121,137,138,75,90,137,138,90,120,75,121,238,120,120,75,137,138,]),'operad_arit':([23,160,171,174,246,276,],[97,216,97,97,216,97,]),'operand_bits':([23,276,],[98,98,]),'elementos':([47,68,124,192,],[126,143,188,228,]),'asociacion':([47,124,294,],[127,189,315,]),'if_else_fin':([50,132,],[131,197,]),'if_else_cuerpo':([50,337,],[132,345,]),'parametros':([68,201,244,],[142,240,288,]),'valor':([72,218,238,],[147,252,283,]),'explode':([72,],[149,]),'opAritVar':([72,218,238,],[155,155,155,]),'paraCalculos':([72,216,218,238,],[160,246,160,160,]),'sentenciasAnidadas':([141,198,206,285,287,307,310,316,324,349,],[205,234,243,234,234,234,234,334,335,350,]),'combinarOp':([160,246,],[215,290,]),'declaracionp':([194,],[230,]),'bloque':([198,285,287,307,310,],[233,309,311,326,329,]),'retorno':([198,234,285,287,307,310,],[235,275,235,235,235,235,]),'valorc':([231,],[266,]),'menor':([231,],[267,]),'mayor':([231,],[268,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> variaslineas","S'",1,None,None,None),
  ('variaslineas -> programa','variaslineas',1,'p_variaslineas','sintactico.py',5),
  ('variaslineas -> programa variaslineas','variaslineas',2,'p_variaslineas','sintactico.py',6),
  ('programa -> clase','programa',1,'p_programa','sintactico.py',10),
  ('programa -> instrucciones','programa',1,'p_programa','sintactico.py',11),
  ('clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','clase',5,'p_clase','sintactico.py',15),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> salida','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> ingreso','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> estructuras_datos','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> estructuras_control','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> funcionglobal','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('instrucciones -> COMENTARIO_LINEA','instrucciones',1,'p_instrucciones','sintactico.py',24),
  ('instrucciones -> COMENTARIO_BLOQUE','instrucciones',1,'p_instrucciones','sintactico.py',25),
  ('instrucciones -> operaciones FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',26),
  ('instrucciones -> declaracion_s FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',27),
  ('instrucciones -> BREAK FIN_LINEA','instrucciones',2,'p_instrucciones','sintactico.py',28),
  ('instrucciones -> concadenacion1','instrucciones',1,'p_instrucciones','sintactico.py',29),
  ('instrucciones -> concatenacion2','instrucciones',1,'p_instrucciones','sintactico.py',30),
  ('salidas_posibles -> datos','salidas_posibles',1,'p_salidas_posibles','sintactico.py',36),
  ('salidas_posibles -> decl_variable','salidas_posibles',1,'p_salidas_posibles','sintactico.py',37),
  ('salida -> ECHO salidas_posibles FIN_LINEA','salida',3,'p_salida_forma1','sintactico.py',41),
  ('salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA','salida',5,'p_salida_forma2','sintactico.py',44),
  ('salida -> PRINT salidas_posibles FIN_LINEA','salida',3,'p_salida_forma3','sintactico.py',47),
  ('ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma1','sintactico.py',52),
  ('ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA','ingreso',5,'p_ingreso_forma2','sintactico.py',55),
  ('ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA','ingreso',10,'p_ingreso_forma3','sintactico.py',58),
  ('variable_tipo -> CONST','variable_tipo',1,'p_variable_tipo','sintactico.py',63),
  ('variable_tipo -> PRIVATE','variable_tipo',1,'p_variable_tipo','sintactico.py',64),
  ('variable_tipo -> PUBLIC','variable_tipo',1,'p_variable_tipo','sintactico.py',65),
  ('variable_tipo -> PROTECTED','variable_tipo',1,'p_variable_tipo','sintactico.py',66),
  ('variable_tipo -> STATIC','variable_tipo',1,'p_variable_tipo','sintactico.py',67),
  ('variable_tipo -> VAR','variable_tipo',1,'p_variable_tipo','sintactico.py',68),
  ('decl_variable -> SIGNO_DOLAR IDENTIFICADOR','decl_variable',2,'p_decl_variable','sintactico.py',74),
  ('decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR','decl_variable',3,'p_decl_variable','sintactico.py',75),
  ('asignacion -> decl_variable IGUAL valor FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',78),
  ('asignacion -> decl_variable IGUAL estructuras_datos','asignacion',3,'p_asignacion','sintactico.py',79),
  ('asignacion -> decl_variable IGUAL explode FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',80),
  ('asignacion -> decl_variable IGUAL funcionuso FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',81),
  ('asignacion -> decl_variable IGUAL operaciones FIN_LINEA','asignacion',4,'p_asignacion','sintactico.py',82),
  ('valor -> datos','valor',1,'p_valor','sintactico.py',86),
  ('valor -> pila','valor',1,'p_valor','sintactico.py',87),
  ('valor -> NULO','valor',1,'p_valor','sintactico.py',88),
  ('valor -> decl_variable','valor',1,'p_valor','sintactico.py',89),
  ('valor -> opAritVar','valor',1,'p_valor','sintactico.py',90),
  ('datos -> ENTERO','datos',1,'p_datos','sintactico.py',95),
  ('datos -> FLOTANTE','datos',1,'p_datos','sintactico.py',96),
  ('datos -> CADENA','datos',1,'p_datos','sintactico.py',97),
  ('datos -> BOOLEANO','datos',1,'p_datos','sintactico.py',98),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','funcion',7,'p_funcion','sintactico.py',104),
  ('funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','funcion',8,'p_funcion_parametros','sintactico.py',107),
  ('funcionglobal -> funcion','funcionglobal',1,'p_funcion_global','sintactico.py',110),
  ('funcionglobal -> variable_tipo funcion','funcionglobal',2,'p_funcion_global','sintactico.py',111),
  ('funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA','funcionuso',4,'p_funcionenuso','sintactico.py',115),
  ('funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA','funcionuso',4,'p_funcionenuso','sintactico.py',116),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR','parametros',2,'p_parametros','sintactico.py',120),
  ('parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros','parametros',4,'p_parametros','sintactico.py',121),
  ('estructuras_datos -> pila FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','sintactico.py',127),
  ('estructuras_datos -> arreglo FIN_LINEA','estructuras_datos',2,'p_estructuras_datos','sintactico.py',128),
  ('pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA','pila',4,'p_pila','sintactico.py',131),
  ('poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA','poppila',5,'p_pop','sintactico.py',134),
  ('pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA','pushpila',6,'p_push','sintactico.py',138),
  ('pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA','pushpila',6,'p_push','sintactico.py',139),
  ('explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA','explode',8,'p_explode','sintactico.py',143),
  ('explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA','explode',6,'p_explode','sintactico.py',144),
  ('arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA','arreglo',3,'p_arreglo_vacio','sintactico.py',148),
  ('arreglo -> CORCHETE_ABRE CORCHETE_CIERRA','arreglo',2,'p_arreglo_vacio','sintactico.py',149),
  ('arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA','arreglo',4,'p_arreglo_indexado','sintactico.py',153),
  ('arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA','arreglo',3,'p_arreglo_indexado','sintactico.py',154),
  ('arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA','arreglo',4,'p_arreglo_asociativo','sintactico.py',158),
  ('arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA','arreglo',3,'p_arreglo_asociativo','sintactico.py',159),
  ('asociacion -> datos IGUAL MAYOR datos','asociacion',4,'p_asociacion','sintactico.py',163),
  ('asociacion -> datos IGUAL MAYOR datos COMA asociacion','asociacion',6,'p_asociacion','sintactico.py',164),
  ('elementos -> datos','elementos',1,'p_elementos','sintactico.py',167),
  ('elementos -> datos COMA elementos','elementos',3,'p_elementos','sintactico.py',168),
  ('operad_arit -> SUMA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',173),
  ('operad_arit -> RESTA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',174),
  ('operad_arit -> MULTIPLICACION','operad_arit',1,'p_operad_aritmeticas','sintactico.py',175),
  ('operad_arit -> DIVISION','operad_arit',1,'p_operad_aritmeticas','sintactico.py',176),
  ('operad_arit -> POTENCIA','operad_arit',1,'p_operad_aritmeticas','sintactico.py',177),
  ('operad_arit -> MODULO','operad_arit',1,'p_operad_aritmeticas','sintactico.py',178),
  ('operad_logico -> IGUALDAD','operad_logico',1,'p_operad_logicos','sintactico.py',182),
  ('operad_logico -> IDENTIDAD','operad_logico',1,'p_operad_logicos','sintactico.py',183),
  ('operad_logico -> DIFERENTE','operad_logico',1,'p_operad_logicos','sintactico.py',184),
  ('operad_logico -> NO_IDENTIDAD','operad_logico',1,'p_operad_logicos','sintactico.py',185),
  ('operad_logico -> MAYOR','operad_logico',1,'p_operad_logicos','sintactico.py',186),
  ('operad_logico -> MAYOR_IGUAL','operad_logico',1,'p_operad_logicos','sintactico.py',187),
  ('operad_logico -> MENOR','operad_logico',1,'p_operad_logicos','sintactico.py',188),
  ('operad_logico -> MENOR_IGUAL','operad_logico',1,'p_operad_logicos','sintactico.py',189),
  ('operad_logico -> AND','operad_logico',1,'p_operad_logicos','sintactico.py',190),
  ('operad_logico -> OR','operad_logico',1,'p_operad_logicos','sintactico.py',191),
  ('operad_logico -> XOR','operad_logico',1,'p_operad_logicos','sintactico.py',192),
  ('operad_logico -> CONJUNCION','operad_logico',1,'p_operad_logicos','sintactico.py',193),
  ('operad_logico -> DISYUNCION','operad_logico',1,'p_operad_logicos','sintactico.py',194),
  ('operand_bits -> CONJUNCIONBITS','operand_bits',1,'p_operad_bits','sintactico.py',200),
  ('operand_bits -> DISYUNCIONBITS','operand_bits',1,'p_operad_bits','sintactico.py',201),
  ('operand_bits -> DISYUNCION_EXC','operand_bits',1,'p_operad_bits','sintactico.py',202),
  ('operand_bits -> DESPLAZAR_BITS_IZQ','operand_bits',1,'p_operad_bits','sintactico.py',203),
  ('operand_bits -> DESPLAZAR_BITS_DER','operand_bits',1,'p_operad_bits','sintactico.py',204),
  ('operaciones_arit -> salidas_posibles operad_arit salidas_posibles','operaciones_arit',3,'p_operaciones_arit','sintactico.py',210),
  ('operaciones_arit -> salidas_posibles operad_arit operaciones_arit','operaciones_arit',3,'p_operaciones_arit','sintactico.py',211),
  ('operaciones_bits -> salidas_posibles operand_bits salidas_posibles','operaciones_bits',3,'p_operaciones_bits','sintactico.py',216),
  ('operaciones_bits -> NEGACION salidas_posibles','operaciones_bits',2,'p_operaciones_bits','sintactico.py',217),
  ('operaciones_logicas -> ENTERO operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',221),
  ('operaciones_logicas -> FLOTANTE operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',222),
  ('operaciones_logicas -> BOOLEANO','operaciones_logicas',1,'p_operaciones_logica','sintactico.py',223),
  ('operaciones_logicas -> decl_variable operad_logico decl_variable','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',224),
  ('operaciones_logicas -> decl_variable operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',225),
  ('operaciones_logicas -> decl_variable operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',226),
  ('operaciones_logicas -> operaciones_arit operad_logico ENTERO','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',227),
  ('operaciones_logicas -> operaciones_arit operad_logico FLOTANTE','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',228),
  ('operaciones_logicas -> funcionuso','operaciones_logicas',1,'p_operaciones_logica','sintactico.py',229),
  ('operaciones_logicas -> funcionuso operad_logico funcionuso','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',230),
  ('operaciones_logicas -> funcionuso operad_logico operaciones_logicas','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',231),
  ('operaciones_logicas -> operaciones_logicas operad_logico funcionuso','operaciones_logicas',3,'p_operaciones_logica','sintactico.py',232),
  ('operaciones -> operaciones_logicas','operaciones',1,'p_operaciones','sintactico.py',236),
  ('operaciones -> operaciones_arit','operaciones',1,'p_operaciones','sintactico.py',237),
  ('operaciones -> operaciones_bits','operaciones',1,'p_operaciones','sintactico.py',238),
  ('operaciones -> pushpila','operaciones',1,'p_operaciones','sintactico.py',239),
  ('operaciones -> poppila','operaciones',1,'p_operaciones','sintactico.py',240),
  ('paraCalculos -> ENTERO','paraCalculos',1,'p_paraCalculos','sintactico.py',244),
  ('paraCalculos -> FLOTANTE','paraCalculos',1,'p_paraCalculos','sintactico.py',245),
  ('paraCalculos -> decl_variable','paraCalculos',1,'p_paraCalculos','sintactico.py',246),
  ('combinarOp -> operad_arit paraCalculos','combinarOp',2,'p_combinarOp','sintactico.py',249),
  ('combinarOp -> operad_arit paraCalculos combinarOp','combinarOp',3,'p_combinarOp','sintactico.py',250),
  ('opAritVar -> paraCalculos combinarOp','opAritVar',2,'p_opAritmeticaEnVar','sintactico.py',253),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','sintactico.py',258),
  ('estructuras_control -> foreach','estructuras_control',1,'p_estructuras_control','sintactico.py',259),
  ('estructuras_control -> if_else','estructuras_control',1,'p_estructuras_control','sintactico.py',260),
  ('estructuras_control -> while','estructuras_control',1,'p_estructuras_control','sintactico.py',261),
  ('bloque -> sentenciasAnidadas retorno','bloque',2,'p_bloque','sintactico.py',266),
  ('bloque -> sentenciasAnidadas','bloque',1,'p_bloque','sintactico.py',267),
  ('bloque -> retorno','bloque',1,'p_bloque','sintactico.py',268),
  ('for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','for',9,'p_for','sintactico.py',274),
  ('sentenciasAnidadas -> instrucciones','sentenciasAnidadas',1,'p_sentenciasAnidadas','sintactico.py',277),
  ('sentenciasAnidadas -> instrucciones sentenciasAnidadas','sentenciasAnidadas',2,'p_sentenciasAnidadas','sintactico.py',278),
  ('declaracionp -> decl_variable valorc','declaracionp',2,'p_declaracionM','sintactico.py',282),
  ('valorc -> menor','valorc',1,'p_valorC','sintactico.py',285),
  ('valorc -> mayor','valorc',1,'p_valorC','sintactico.py',286),
  ('menor -> MENOR_IGUAL ENTERO FIN_LINEA','menor',3,'p_menor','sintactico.py',289),
  ('menor -> MENOR_IGUAL decl_variable FIN_LINEA','menor',3,'p_menor','sintactico.py',290),
  ('menor -> MENOR ENTERO FIN_LINEA','menor',3,'p_menor','sintactico.py',291),
  ('menor -> MENOR decl_variable FIN_LINEA','menor',3,'p_menor','sintactico.py',292),
  ('mayor -> MAYOR_IGUAL ENTERO FIN_LINEA','mayor',3,'p_mayor','sintactico.py',296),
  ('mayor -> MENOR_IGUAL decl_variable FIN_LINEA','mayor',3,'p_mayor','sintactico.py',297),
  ('mayor -> MAYOR ENTERO FIN_LINEA','mayor',3,'p_mayor','sintactico.py',298),
  ('mayor -> MAYOR decl_variable FIN_LINEA','mayor',3,'p_mayor','sintactico.py',299),
  ('declaracion_s -> decl_variable crecimiento','declaracion_s',2,'p_declaracionsimple','sintactico.py',303),
  ('declaracion_s -> crecimiento decl_variable','declaracion_s',2,'p_declaracionsimple','sintactico.py',304),
  ('crecimiento -> INCREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',308),
  ('crecimiento -> DECREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',309),
  ('retorno -> RETURN salidas_posibles FIN_LINEA','retorno',3,'p_retorno','sintactico.py',312),
  ('retorno -> RETURN operaciones FIN_LINEA','retorno',3,'p_retorno','sintactico.py',313),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',9,'p_foreach','sintactico.py',319),
  ('foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA','foreach',12,'p_foreach','sintactico.py',320),
  ('while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','while',9,'p_while','sintactico.py',326),
  ('if_else -> if_else_inicio if_else_fin','if_else',2,'p_if_else_corto','sintactico.py',331),
  ('if_else -> if_else_inicio if_else_cuerpo if_else_fin','if_else',3,'p_if_else_extendido','sintactico.py',335),
  ('if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_inicio',7,'p_if_else_inicio','sintactico.py',339),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','if_else_cuerpo',7,'p_if_else_cuerpo','sintactico.py',343),
  ('if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo','if_else_cuerpo',8,'p_if_else_cuerpo','sintactico.py',344),
  ('if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA','if_else_fin',4,'p_if_else_fin','sintactico.py',349),
  ('concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA','concadenacion1',5,'p_concadenacion','sintactico.py',359),
  ('concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA','concatenacion2',5,'p_concatenacion','sintactico.py',363),
]
