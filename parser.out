Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BACKSLASH
    EXPLODE
    PUNTO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> clase
Rule 2     programa -> instrucciones
Rule 3     clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 4     instrucciones -> asignacion
Rule 5     instrucciones -> salida
Rule 6     instrucciones -> ingreso
Rule 7     instrucciones -> estructuras_datos
Rule 8     instrucciones -> estructuras_control
Rule 9     instrucciones -> funcion
Rule 10    instrucciones -> COMENTARIO_LINEA
Rule 11    instrucciones -> COMENTARIO_BLOQUE
Rule 12    instrucciones -> operaciones FIN_LINEA
Rule 13    instrucciones -> declaracion_s FIN_LINEA
Rule 14    instrucciones -> BREAK FIN_LINEA
Rule 15    salidas_posibles -> datos
Rule 16    salidas_posibles -> decl_variable
Rule 17    salida -> ECHO salidas_posibles FIN_LINEA
Rule 18    salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
Rule 19    salida -> PRINT salidas_posibles FIN_LINEA
Rule 20    ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
Rule 21    ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
Rule 22    ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
Rule 23    variable_tipo -> CONST
Rule 24    variable_tipo -> PRIVATE
Rule 25    variable_tipo -> PUBLIC
Rule 26    variable_tipo -> PROTECTED
Rule 27    variable_tipo -> STATIC
Rule 28    variable_tipo -> VAR
Rule 29    decl_variable -> SIGNO_DOLAR IDENTIFICADOR
Rule 30    decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR
Rule 31    asignacion -> decl_variable IGUAL valor FIN_LINEA
Rule 32    asignacion -> decl_variable IGUAL estructuras_datos
Rule 33    asignacion -> decl_variable IGUAL poppila FIN_LINEA
Rule 34    valor -> datos
Rule 35    valor -> NULO
Rule 36    valor -> decl_variable
Rule 37    datos -> ENTERO
Rule 38    datos -> FLOTANTE
Rule 39    datos -> CADENA
Rule 40    datos -> BOOLEANO
Rule 41    funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 42    funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 43    funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
Rule 44    parametros -> SIGNO_DOLAR IDENTIFICADOR
Rule 45    parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros
Rule 46    estructuras_datos -> pila FIN_LINEA
Rule 47    estructuras_datos -> arreglo FIN_LINEA
Rule 48    pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 49    poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 50    pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
Rule 51    pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
Rule 52    arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 53    arreglo -> CORCHETE_ABRE CORCHETE_CIERRA
Rule 54    arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
Rule 55    arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA
Rule 56    arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
Rule 57    arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA
Rule 58    asociacion -> datos IGUAL MAYOR datos
Rule 59    asociacion -> datos IGUAL MAYOR datos COMA asociacion
Rule 60    elementos -> datos
Rule 61    elementos -> datos COMA elementos
Rule 62    operad_arit -> SUMA
Rule 63    operad_arit -> RESTA
Rule 64    operad_arit -> MULTIPLICACION
Rule 65    operad_arit -> DIVISION
Rule 66    operad_arit -> POTENCIA
Rule 67    operad_arit -> MODULO
Rule 68    operad_logico -> IGUALDAD
Rule 69    operad_logico -> IDENTIDAD
Rule 70    operad_logico -> DIFERENTE
Rule 71    operad_logico -> NO_IDENTIDAD
Rule 72    operad_logico -> MAYOR
Rule 73    operad_logico -> MAYOR_IGUAL
Rule 74    operad_logico -> MENOR
Rule 75    operad_logico -> MENOR_IGUAL
Rule 76    operad_logico -> AND
Rule 77    operad_logico -> OR
Rule 78    operad_logico -> XOR
Rule 79    operand_bits -> CONJUNCION
Rule 80    operand_bits -> DISYUNCION
Rule 81    operand_bits -> DISYUNCION_EXC
Rule 82    operand_bits -> DESPLAZAR_BITS_IZQ
Rule 83    operand_bits -> DESPLAZAR_BITS_DER
Rule 84    operaciones_arit -> salidas_posibles operad_arit salidas_posibles
Rule 85    operaciones_arit -> salidas_posibles operad_arit operaciones_arit
Rule 86    operaciones_bits -> salidas_posibles operand_bits salidas_posibles
Rule 87    operaciones_bits -> NEGACION salidas_posibles
Rule 88    operaciones_logicas -> ENTERO operad_logico ENTERO
Rule 89    operaciones_logicas -> FLOTANTE operad_logico FLOTANTE
Rule 90    operaciones_logicas -> BOOLEANO
Rule 91    operaciones_logicas -> decl_variable operad_logico decl_variable
Rule 92    operaciones_logicas -> decl_variable operad_logico ENTERO
Rule 93    operaciones_logicas -> decl_variable operad_logico FLOTANTE
Rule 94    operaciones -> operaciones_logicas
Rule 95    operaciones -> operaciones_arit
Rule 96    operaciones -> operaciones_bits
Rule 97    operaciones -> pushpila
Rule 98    operaciones -> poppila
Rule 99    estructuras_control -> for
Rule 100   estructuras_control -> foreach
Rule 101   estructuras_control -> if_else
Rule 102   estructuras_control -> while
Rule 103   bloque -> instrucciones
Rule 104   bloque -> retorno
Rule 105   for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 106   sentenciasAnidadas -> instrucciones
Rule 107   sentenciasAnidadas -> instrucciones sentenciasAnidadas
Rule 108   declaracionp -> decl_variable valorc
Rule 109   valorc -> menor
Rule 110   valorc -> mayor
Rule 111   menor -> MENOR_IGUAL ENTERO FIN_LINEA
Rule 112   mayor -> MAYOR_IGUAL ENTERO FIN_LINEA
Rule 113   declaracion_s -> decl_variable crecimiento
Rule 114   declaracion_s -> crecimiento decl_variable
Rule 115   crecimiento -> INCREMENTO
Rule 116   crecimiento -> DECREMENTO
Rule 117   retorno -> RETURN salidas_posibles FIN_LINEA
Rule 118   retorno -> RETURN operaciones FIN_LINEA
Rule 119   foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 120   foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 121   while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 122   if_else -> if_else_inicio if_else_fin
Rule 123   if_else -> if_else_inicio if_else_cuerpo if_else_fin
Rule 124   if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 125   if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 126   if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
Rule 127   if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA

Terminals, with rules where they appear

AND                  : 76
ARRAY                : 52 54 56
AS                   : 119 120
BACKSLASH            : 
BOOLEANO             : 40 90
BREAK                : 14
CADENA               : 20 22 39
CLASS                : 3
COMA                 : 22 22 45 59 61
COMENTARIO_BLOQUE    : 11
COMENTARIO_LINEA     : 10
CONJUNCION           : 79
CONST                : 23
CORCHETE_ABRE        : 53 55 57
CORCHETE_CIERRA      : 53 55 57
DECREMENTO           : 116
DESPLAZAR_BITS_DER   : 83
DESPLAZAR_BITS_IZQ   : 82
DIFERENTE            : 70
DISYUNCION           : 80
DISYUNCION_EXC       : 81
DIVISION             : 65
ECHO                 : 17
ELSE                 : 127
ELSEIF               : 125 126
ENTERO               : 37 88 88 92 111 112
EXPLODE              : 
FGETS                : 21
FIN_LINEA            : 12 13 14 17 18 19 20 21 22 31 33 46 47 111 112 117 118
FLOTANTE             : 38 89 89 93
FOR                  : 105
FOREACH              : 119 120
FSCANF               : 22
FUNCTION             : 41 42
IDENTIDAD            : 69
IDENTIFICADOR        : 3 22 29 30 41 42 43 44 45
IF                   : 124
IGUAL                : 31 32 33 58 59 120
IGUALDAD             : 68
INCREMENTO           : 115
LAMBDA               : 49 50 51
LLAVE_ABRE           : 3 41 42 105 119 120 121 124 125 126 127
LLAVE_CIERRA         : 3 41 42 105 119 120 121 124 125 126 127
MAYOR                : 58 59 72 120
MAYOR_IGUAL          : 73 112
MENOR                : 74
MENOR_IGUAL          : 75 111
MODULO               : 67
MULTIPLICACION       : 64
NEGACION             : 87
NEW                  : 48
NO_IDENTIDAD         : 71
NULO                 : 35
OR                   : 77
PARENTESIS_ABRE      : 18 20 21 22 41 42 43 48 49 50 51 52 54 56 105 119 120 121 124 125 126
PARENTESIS_CIERRA    : 18 20 21 22 41 42 43 48 49 50 51 52 54 56 105 119 120 121 124 125 126
POP                  : 49
POTENCIA             : 66
PRINT                : 18 19
PRIVATE              : 24
PROTECTED            : 26
PUBLIC               : 25
PUNTO                : 
PUSH                 : 50 51
READLINE             : 20
RESTA                : 63
RETURN               : 117 118
SIGNO_DOLAR          : 22 29 30 44 45
STACK                : 48
STATIC               : 27
STDIN                : 21 22
SUMA                 : 62
VAR                  : 28
WHILE                : 121
XOR                  : 78
error                : 

Nonterminals, with rules where they appear

arreglo              : 47
asignacion           : 4 105
asociacion           : 56 57 59
bloque               : 41 42 124 125 126 127
clase                : 1
crecimiento          : 113 114
datos                : 15 34 58 58 59 59 60 61
decl_variable        : 16 31 32 33 36 49 50 51 91 91 92 93 108 113 114 119 119 120 120 120 121
declaracion_s        : 13 105
declaracionp         : 105
elementos            : 54 55 61
estructuras_control  : 8
estructuras_datos    : 7 32
for                  : 99
foreach              : 100
funcion              : 9
funcionuso           : 
if_else              : 101
if_else_cuerpo       : 123 126
if_else_fin          : 122 123
if_else_inicio       : 122 123
ingreso              : 6
instrucciones        : 2 3 103 106 107 121
mayor                : 110
menor                : 109
operaciones          : 12 118
operaciones_arit     : 51 85 95
operaciones_bits     : 96
operaciones_logicas  : 94 124 125 126
operad_arit          : 84 85
operad_logico        : 88 89 91 92 93 121
operand_bits         : 86
parametros           : 42 43 45
pila                 : 46
poppila              : 33 98
programa             : 0
pushpila             : 97
retorno              : 104
salida               : 5
salidas_posibles     : 17 18 19 84 84 85 86 86 87 117
sentenciasAnidadas   : 105 107 119 120
valor                : 31 50 121
valorc               : 108
variable_tipo        : 30
while                : 102

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . clase
    (2) programa -> . instrucciones
    (3) clase -> . CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    CLASS           shift and go to state 4
    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    programa                       shift and go to state 1
    clase                          shift and go to state 2
    instrucciones                  shift and go to state 3
    asignacion                     shift and go to state 5
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    declaracion_s                  shift and go to state 14
    decl_variable                  shift and go to state 16
    poppila                        shift and go to state 17
    salidas_posibles               shift and go to state 19
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_logicas            shift and go to state 33
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 1

    (0) S' -> programa .



state 2

    (1) programa -> clase .

    $end            reduce using rule 1 (programa -> clase .)


state 3

    (2) programa -> instrucciones .

    $end            reduce using rule 2 (programa -> instrucciones .)


state 4

    (3) clase -> CLASS . IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 60


state 5

    (4) instrucciones -> asignacion .

    $end            reduce using rule 4 (instrucciones -> asignacion .)
    LLAVE_CIERRA    reduce using rule 4 (instrucciones -> asignacion .)
    COMENTARIO_LINEA reduce using rule 4 (instrucciones -> asignacion .)
    COMENTARIO_BLOQUE reduce using rule 4 (instrucciones -> asignacion .)
    BREAK           reduce using rule 4 (instrucciones -> asignacion .)
    ECHO            reduce using rule 4 (instrucciones -> asignacion .)
    PRINT           reduce using rule 4 (instrucciones -> asignacion .)
    READLINE        reduce using rule 4 (instrucciones -> asignacion .)
    FGETS           reduce using rule 4 (instrucciones -> asignacion .)
    FSCANF          reduce using rule 4 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 4 (instrucciones -> asignacion .)
    SIGNO_DOLAR     reduce using rule 4 (instrucciones -> asignacion .)
    NEW             reduce using rule 4 (instrucciones -> asignacion .)
    ARRAY           reduce using rule 4 (instrucciones -> asignacion .)
    CORCHETE_ABRE   reduce using rule 4 (instrucciones -> asignacion .)
    FOR             reduce using rule 4 (instrucciones -> asignacion .)
    FOREACH         reduce using rule 4 (instrucciones -> asignacion .)
    WHILE           reduce using rule 4 (instrucciones -> asignacion .)
    ENTERO          reduce using rule 4 (instrucciones -> asignacion .)
    FLOTANTE        reduce using rule 4 (instrucciones -> asignacion .)
    BOOLEANO        reduce using rule 4 (instrucciones -> asignacion .)
    NEGACION        reduce using rule 4 (instrucciones -> asignacion .)
    INCREMENTO      reduce using rule 4 (instrucciones -> asignacion .)
    DECREMENTO      reduce using rule 4 (instrucciones -> asignacion .)
    CONST           reduce using rule 4 (instrucciones -> asignacion .)
    PRIVATE         reduce using rule 4 (instrucciones -> asignacion .)
    PUBLIC          reduce using rule 4 (instrucciones -> asignacion .)
    PROTECTED       reduce using rule 4 (instrucciones -> asignacion .)
    STATIC          reduce using rule 4 (instrucciones -> asignacion .)
    VAR             reduce using rule 4 (instrucciones -> asignacion .)
    IF              reduce using rule 4 (instrucciones -> asignacion .)
    CADENA          reduce using rule 4 (instrucciones -> asignacion .)


state 6

    (5) instrucciones -> salida .

    $end            reduce using rule 5 (instrucciones -> salida .)
    LLAVE_CIERRA    reduce using rule 5 (instrucciones -> salida .)
    COMENTARIO_LINEA reduce using rule 5 (instrucciones -> salida .)
    COMENTARIO_BLOQUE reduce using rule 5 (instrucciones -> salida .)
    BREAK           reduce using rule 5 (instrucciones -> salida .)
    ECHO            reduce using rule 5 (instrucciones -> salida .)
    PRINT           reduce using rule 5 (instrucciones -> salida .)
    READLINE        reduce using rule 5 (instrucciones -> salida .)
    FGETS           reduce using rule 5 (instrucciones -> salida .)
    FSCANF          reduce using rule 5 (instrucciones -> salida .)
    FUNCTION        reduce using rule 5 (instrucciones -> salida .)
    SIGNO_DOLAR     reduce using rule 5 (instrucciones -> salida .)
    NEW             reduce using rule 5 (instrucciones -> salida .)
    ARRAY           reduce using rule 5 (instrucciones -> salida .)
    CORCHETE_ABRE   reduce using rule 5 (instrucciones -> salida .)
    FOR             reduce using rule 5 (instrucciones -> salida .)
    FOREACH         reduce using rule 5 (instrucciones -> salida .)
    WHILE           reduce using rule 5 (instrucciones -> salida .)
    ENTERO          reduce using rule 5 (instrucciones -> salida .)
    FLOTANTE        reduce using rule 5 (instrucciones -> salida .)
    BOOLEANO        reduce using rule 5 (instrucciones -> salida .)
    NEGACION        reduce using rule 5 (instrucciones -> salida .)
    INCREMENTO      reduce using rule 5 (instrucciones -> salida .)
    DECREMENTO      reduce using rule 5 (instrucciones -> salida .)
    CONST           reduce using rule 5 (instrucciones -> salida .)
    PRIVATE         reduce using rule 5 (instrucciones -> salida .)
    PUBLIC          reduce using rule 5 (instrucciones -> salida .)
    PROTECTED       reduce using rule 5 (instrucciones -> salida .)
    STATIC          reduce using rule 5 (instrucciones -> salida .)
    VAR             reduce using rule 5 (instrucciones -> salida .)
    IF              reduce using rule 5 (instrucciones -> salida .)
    CADENA          reduce using rule 5 (instrucciones -> salida .)


state 7

    (6) instrucciones -> ingreso .

    $end            reduce using rule 6 (instrucciones -> ingreso .)
    LLAVE_CIERRA    reduce using rule 6 (instrucciones -> ingreso .)
    COMENTARIO_LINEA reduce using rule 6 (instrucciones -> ingreso .)
    COMENTARIO_BLOQUE reduce using rule 6 (instrucciones -> ingreso .)
    BREAK           reduce using rule 6 (instrucciones -> ingreso .)
    ECHO            reduce using rule 6 (instrucciones -> ingreso .)
    PRINT           reduce using rule 6 (instrucciones -> ingreso .)
    READLINE        reduce using rule 6 (instrucciones -> ingreso .)
    FGETS           reduce using rule 6 (instrucciones -> ingreso .)
    FSCANF          reduce using rule 6 (instrucciones -> ingreso .)
    FUNCTION        reduce using rule 6 (instrucciones -> ingreso .)
    SIGNO_DOLAR     reduce using rule 6 (instrucciones -> ingreso .)
    NEW             reduce using rule 6 (instrucciones -> ingreso .)
    ARRAY           reduce using rule 6 (instrucciones -> ingreso .)
    CORCHETE_ABRE   reduce using rule 6 (instrucciones -> ingreso .)
    FOR             reduce using rule 6 (instrucciones -> ingreso .)
    FOREACH         reduce using rule 6 (instrucciones -> ingreso .)
    WHILE           reduce using rule 6 (instrucciones -> ingreso .)
    ENTERO          reduce using rule 6 (instrucciones -> ingreso .)
    FLOTANTE        reduce using rule 6 (instrucciones -> ingreso .)
    BOOLEANO        reduce using rule 6 (instrucciones -> ingreso .)
    NEGACION        reduce using rule 6 (instrucciones -> ingreso .)
    INCREMENTO      reduce using rule 6 (instrucciones -> ingreso .)
    DECREMENTO      reduce using rule 6 (instrucciones -> ingreso .)
    CONST           reduce using rule 6 (instrucciones -> ingreso .)
    PRIVATE         reduce using rule 6 (instrucciones -> ingreso .)
    PUBLIC          reduce using rule 6 (instrucciones -> ingreso .)
    PROTECTED       reduce using rule 6 (instrucciones -> ingreso .)
    STATIC          reduce using rule 6 (instrucciones -> ingreso .)
    VAR             reduce using rule 6 (instrucciones -> ingreso .)
    IF              reduce using rule 6 (instrucciones -> ingreso .)
    CADENA          reduce using rule 6 (instrucciones -> ingreso .)


state 8

    (7) instrucciones -> estructuras_datos .

    $end            reduce using rule 7 (instrucciones -> estructuras_datos .)
    LLAVE_CIERRA    reduce using rule 7 (instrucciones -> estructuras_datos .)
    COMENTARIO_LINEA reduce using rule 7 (instrucciones -> estructuras_datos .)
    COMENTARIO_BLOQUE reduce using rule 7 (instrucciones -> estructuras_datos .)
    BREAK           reduce using rule 7 (instrucciones -> estructuras_datos .)
    ECHO            reduce using rule 7 (instrucciones -> estructuras_datos .)
    PRINT           reduce using rule 7 (instrucciones -> estructuras_datos .)
    READLINE        reduce using rule 7 (instrucciones -> estructuras_datos .)
    FGETS           reduce using rule 7 (instrucciones -> estructuras_datos .)
    FSCANF          reduce using rule 7 (instrucciones -> estructuras_datos .)
    FUNCTION        reduce using rule 7 (instrucciones -> estructuras_datos .)
    SIGNO_DOLAR     reduce using rule 7 (instrucciones -> estructuras_datos .)
    NEW             reduce using rule 7 (instrucciones -> estructuras_datos .)
    ARRAY           reduce using rule 7 (instrucciones -> estructuras_datos .)
    CORCHETE_ABRE   reduce using rule 7 (instrucciones -> estructuras_datos .)
    FOR             reduce using rule 7 (instrucciones -> estructuras_datos .)
    FOREACH         reduce using rule 7 (instrucciones -> estructuras_datos .)
    WHILE           reduce using rule 7 (instrucciones -> estructuras_datos .)
    ENTERO          reduce using rule 7 (instrucciones -> estructuras_datos .)
    FLOTANTE        reduce using rule 7 (instrucciones -> estructuras_datos .)
    BOOLEANO        reduce using rule 7 (instrucciones -> estructuras_datos .)
    NEGACION        reduce using rule 7 (instrucciones -> estructuras_datos .)
    INCREMENTO      reduce using rule 7 (instrucciones -> estructuras_datos .)
    DECREMENTO      reduce using rule 7 (instrucciones -> estructuras_datos .)
    CONST           reduce using rule 7 (instrucciones -> estructuras_datos .)
    PRIVATE         reduce using rule 7 (instrucciones -> estructuras_datos .)
    PUBLIC          reduce using rule 7 (instrucciones -> estructuras_datos .)
    PROTECTED       reduce using rule 7 (instrucciones -> estructuras_datos .)
    STATIC          reduce using rule 7 (instrucciones -> estructuras_datos .)
    VAR             reduce using rule 7 (instrucciones -> estructuras_datos .)
    IF              reduce using rule 7 (instrucciones -> estructuras_datos .)
    CADENA          reduce using rule 7 (instrucciones -> estructuras_datos .)


state 9

    (8) instrucciones -> estructuras_control .

    $end            reduce using rule 8 (instrucciones -> estructuras_control .)
    LLAVE_CIERRA    reduce using rule 8 (instrucciones -> estructuras_control .)
    COMENTARIO_LINEA reduce using rule 8 (instrucciones -> estructuras_control .)
    COMENTARIO_BLOQUE reduce using rule 8 (instrucciones -> estructuras_control .)
    BREAK           reduce using rule 8 (instrucciones -> estructuras_control .)
    ECHO            reduce using rule 8 (instrucciones -> estructuras_control .)
    PRINT           reduce using rule 8 (instrucciones -> estructuras_control .)
    READLINE        reduce using rule 8 (instrucciones -> estructuras_control .)
    FGETS           reduce using rule 8 (instrucciones -> estructuras_control .)
    FSCANF          reduce using rule 8 (instrucciones -> estructuras_control .)
    FUNCTION        reduce using rule 8 (instrucciones -> estructuras_control .)
    SIGNO_DOLAR     reduce using rule 8 (instrucciones -> estructuras_control .)
    NEW             reduce using rule 8 (instrucciones -> estructuras_control .)
    ARRAY           reduce using rule 8 (instrucciones -> estructuras_control .)
    CORCHETE_ABRE   reduce using rule 8 (instrucciones -> estructuras_control .)
    FOR             reduce using rule 8 (instrucciones -> estructuras_control .)
    FOREACH         reduce using rule 8 (instrucciones -> estructuras_control .)
    WHILE           reduce using rule 8 (instrucciones -> estructuras_control .)
    ENTERO          reduce using rule 8 (instrucciones -> estructuras_control .)
    FLOTANTE        reduce using rule 8 (instrucciones -> estructuras_control .)
    BOOLEANO        reduce using rule 8 (instrucciones -> estructuras_control .)
    NEGACION        reduce using rule 8 (instrucciones -> estructuras_control .)
    INCREMENTO      reduce using rule 8 (instrucciones -> estructuras_control .)
    DECREMENTO      reduce using rule 8 (instrucciones -> estructuras_control .)
    CONST           reduce using rule 8 (instrucciones -> estructuras_control .)
    PRIVATE         reduce using rule 8 (instrucciones -> estructuras_control .)
    PUBLIC          reduce using rule 8 (instrucciones -> estructuras_control .)
    PROTECTED       reduce using rule 8 (instrucciones -> estructuras_control .)
    STATIC          reduce using rule 8 (instrucciones -> estructuras_control .)
    VAR             reduce using rule 8 (instrucciones -> estructuras_control .)
    IF              reduce using rule 8 (instrucciones -> estructuras_control .)
    CADENA          reduce using rule 8 (instrucciones -> estructuras_control .)


state 10

    (9) instrucciones -> funcion .

    $end            reduce using rule 9 (instrucciones -> funcion .)
    LLAVE_CIERRA    reduce using rule 9 (instrucciones -> funcion .)
    COMENTARIO_LINEA reduce using rule 9 (instrucciones -> funcion .)
    COMENTARIO_BLOQUE reduce using rule 9 (instrucciones -> funcion .)
    BREAK           reduce using rule 9 (instrucciones -> funcion .)
    ECHO            reduce using rule 9 (instrucciones -> funcion .)
    PRINT           reduce using rule 9 (instrucciones -> funcion .)
    READLINE        reduce using rule 9 (instrucciones -> funcion .)
    FGETS           reduce using rule 9 (instrucciones -> funcion .)
    FSCANF          reduce using rule 9 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 9 (instrucciones -> funcion .)
    SIGNO_DOLAR     reduce using rule 9 (instrucciones -> funcion .)
    NEW             reduce using rule 9 (instrucciones -> funcion .)
    ARRAY           reduce using rule 9 (instrucciones -> funcion .)
    CORCHETE_ABRE   reduce using rule 9 (instrucciones -> funcion .)
    FOR             reduce using rule 9 (instrucciones -> funcion .)
    FOREACH         reduce using rule 9 (instrucciones -> funcion .)
    WHILE           reduce using rule 9 (instrucciones -> funcion .)
    ENTERO          reduce using rule 9 (instrucciones -> funcion .)
    FLOTANTE        reduce using rule 9 (instrucciones -> funcion .)
    BOOLEANO        reduce using rule 9 (instrucciones -> funcion .)
    NEGACION        reduce using rule 9 (instrucciones -> funcion .)
    INCREMENTO      reduce using rule 9 (instrucciones -> funcion .)
    DECREMENTO      reduce using rule 9 (instrucciones -> funcion .)
    CONST           reduce using rule 9 (instrucciones -> funcion .)
    PRIVATE         reduce using rule 9 (instrucciones -> funcion .)
    PUBLIC          reduce using rule 9 (instrucciones -> funcion .)
    PROTECTED       reduce using rule 9 (instrucciones -> funcion .)
    STATIC          reduce using rule 9 (instrucciones -> funcion .)
    VAR             reduce using rule 9 (instrucciones -> funcion .)
    IF              reduce using rule 9 (instrucciones -> funcion .)
    CADENA          reduce using rule 9 (instrucciones -> funcion .)


state 11

    (10) instrucciones -> COMENTARIO_LINEA .

    $end            reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    LLAVE_CIERRA    reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    COMENTARIO_LINEA reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    BREAK           reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    ECHO            reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    PRINT           reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    READLINE        reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    FGETS           reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    FSCANF          reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    FUNCTION        reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    SIGNO_DOLAR     reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    NEW             reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    ARRAY           reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    CORCHETE_ABRE   reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    FOR             reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    FOREACH         reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    WHILE           reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    ENTERO          reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    FLOTANTE        reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    BOOLEANO        reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    NEGACION        reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    INCREMENTO      reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    DECREMENTO      reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    CONST           reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    PRIVATE         reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    PUBLIC          reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    PROTECTED       reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    STATIC          reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    VAR             reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    IF              reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)
    CADENA          reduce using rule 10 (instrucciones -> COMENTARIO_LINEA .)


state 12

    (11) instrucciones -> COMENTARIO_BLOQUE .

    $end            reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    LLAVE_CIERRA    reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    COMENTARIO_LINEA reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    COMENTARIO_BLOQUE reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    BREAK           reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    ECHO            reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    PRINT           reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    READLINE        reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    FGETS           reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    FSCANF          reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    FUNCTION        reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    SIGNO_DOLAR     reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    NEW             reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    ARRAY           reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    CORCHETE_ABRE   reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    FOR             reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    FOREACH         reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    WHILE           reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    ENTERO          reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    FLOTANTE        reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    BOOLEANO        reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    NEGACION        reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    INCREMENTO      reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    DECREMENTO      reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    CONST           reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    PRIVATE         reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    PUBLIC          reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    PROTECTED       reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    STATIC          reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    VAR             reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    IF              reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)
    CADENA          reduce using rule 11 (instrucciones -> COMENTARIO_BLOQUE .)


state 13

    (12) instrucciones -> operaciones . FIN_LINEA

    FIN_LINEA       shift and go to state 61


state 14

    (13) instrucciones -> declaracion_s . FIN_LINEA

    FIN_LINEA       shift and go to state 62


state 15

    (14) instrucciones -> BREAK . FIN_LINEA

    FIN_LINEA       shift and go to state 63


state 16

    (31) asignacion -> decl_variable . IGUAL valor FIN_LINEA
    (32) asignacion -> decl_variable . IGUAL estructuras_datos
    (33) asignacion -> decl_variable . IGUAL poppila FIN_LINEA
    (113) declaracion_s -> decl_variable . crecimiento
    (91) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (92) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (93) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (50) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (16) salidas_posibles -> decl_variable .
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (68) operad_logico -> . IGUALDAD
    (69) operad_logico -> . IDENTIDAD
    (70) operad_logico -> . DIFERENTE
    (71) operad_logico -> . NO_IDENTIDAD
    (72) operad_logico -> . MAYOR
    (73) operad_logico -> . MAYOR_IGUAL
    (74) operad_logico -> . MENOR
    (75) operad_logico -> . MENOR_IGUAL
    (76) operad_logico -> . AND
    (77) operad_logico -> . OR
    (78) operad_logico -> . XOR

    IGUAL           shift and go to state 64
    LAMBDA          shift and go to state 67
    SUMA            reduce using rule 16 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 16 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 16 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 16 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 16 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 16 (salidas_posibles -> decl_variable .)
    CONJUNCION      reduce using rule 16 (salidas_posibles -> decl_variable .)
    DISYUNCION      reduce using rule 16 (salidas_posibles -> decl_variable .)
    DISYUNCION_EXC  reduce using rule 16 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_IZQ reduce using rule 16 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_DER reduce using rule 16 (salidas_posibles -> decl_variable .)
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    IGUALDAD        shift and go to state 68
    IDENTIDAD       shift and go to state 69
    DIFERENTE       shift and go to state 70
    NO_IDENTIDAD    shift and go to state 71
    MAYOR           shift and go to state 72
    MAYOR_IGUAL     shift and go to state 73
    MENOR           shift and go to state 74
    MENOR_IGUAL     shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77
    XOR             shift and go to state 78

    crecimiento                    shift and go to state 65
    operad_logico                  shift and go to state 66

state 17

    (98) operaciones -> poppila .

    FIN_LINEA       reduce using rule 98 (operaciones -> poppila .)


state 18

    (17) salida -> ECHO . salidas_posibles FIN_LINEA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83
    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    salidas_posibles               shift and go to state 79
    datos                          shift and go to state 59
    decl_variable                  shift and go to state 80
    variable_tipo                  shift and go to state 38

state 19

    (84) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (85) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (86) operaciones_bits -> salidas_posibles . operand_bits salidas_posibles
    (62) operad_arit -> . SUMA
    (63) operad_arit -> . RESTA
    (64) operad_arit -> . MULTIPLICACION
    (65) operad_arit -> . DIVISION
    (66) operad_arit -> . POTENCIA
    (67) operad_arit -> . MODULO
    (79) operand_bits -> . CONJUNCION
    (80) operand_bits -> . DISYUNCION
    (81) operand_bits -> . DISYUNCION_EXC
    (82) operand_bits -> . DESPLAZAR_BITS_IZQ
    (83) operand_bits -> . DESPLAZAR_BITS_DER

    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    CONJUNCION      shift and go to state 92
    DISYUNCION      shift and go to state 93
    DISYUNCION_EXC  shift and go to state 94
    DESPLAZAR_BITS_IZQ shift and go to state 95
    DESPLAZAR_BITS_DER shift and go to state 96

    operad_arit                    shift and go to state 84
    operand_bits                   shift and go to state 85

state 20

    (18) salida -> PRINT . PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> PRINT . salidas_posibles FIN_LINEA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    PARENTESIS_ABRE shift and go to state 97
    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83
    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    salidas_posibles               shift and go to state 98
    datos                          shift and go to state 59
    decl_variable                  shift and go to state 80
    variable_tipo                  shift and go to state 38

state 21

    (20) ingreso -> READLINE . PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 99


state 22

    (39) datos -> CADENA .

    SUMA            reduce using rule 39 (datos -> CADENA .)
    RESTA           reduce using rule 39 (datos -> CADENA .)
    MULTIPLICACION  reduce using rule 39 (datos -> CADENA .)
    DIVISION        reduce using rule 39 (datos -> CADENA .)
    POTENCIA        reduce using rule 39 (datos -> CADENA .)
    MODULO          reduce using rule 39 (datos -> CADENA .)
    CONJUNCION      reduce using rule 39 (datos -> CADENA .)
    DISYUNCION      reduce using rule 39 (datos -> CADENA .)
    DISYUNCION_EXC  reduce using rule 39 (datos -> CADENA .)
    DESPLAZAR_BITS_IZQ reduce using rule 39 (datos -> CADENA .)
    DESPLAZAR_BITS_DER reduce using rule 39 (datos -> CADENA .)
    FIN_LINEA       reduce using rule 39 (datos -> CADENA .)
    COMA            reduce using rule 39 (datos -> CADENA .)
    IGUAL           reduce using rule 39 (datos -> CADENA .)
    CORCHETE_CIERRA reduce using rule 39 (datos -> CADENA .)
    PARENTESIS_CIERRA reduce using rule 39 (datos -> CADENA .)


state 23

    (21) ingreso -> FGETS . PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 100


state 24

    (22) ingreso -> FSCANF . PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 101


state 25

    (29) decl_variable -> SIGNO_DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 102


state 26

    (46) estructuras_datos -> pila . FIN_LINEA

    FIN_LINEA       shift and go to state 103


state 27

    (47) estructuras_datos -> arreglo . FIN_LINEA

    FIN_LINEA       shift and go to state 104


state 28

    (99) estructuras_control -> for .

    $end            reduce using rule 99 (estructuras_control -> for .)
    LLAVE_CIERRA    reduce using rule 99 (estructuras_control -> for .)
    COMENTARIO_LINEA reduce using rule 99 (estructuras_control -> for .)
    COMENTARIO_BLOQUE reduce using rule 99 (estructuras_control -> for .)
    BREAK           reduce using rule 99 (estructuras_control -> for .)
    ECHO            reduce using rule 99 (estructuras_control -> for .)
    PRINT           reduce using rule 99 (estructuras_control -> for .)
    READLINE        reduce using rule 99 (estructuras_control -> for .)
    FGETS           reduce using rule 99 (estructuras_control -> for .)
    FSCANF          reduce using rule 99 (estructuras_control -> for .)
    FUNCTION        reduce using rule 99 (estructuras_control -> for .)
    SIGNO_DOLAR     reduce using rule 99 (estructuras_control -> for .)
    NEW             reduce using rule 99 (estructuras_control -> for .)
    ARRAY           reduce using rule 99 (estructuras_control -> for .)
    CORCHETE_ABRE   reduce using rule 99 (estructuras_control -> for .)
    FOR             reduce using rule 99 (estructuras_control -> for .)
    FOREACH         reduce using rule 99 (estructuras_control -> for .)
    WHILE           reduce using rule 99 (estructuras_control -> for .)
    ENTERO          reduce using rule 99 (estructuras_control -> for .)
    FLOTANTE        reduce using rule 99 (estructuras_control -> for .)
    BOOLEANO        reduce using rule 99 (estructuras_control -> for .)
    NEGACION        reduce using rule 99 (estructuras_control -> for .)
    INCREMENTO      reduce using rule 99 (estructuras_control -> for .)
    DECREMENTO      reduce using rule 99 (estructuras_control -> for .)
    CONST           reduce using rule 99 (estructuras_control -> for .)
    PRIVATE         reduce using rule 99 (estructuras_control -> for .)
    PUBLIC          reduce using rule 99 (estructuras_control -> for .)
    PROTECTED       reduce using rule 99 (estructuras_control -> for .)
    STATIC          reduce using rule 99 (estructuras_control -> for .)
    VAR             reduce using rule 99 (estructuras_control -> for .)
    IF              reduce using rule 99 (estructuras_control -> for .)
    CADENA          reduce using rule 99 (estructuras_control -> for .)


state 29

    (100) estructuras_control -> foreach .

    $end            reduce using rule 100 (estructuras_control -> foreach .)
    LLAVE_CIERRA    reduce using rule 100 (estructuras_control -> foreach .)
    COMENTARIO_LINEA reduce using rule 100 (estructuras_control -> foreach .)
    COMENTARIO_BLOQUE reduce using rule 100 (estructuras_control -> foreach .)
    BREAK           reduce using rule 100 (estructuras_control -> foreach .)
    ECHO            reduce using rule 100 (estructuras_control -> foreach .)
    PRINT           reduce using rule 100 (estructuras_control -> foreach .)
    READLINE        reduce using rule 100 (estructuras_control -> foreach .)
    FGETS           reduce using rule 100 (estructuras_control -> foreach .)
    FSCANF          reduce using rule 100 (estructuras_control -> foreach .)
    FUNCTION        reduce using rule 100 (estructuras_control -> foreach .)
    SIGNO_DOLAR     reduce using rule 100 (estructuras_control -> foreach .)
    NEW             reduce using rule 100 (estructuras_control -> foreach .)
    ARRAY           reduce using rule 100 (estructuras_control -> foreach .)
    CORCHETE_ABRE   reduce using rule 100 (estructuras_control -> foreach .)
    FOR             reduce using rule 100 (estructuras_control -> foreach .)
    FOREACH         reduce using rule 100 (estructuras_control -> foreach .)
    WHILE           reduce using rule 100 (estructuras_control -> foreach .)
    ENTERO          reduce using rule 100 (estructuras_control -> foreach .)
    FLOTANTE        reduce using rule 100 (estructuras_control -> foreach .)
    BOOLEANO        reduce using rule 100 (estructuras_control -> foreach .)
    NEGACION        reduce using rule 100 (estructuras_control -> foreach .)
    INCREMENTO      reduce using rule 100 (estructuras_control -> foreach .)
    DECREMENTO      reduce using rule 100 (estructuras_control -> foreach .)
    CONST           reduce using rule 100 (estructuras_control -> foreach .)
    PRIVATE         reduce using rule 100 (estructuras_control -> foreach .)
    PUBLIC          reduce using rule 100 (estructuras_control -> foreach .)
    PROTECTED       reduce using rule 100 (estructuras_control -> foreach .)
    STATIC          reduce using rule 100 (estructuras_control -> foreach .)
    VAR             reduce using rule 100 (estructuras_control -> foreach .)
    IF              reduce using rule 100 (estructuras_control -> foreach .)
    CADENA          reduce using rule 100 (estructuras_control -> foreach .)


state 30

    (101) estructuras_control -> if_else .

    $end            reduce using rule 101 (estructuras_control -> if_else .)
    LLAVE_CIERRA    reduce using rule 101 (estructuras_control -> if_else .)
    COMENTARIO_LINEA reduce using rule 101 (estructuras_control -> if_else .)
    COMENTARIO_BLOQUE reduce using rule 101 (estructuras_control -> if_else .)
    BREAK           reduce using rule 101 (estructuras_control -> if_else .)
    ECHO            reduce using rule 101 (estructuras_control -> if_else .)
    PRINT           reduce using rule 101 (estructuras_control -> if_else .)
    READLINE        reduce using rule 101 (estructuras_control -> if_else .)
    FGETS           reduce using rule 101 (estructuras_control -> if_else .)
    FSCANF          reduce using rule 101 (estructuras_control -> if_else .)
    FUNCTION        reduce using rule 101 (estructuras_control -> if_else .)
    SIGNO_DOLAR     reduce using rule 101 (estructuras_control -> if_else .)
    NEW             reduce using rule 101 (estructuras_control -> if_else .)
    ARRAY           reduce using rule 101 (estructuras_control -> if_else .)
    CORCHETE_ABRE   reduce using rule 101 (estructuras_control -> if_else .)
    FOR             reduce using rule 101 (estructuras_control -> if_else .)
    FOREACH         reduce using rule 101 (estructuras_control -> if_else .)
    WHILE           reduce using rule 101 (estructuras_control -> if_else .)
    ENTERO          reduce using rule 101 (estructuras_control -> if_else .)
    FLOTANTE        reduce using rule 101 (estructuras_control -> if_else .)
    BOOLEANO        reduce using rule 101 (estructuras_control -> if_else .)
    NEGACION        reduce using rule 101 (estructuras_control -> if_else .)
    INCREMENTO      reduce using rule 101 (estructuras_control -> if_else .)
    DECREMENTO      reduce using rule 101 (estructuras_control -> if_else .)
    CONST           reduce using rule 101 (estructuras_control -> if_else .)
    PRIVATE         reduce using rule 101 (estructuras_control -> if_else .)
    PUBLIC          reduce using rule 101 (estructuras_control -> if_else .)
    PROTECTED       reduce using rule 101 (estructuras_control -> if_else .)
    STATIC          reduce using rule 101 (estructuras_control -> if_else .)
    VAR             reduce using rule 101 (estructuras_control -> if_else .)
    IF              reduce using rule 101 (estructuras_control -> if_else .)
    CADENA          reduce using rule 101 (estructuras_control -> if_else .)


state 31

    (102) estructuras_control -> while .

    $end            reduce using rule 102 (estructuras_control -> while .)
    LLAVE_CIERRA    reduce using rule 102 (estructuras_control -> while .)
    COMENTARIO_LINEA reduce using rule 102 (estructuras_control -> while .)
    COMENTARIO_BLOQUE reduce using rule 102 (estructuras_control -> while .)
    BREAK           reduce using rule 102 (estructuras_control -> while .)
    ECHO            reduce using rule 102 (estructuras_control -> while .)
    PRINT           reduce using rule 102 (estructuras_control -> while .)
    READLINE        reduce using rule 102 (estructuras_control -> while .)
    FGETS           reduce using rule 102 (estructuras_control -> while .)
    FSCANF          reduce using rule 102 (estructuras_control -> while .)
    FUNCTION        reduce using rule 102 (estructuras_control -> while .)
    SIGNO_DOLAR     reduce using rule 102 (estructuras_control -> while .)
    NEW             reduce using rule 102 (estructuras_control -> while .)
    ARRAY           reduce using rule 102 (estructuras_control -> while .)
    CORCHETE_ABRE   reduce using rule 102 (estructuras_control -> while .)
    FOR             reduce using rule 102 (estructuras_control -> while .)
    FOREACH         reduce using rule 102 (estructuras_control -> while .)
    WHILE           reduce using rule 102 (estructuras_control -> while .)
    ENTERO          reduce using rule 102 (estructuras_control -> while .)
    FLOTANTE        reduce using rule 102 (estructuras_control -> while .)
    BOOLEANO        reduce using rule 102 (estructuras_control -> while .)
    NEGACION        reduce using rule 102 (estructuras_control -> while .)
    INCREMENTO      reduce using rule 102 (estructuras_control -> while .)
    DECREMENTO      reduce using rule 102 (estructuras_control -> while .)
    CONST           reduce using rule 102 (estructuras_control -> while .)
    PRIVATE         reduce using rule 102 (estructuras_control -> while .)
    PUBLIC          reduce using rule 102 (estructuras_control -> while .)
    PROTECTED       reduce using rule 102 (estructuras_control -> while .)
    STATIC          reduce using rule 102 (estructuras_control -> while .)
    VAR             reduce using rule 102 (estructuras_control -> while .)
    IF              reduce using rule 102 (estructuras_control -> while .)
    CADENA          reduce using rule 102 (estructuras_control -> while .)


state 32

    (41) funcion -> FUNCTION . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> FUNCTION . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 105


state 33

    (94) operaciones -> operaciones_logicas .

    FIN_LINEA       reduce using rule 94 (operaciones -> operaciones_logicas .)


state 34

    (95) operaciones -> operaciones_arit .

    FIN_LINEA       reduce using rule 95 (operaciones -> operaciones_arit .)


state 35

    (96) operaciones -> operaciones_bits .

    FIN_LINEA       reduce using rule 96 (operaciones -> operaciones_bits .)


state 36

    (97) operaciones -> pushpila .

    FIN_LINEA       reduce using rule 97 (operaciones -> pushpila .)


state 37

    (114) declaracion_s -> crecimiento . decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    decl_variable                  shift and go to state 106
    variable_tipo                  shift and go to state 38

state 38

    (30) decl_variable -> variable_tipo . SIGNO_DOLAR IDENTIFICADOR

    SIGNO_DOLAR     shift and go to state 107


state 39

    (48) pila -> NEW . STACK PARENTESIS_ABRE PARENTESIS_CIERRA

    STACK           shift and go to state 108


state 40

    (52) arreglo -> ARRAY . PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> ARRAY . PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (56) arreglo -> ARRAY . PARENTESIS_ABRE asociacion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 109


state 41

    (53) arreglo -> CORCHETE_ABRE . CORCHETE_CIERRA
    (55) arreglo -> CORCHETE_ABRE . elementos CORCHETE_CIERRA
    (57) arreglo -> CORCHETE_ABRE . asociacion CORCHETE_CIERRA
    (60) elementos -> . datos
    (61) elementos -> . datos COMA elementos
    (58) asociacion -> . datos IGUAL MAYOR datos
    (59) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    CORCHETE_CIERRA shift and go to state 110
    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83

    elementos                      shift and go to state 111
    asociacion                     shift and go to state 112
    datos                          shift and go to state 113

state 42

    (105) for -> FOR . PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 114


state 43

    (119) foreach -> FOREACH . PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> FOREACH . PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 115


state 44

    (122) if_else -> if_else_inicio . if_else_fin
    (123) if_else -> if_else_inicio . if_else_cuerpo if_else_fin
    (127) if_else_fin -> . ELSE LLAVE_ABRE bloque LLAVE_CIERRA
    (125) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (126) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    ELSE            shift and go to state 118
    ELSEIF          shift and go to state 119

    if_else_fin                    shift and go to state 116
    if_else_cuerpo                 shift and go to state 117

state 45

    (121) while -> WHILE . PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 120


state 46

    (88) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (37) datos -> ENTERO .
    (68) operad_logico -> . IGUALDAD
    (69) operad_logico -> . IDENTIDAD
    (70) operad_logico -> . DIFERENTE
    (71) operad_logico -> . NO_IDENTIDAD
    (72) operad_logico -> . MAYOR
    (73) operad_logico -> . MAYOR_IGUAL
    (74) operad_logico -> . MENOR
    (75) operad_logico -> . MENOR_IGUAL
    (76) operad_logico -> . AND
    (77) operad_logico -> . OR
    (78) operad_logico -> . XOR

    SUMA            reduce using rule 37 (datos -> ENTERO .)
    RESTA           reduce using rule 37 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 37 (datos -> ENTERO .)
    DIVISION        reduce using rule 37 (datos -> ENTERO .)
    POTENCIA        reduce using rule 37 (datos -> ENTERO .)
    MODULO          reduce using rule 37 (datos -> ENTERO .)
    CONJUNCION      reduce using rule 37 (datos -> ENTERO .)
    DISYUNCION      reduce using rule 37 (datos -> ENTERO .)
    DISYUNCION_EXC  reduce using rule 37 (datos -> ENTERO .)
    DESPLAZAR_BITS_IZQ reduce using rule 37 (datos -> ENTERO .)
    DESPLAZAR_BITS_DER reduce using rule 37 (datos -> ENTERO .)
    IGUALDAD        shift and go to state 68
    IDENTIDAD       shift and go to state 69
    DIFERENTE       shift and go to state 70
    NO_IDENTIDAD    shift and go to state 71
    MAYOR           shift and go to state 72
    MAYOR_IGUAL     shift and go to state 73
    MENOR           shift and go to state 74
    MENOR_IGUAL     shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77
    XOR             shift and go to state 78

    operad_logico                  shift and go to state 121

state 47

    (89) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (38) datos -> FLOTANTE .
    (68) operad_logico -> . IGUALDAD
    (69) operad_logico -> . IDENTIDAD
    (70) operad_logico -> . DIFERENTE
    (71) operad_logico -> . NO_IDENTIDAD
    (72) operad_logico -> . MAYOR
    (73) operad_logico -> . MAYOR_IGUAL
    (74) operad_logico -> . MENOR
    (75) operad_logico -> . MENOR_IGUAL
    (76) operad_logico -> . AND
    (77) operad_logico -> . OR
    (78) operad_logico -> . XOR

    SUMA            reduce using rule 38 (datos -> FLOTANTE .)
    RESTA           reduce using rule 38 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 38 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 38 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 38 (datos -> FLOTANTE .)
    MODULO          reduce using rule 38 (datos -> FLOTANTE .)
    CONJUNCION      reduce using rule 38 (datos -> FLOTANTE .)
    DISYUNCION      reduce using rule 38 (datos -> FLOTANTE .)
    DISYUNCION_EXC  reduce using rule 38 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_IZQ reduce using rule 38 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_DER reduce using rule 38 (datos -> FLOTANTE .)
    IGUALDAD        shift and go to state 68
    IDENTIDAD       shift and go to state 69
    DIFERENTE       shift and go to state 70
    NO_IDENTIDAD    shift and go to state 71
    MAYOR           shift and go to state 72
    MAYOR_IGUAL     shift and go to state 73
    MENOR           shift and go to state 74
    MENOR_IGUAL     shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77
    XOR             shift and go to state 78

    operad_logico                  shift and go to state 122

state 48

    (90) operaciones_logicas -> BOOLEANO .
    (40) datos -> BOOLEANO .

    FIN_LINEA       reduce using rule 90 (operaciones_logicas -> BOOLEANO .)
    SUMA            reduce using rule 40 (datos -> BOOLEANO .)
    RESTA           reduce using rule 40 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 40 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 40 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 40 (datos -> BOOLEANO .)
    MODULO          reduce using rule 40 (datos -> BOOLEANO .)
    CONJUNCION      reduce using rule 40 (datos -> BOOLEANO .)
    DISYUNCION      reduce using rule 40 (datos -> BOOLEANO .)
    DISYUNCION_EXC  reduce using rule 40 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_IZQ reduce using rule 40 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_DER reduce using rule 40 (datos -> BOOLEANO .)


state 49

    (87) operaciones_bits -> NEGACION . salidas_posibles
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83
    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    salidas_posibles               shift and go to state 123
    datos                          shift and go to state 59
    decl_variable                  shift and go to state 80
    variable_tipo                  shift and go to state 38

state 50

    (115) crecimiento -> INCREMENTO .

    SIGNO_DOLAR     reduce using rule 115 (crecimiento -> INCREMENTO .)
    CONST           reduce using rule 115 (crecimiento -> INCREMENTO .)
    PRIVATE         reduce using rule 115 (crecimiento -> INCREMENTO .)
    PUBLIC          reduce using rule 115 (crecimiento -> INCREMENTO .)
    PROTECTED       reduce using rule 115 (crecimiento -> INCREMENTO .)
    STATIC          reduce using rule 115 (crecimiento -> INCREMENTO .)
    VAR             reduce using rule 115 (crecimiento -> INCREMENTO .)
    FIN_LINEA       reduce using rule 115 (crecimiento -> INCREMENTO .)
    PARENTESIS_CIERRA reduce using rule 115 (crecimiento -> INCREMENTO .)


state 51

    (116) crecimiento -> DECREMENTO .

    SIGNO_DOLAR     reduce using rule 116 (crecimiento -> DECREMENTO .)
    CONST           reduce using rule 116 (crecimiento -> DECREMENTO .)
    PRIVATE         reduce using rule 116 (crecimiento -> DECREMENTO .)
    PUBLIC          reduce using rule 116 (crecimiento -> DECREMENTO .)
    PROTECTED       reduce using rule 116 (crecimiento -> DECREMENTO .)
    STATIC          reduce using rule 116 (crecimiento -> DECREMENTO .)
    VAR             reduce using rule 116 (crecimiento -> DECREMENTO .)
    FIN_LINEA       reduce using rule 116 (crecimiento -> DECREMENTO .)
    PARENTESIS_CIERRA reduce using rule 116 (crecimiento -> DECREMENTO .)


state 52

    (23) variable_tipo -> CONST .

    SIGNO_DOLAR     reduce using rule 23 (variable_tipo -> CONST .)


state 53

    (24) variable_tipo -> PRIVATE .

    SIGNO_DOLAR     reduce using rule 24 (variable_tipo -> PRIVATE .)


state 54

    (25) variable_tipo -> PUBLIC .

    SIGNO_DOLAR     reduce using rule 25 (variable_tipo -> PUBLIC .)


state 55

    (26) variable_tipo -> PROTECTED .

    SIGNO_DOLAR     reduce using rule 26 (variable_tipo -> PROTECTED .)


state 56

    (27) variable_tipo -> STATIC .

    SIGNO_DOLAR     reduce using rule 27 (variable_tipo -> STATIC .)


state 57

    (28) variable_tipo -> VAR .

    SIGNO_DOLAR     reduce using rule 28 (variable_tipo -> VAR .)


state 58

    (124) if_else_inicio -> IF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 124


state 59

    (15) salidas_posibles -> datos .

    SUMA            reduce using rule 15 (salidas_posibles -> datos .)
    RESTA           reduce using rule 15 (salidas_posibles -> datos .)
    MULTIPLICACION  reduce using rule 15 (salidas_posibles -> datos .)
    DIVISION        reduce using rule 15 (salidas_posibles -> datos .)
    POTENCIA        reduce using rule 15 (salidas_posibles -> datos .)
    MODULO          reduce using rule 15 (salidas_posibles -> datos .)
    CONJUNCION      reduce using rule 15 (salidas_posibles -> datos .)
    DISYUNCION      reduce using rule 15 (salidas_posibles -> datos .)
    DISYUNCION_EXC  reduce using rule 15 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_IZQ reduce using rule 15 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_DER reduce using rule 15 (salidas_posibles -> datos .)
    FIN_LINEA       reduce using rule 15 (salidas_posibles -> datos .)
    PARENTESIS_CIERRA reduce using rule 15 (salidas_posibles -> datos .)


state 60

    (3) clase -> CLASS IDENTIFICADOR . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 125


state 61

    (12) instrucciones -> operaciones FIN_LINEA .

    $end            reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    BREAK           reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    ECHO            reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    PRINT           reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    READLINE        reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    FGETS           reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    FSCANF          reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    FUNCTION        reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    NEW             reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    ARRAY           reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    FOR             reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    FOREACH         reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    WHILE           reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    ENTERO          reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    FLOTANTE        reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    BOOLEANO        reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    NEGACION        reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    INCREMENTO      reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    DECREMENTO      reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    CONST           reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    PRIVATE         reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    PUBLIC          reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    PROTECTED       reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    STATIC          reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    VAR             reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    IF              reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)
    CADENA          reduce using rule 12 (instrucciones -> operaciones FIN_LINEA .)


state 62

    (13) instrucciones -> declaracion_s FIN_LINEA .

    $end            reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    BREAK           reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    ECHO            reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    PRINT           reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    READLINE        reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    FGETS           reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    FSCANF          reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    FUNCTION        reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    NEW             reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    ARRAY           reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    FOR             reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    FOREACH         reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    WHILE           reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    ENTERO          reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    FLOTANTE        reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    BOOLEANO        reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    NEGACION        reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    INCREMENTO      reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    DECREMENTO      reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    CONST           reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    PRIVATE         reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    PUBLIC          reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    PROTECTED       reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    STATIC          reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    VAR             reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    IF              reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)
    CADENA          reduce using rule 13 (instrucciones -> declaracion_s FIN_LINEA .)


state 63

    (14) instrucciones -> BREAK FIN_LINEA .

    $end            reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    BREAK           reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    ECHO            reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    PRINT           reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    READLINE        reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    FGETS           reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    FSCANF          reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    FUNCTION        reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    NEW             reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    ARRAY           reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    FOR             reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    FOREACH         reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    WHILE           reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    ENTERO          reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    FLOTANTE        reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    BOOLEANO        reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    NEGACION        reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    INCREMENTO      reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    DECREMENTO      reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    CONST           reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    PRIVATE         reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    PUBLIC          reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    PROTECTED       reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    STATIC          reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    VAR             reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    IF              reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)
    CADENA          reduce using rule 14 (instrucciones -> BREAK FIN_LINEA .)


state 64

    (31) asignacion -> decl_variable IGUAL . valor FIN_LINEA
    (32) asignacion -> decl_variable IGUAL . estructuras_datos
    (33) asignacion -> decl_variable IGUAL . poppila FIN_LINEA
    (34) valor -> . datos
    (35) valor -> . NULO
    (36) valor -> . decl_variable
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    NULO            shift and go to state 131
    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    decl_variable                  shift and go to state 126
    valor                          shift and go to state 127
    estructuras_datos              shift and go to state 128
    poppila                        shift and go to state 129
    datos                          shift and go to state 130
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    variable_tipo                  shift and go to state 38

state 65

    (113) declaracion_s -> decl_variable crecimiento .

    FIN_LINEA       reduce using rule 113 (declaracion_s -> decl_variable crecimiento .)
    PARENTESIS_CIERRA reduce using rule 113 (declaracion_s -> decl_variable crecimiento .)


state 66

    (91) operaciones_logicas -> decl_variable operad_logico . decl_variable
    (92) operaciones_logicas -> decl_variable operad_logico . ENTERO
    (93) operaciones_logicas -> decl_variable operad_logico . FLOTANTE
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 133
    FLOTANTE        shift and go to state 134
    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    decl_variable                  shift and go to state 132
    variable_tipo                  shift and go to state 38

state 67

    (50) pushpila -> decl_variable LAMBDA . PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> decl_variable LAMBDA . PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> decl_variable LAMBDA . POP PARENTESIS_ABRE PARENTESIS_CIERRA

    PUSH            shift and go to state 135
    POP             shift and go to state 136


state 68

    (68) operad_logico -> IGUALDAD .

    ENTERO          reduce using rule 68 (operad_logico -> IGUALDAD .)
    FLOTANTE        reduce using rule 68 (operad_logico -> IGUALDAD .)
    SIGNO_DOLAR     reduce using rule 68 (operad_logico -> IGUALDAD .)
    CONST           reduce using rule 68 (operad_logico -> IGUALDAD .)
    PRIVATE         reduce using rule 68 (operad_logico -> IGUALDAD .)
    PUBLIC          reduce using rule 68 (operad_logico -> IGUALDAD .)
    PROTECTED       reduce using rule 68 (operad_logico -> IGUALDAD .)
    STATIC          reduce using rule 68 (operad_logico -> IGUALDAD .)
    VAR             reduce using rule 68 (operad_logico -> IGUALDAD .)
    NULO            reduce using rule 68 (operad_logico -> IGUALDAD .)
    CADENA          reduce using rule 68 (operad_logico -> IGUALDAD .)
    BOOLEANO        reduce using rule 68 (operad_logico -> IGUALDAD .)


state 69

    (69) operad_logico -> IDENTIDAD .

    ENTERO          reduce using rule 69 (operad_logico -> IDENTIDAD .)
    FLOTANTE        reduce using rule 69 (operad_logico -> IDENTIDAD .)
    SIGNO_DOLAR     reduce using rule 69 (operad_logico -> IDENTIDAD .)
    CONST           reduce using rule 69 (operad_logico -> IDENTIDAD .)
    PRIVATE         reduce using rule 69 (operad_logico -> IDENTIDAD .)
    PUBLIC          reduce using rule 69 (operad_logico -> IDENTIDAD .)
    PROTECTED       reduce using rule 69 (operad_logico -> IDENTIDAD .)
    STATIC          reduce using rule 69 (operad_logico -> IDENTIDAD .)
    VAR             reduce using rule 69 (operad_logico -> IDENTIDAD .)
    NULO            reduce using rule 69 (operad_logico -> IDENTIDAD .)
    CADENA          reduce using rule 69 (operad_logico -> IDENTIDAD .)
    BOOLEANO        reduce using rule 69 (operad_logico -> IDENTIDAD .)


state 70

    (70) operad_logico -> DIFERENTE .

    ENTERO          reduce using rule 70 (operad_logico -> DIFERENTE .)
    FLOTANTE        reduce using rule 70 (operad_logico -> DIFERENTE .)
    SIGNO_DOLAR     reduce using rule 70 (operad_logico -> DIFERENTE .)
    CONST           reduce using rule 70 (operad_logico -> DIFERENTE .)
    PRIVATE         reduce using rule 70 (operad_logico -> DIFERENTE .)
    PUBLIC          reduce using rule 70 (operad_logico -> DIFERENTE .)
    PROTECTED       reduce using rule 70 (operad_logico -> DIFERENTE .)
    STATIC          reduce using rule 70 (operad_logico -> DIFERENTE .)
    VAR             reduce using rule 70 (operad_logico -> DIFERENTE .)
    NULO            reduce using rule 70 (operad_logico -> DIFERENTE .)
    CADENA          reduce using rule 70 (operad_logico -> DIFERENTE .)
    BOOLEANO        reduce using rule 70 (operad_logico -> DIFERENTE .)


state 71

    (71) operad_logico -> NO_IDENTIDAD .

    ENTERO          reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)
    FLOTANTE        reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)
    SIGNO_DOLAR     reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)
    CONST           reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)
    PRIVATE         reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)
    PUBLIC          reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)
    PROTECTED       reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)
    STATIC          reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)
    VAR             reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)
    NULO            reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)
    CADENA          reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)
    BOOLEANO        reduce using rule 71 (operad_logico -> NO_IDENTIDAD .)


state 72

    (72) operad_logico -> MAYOR .

    ENTERO          reduce using rule 72 (operad_logico -> MAYOR .)
    FLOTANTE        reduce using rule 72 (operad_logico -> MAYOR .)
    SIGNO_DOLAR     reduce using rule 72 (operad_logico -> MAYOR .)
    CONST           reduce using rule 72 (operad_logico -> MAYOR .)
    PRIVATE         reduce using rule 72 (operad_logico -> MAYOR .)
    PUBLIC          reduce using rule 72 (operad_logico -> MAYOR .)
    PROTECTED       reduce using rule 72 (operad_logico -> MAYOR .)
    STATIC          reduce using rule 72 (operad_logico -> MAYOR .)
    VAR             reduce using rule 72 (operad_logico -> MAYOR .)
    NULO            reduce using rule 72 (operad_logico -> MAYOR .)
    CADENA          reduce using rule 72 (operad_logico -> MAYOR .)
    BOOLEANO        reduce using rule 72 (operad_logico -> MAYOR .)


state 73

    (73) operad_logico -> MAYOR_IGUAL .

    ENTERO          reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)
    SIGNO_DOLAR     reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)
    CONST           reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)
    PRIVATE         reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)
    PUBLIC          reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)
    PROTECTED       reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)
    STATIC          reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)
    VAR             reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)
    NULO            reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)
    CADENA          reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)
    BOOLEANO        reduce using rule 73 (operad_logico -> MAYOR_IGUAL .)


state 74

    (74) operad_logico -> MENOR .

    ENTERO          reduce using rule 74 (operad_logico -> MENOR .)
    FLOTANTE        reduce using rule 74 (operad_logico -> MENOR .)
    SIGNO_DOLAR     reduce using rule 74 (operad_logico -> MENOR .)
    CONST           reduce using rule 74 (operad_logico -> MENOR .)
    PRIVATE         reduce using rule 74 (operad_logico -> MENOR .)
    PUBLIC          reduce using rule 74 (operad_logico -> MENOR .)
    PROTECTED       reduce using rule 74 (operad_logico -> MENOR .)
    STATIC          reduce using rule 74 (operad_logico -> MENOR .)
    VAR             reduce using rule 74 (operad_logico -> MENOR .)
    NULO            reduce using rule 74 (operad_logico -> MENOR .)
    CADENA          reduce using rule 74 (operad_logico -> MENOR .)
    BOOLEANO        reduce using rule 74 (operad_logico -> MENOR .)


state 75

    (75) operad_logico -> MENOR_IGUAL .

    ENTERO          reduce using rule 75 (operad_logico -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 75 (operad_logico -> MENOR_IGUAL .)
    SIGNO_DOLAR     reduce using rule 75 (operad_logico -> MENOR_IGUAL .)
    CONST           reduce using rule 75 (operad_logico -> MENOR_IGUAL .)
    PRIVATE         reduce using rule 75 (operad_logico -> MENOR_IGUAL .)
    PUBLIC          reduce using rule 75 (operad_logico -> MENOR_IGUAL .)
    PROTECTED       reduce using rule 75 (operad_logico -> MENOR_IGUAL .)
    STATIC          reduce using rule 75 (operad_logico -> MENOR_IGUAL .)
    VAR             reduce using rule 75 (operad_logico -> MENOR_IGUAL .)
    NULO            reduce using rule 75 (operad_logico -> MENOR_IGUAL .)
    CADENA          reduce using rule 75 (operad_logico -> MENOR_IGUAL .)
    BOOLEANO        reduce using rule 75 (operad_logico -> MENOR_IGUAL .)


state 76

    (76) operad_logico -> AND .

    ENTERO          reduce using rule 76 (operad_logico -> AND .)
    FLOTANTE        reduce using rule 76 (operad_logico -> AND .)
    SIGNO_DOLAR     reduce using rule 76 (operad_logico -> AND .)
    CONST           reduce using rule 76 (operad_logico -> AND .)
    PRIVATE         reduce using rule 76 (operad_logico -> AND .)
    PUBLIC          reduce using rule 76 (operad_logico -> AND .)
    PROTECTED       reduce using rule 76 (operad_logico -> AND .)
    STATIC          reduce using rule 76 (operad_logico -> AND .)
    VAR             reduce using rule 76 (operad_logico -> AND .)
    NULO            reduce using rule 76 (operad_logico -> AND .)
    CADENA          reduce using rule 76 (operad_logico -> AND .)
    BOOLEANO        reduce using rule 76 (operad_logico -> AND .)


state 77

    (77) operad_logico -> OR .

    ENTERO          reduce using rule 77 (operad_logico -> OR .)
    FLOTANTE        reduce using rule 77 (operad_logico -> OR .)
    SIGNO_DOLAR     reduce using rule 77 (operad_logico -> OR .)
    CONST           reduce using rule 77 (operad_logico -> OR .)
    PRIVATE         reduce using rule 77 (operad_logico -> OR .)
    PUBLIC          reduce using rule 77 (operad_logico -> OR .)
    PROTECTED       reduce using rule 77 (operad_logico -> OR .)
    STATIC          reduce using rule 77 (operad_logico -> OR .)
    VAR             reduce using rule 77 (operad_logico -> OR .)
    NULO            reduce using rule 77 (operad_logico -> OR .)
    CADENA          reduce using rule 77 (operad_logico -> OR .)
    BOOLEANO        reduce using rule 77 (operad_logico -> OR .)


state 78

    (78) operad_logico -> XOR .

    ENTERO          reduce using rule 78 (operad_logico -> XOR .)
    FLOTANTE        reduce using rule 78 (operad_logico -> XOR .)
    SIGNO_DOLAR     reduce using rule 78 (operad_logico -> XOR .)
    CONST           reduce using rule 78 (operad_logico -> XOR .)
    PRIVATE         reduce using rule 78 (operad_logico -> XOR .)
    PUBLIC          reduce using rule 78 (operad_logico -> XOR .)
    PROTECTED       reduce using rule 78 (operad_logico -> XOR .)
    STATIC          reduce using rule 78 (operad_logico -> XOR .)
    VAR             reduce using rule 78 (operad_logico -> XOR .)
    NULO            reduce using rule 78 (operad_logico -> XOR .)
    CADENA          reduce using rule 78 (operad_logico -> XOR .)
    BOOLEANO        reduce using rule 78 (operad_logico -> XOR .)


state 79

    (17) salida -> ECHO salidas_posibles . FIN_LINEA

    FIN_LINEA       shift and go to state 137


state 80

    (16) salidas_posibles -> decl_variable .

    FIN_LINEA       reduce using rule 16 (salidas_posibles -> decl_variable .)
    SUMA            reduce using rule 16 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 16 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 16 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 16 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 16 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 16 (salidas_posibles -> decl_variable .)
    PARENTESIS_CIERRA reduce using rule 16 (salidas_posibles -> decl_variable .)


state 81

    (37) datos -> ENTERO .

    FIN_LINEA       reduce using rule 37 (datos -> ENTERO .)
    COMA            reduce using rule 37 (datos -> ENTERO .)
    IGUAL           reduce using rule 37 (datos -> ENTERO .)
    CORCHETE_CIERRA reduce using rule 37 (datos -> ENTERO .)
    SUMA            reduce using rule 37 (datos -> ENTERO .)
    RESTA           reduce using rule 37 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 37 (datos -> ENTERO .)
    DIVISION        reduce using rule 37 (datos -> ENTERO .)
    POTENCIA        reduce using rule 37 (datos -> ENTERO .)
    MODULO          reduce using rule 37 (datos -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 37 (datos -> ENTERO .)


state 82

    (38) datos -> FLOTANTE .

    FIN_LINEA       reduce using rule 38 (datos -> FLOTANTE .)
    COMA            reduce using rule 38 (datos -> FLOTANTE .)
    IGUAL           reduce using rule 38 (datos -> FLOTANTE .)
    CORCHETE_CIERRA reduce using rule 38 (datos -> FLOTANTE .)
    SUMA            reduce using rule 38 (datos -> FLOTANTE .)
    RESTA           reduce using rule 38 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 38 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 38 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 38 (datos -> FLOTANTE .)
    MODULO          reduce using rule 38 (datos -> FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 38 (datos -> FLOTANTE .)


state 83

    (40) datos -> BOOLEANO .

    FIN_LINEA       reduce using rule 40 (datos -> BOOLEANO .)
    COMA            reduce using rule 40 (datos -> BOOLEANO .)
    IGUAL           reduce using rule 40 (datos -> BOOLEANO .)
    CORCHETE_CIERRA reduce using rule 40 (datos -> BOOLEANO .)
    SUMA            reduce using rule 40 (datos -> BOOLEANO .)
    RESTA           reduce using rule 40 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 40 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 40 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 40 (datos -> BOOLEANO .)
    MODULO          reduce using rule 40 (datos -> BOOLEANO .)
    PARENTESIS_CIERRA reduce using rule 40 (datos -> BOOLEANO .)


state 84

    (84) operaciones_arit -> salidas_posibles operad_arit . salidas_posibles
    (85) operaciones_arit -> salidas_posibles operad_arit . operaciones_arit
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83
    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    salidas_posibles               shift and go to state 138
    operaciones_arit               shift and go to state 139
    datos                          shift and go to state 59
    decl_variable                  shift and go to state 80
    variable_tipo                  shift and go to state 38

state 85

    (86) operaciones_bits -> salidas_posibles operand_bits . salidas_posibles
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83
    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    salidas_posibles               shift and go to state 140
    datos                          shift and go to state 59
    decl_variable                  shift and go to state 80
    variable_tipo                  shift and go to state 38

state 86

    (62) operad_arit -> SUMA .

    ENTERO          reduce using rule 62 (operad_arit -> SUMA .)
    FLOTANTE        reduce using rule 62 (operad_arit -> SUMA .)
    CADENA          reduce using rule 62 (operad_arit -> SUMA .)
    BOOLEANO        reduce using rule 62 (operad_arit -> SUMA .)
    SIGNO_DOLAR     reduce using rule 62 (operad_arit -> SUMA .)
    CONST           reduce using rule 62 (operad_arit -> SUMA .)
    PRIVATE         reduce using rule 62 (operad_arit -> SUMA .)
    PUBLIC          reduce using rule 62 (operad_arit -> SUMA .)
    PROTECTED       reduce using rule 62 (operad_arit -> SUMA .)
    STATIC          reduce using rule 62 (operad_arit -> SUMA .)
    VAR             reduce using rule 62 (operad_arit -> SUMA .)


state 87

    (63) operad_arit -> RESTA .

    ENTERO          reduce using rule 63 (operad_arit -> RESTA .)
    FLOTANTE        reduce using rule 63 (operad_arit -> RESTA .)
    CADENA          reduce using rule 63 (operad_arit -> RESTA .)
    BOOLEANO        reduce using rule 63 (operad_arit -> RESTA .)
    SIGNO_DOLAR     reduce using rule 63 (operad_arit -> RESTA .)
    CONST           reduce using rule 63 (operad_arit -> RESTA .)
    PRIVATE         reduce using rule 63 (operad_arit -> RESTA .)
    PUBLIC          reduce using rule 63 (operad_arit -> RESTA .)
    PROTECTED       reduce using rule 63 (operad_arit -> RESTA .)
    STATIC          reduce using rule 63 (operad_arit -> RESTA .)
    VAR             reduce using rule 63 (operad_arit -> RESTA .)


state 88

    (64) operad_arit -> MULTIPLICACION .

    ENTERO          reduce using rule 64 (operad_arit -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 64 (operad_arit -> MULTIPLICACION .)
    CADENA          reduce using rule 64 (operad_arit -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 64 (operad_arit -> MULTIPLICACION .)
    SIGNO_DOLAR     reduce using rule 64 (operad_arit -> MULTIPLICACION .)
    CONST           reduce using rule 64 (operad_arit -> MULTIPLICACION .)
    PRIVATE         reduce using rule 64 (operad_arit -> MULTIPLICACION .)
    PUBLIC          reduce using rule 64 (operad_arit -> MULTIPLICACION .)
    PROTECTED       reduce using rule 64 (operad_arit -> MULTIPLICACION .)
    STATIC          reduce using rule 64 (operad_arit -> MULTIPLICACION .)
    VAR             reduce using rule 64 (operad_arit -> MULTIPLICACION .)


state 89

    (65) operad_arit -> DIVISION .

    ENTERO          reduce using rule 65 (operad_arit -> DIVISION .)
    FLOTANTE        reduce using rule 65 (operad_arit -> DIVISION .)
    CADENA          reduce using rule 65 (operad_arit -> DIVISION .)
    BOOLEANO        reduce using rule 65 (operad_arit -> DIVISION .)
    SIGNO_DOLAR     reduce using rule 65 (operad_arit -> DIVISION .)
    CONST           reduce using rule 65 (operad_arit -> DIVISION .)
    PRIVATE         reduce using rule 65 (operad_arit -> DIVISION .)
    PUBLIC          reduce using rule 65 (operad_arit -> DIVISION .)
    PROTECTED       reduce using rule 65 (operad_arit -> DIVISION .)
    STATIC          reduce using rule 65 (operad_arit -> DIVISION .)
    VAR             reduce using rule 65 (operad_arit -> DIVISION .)


state 90

    (66) operad_arit -> POTENCIA .

    ENTERO          reduce using rule 66 (operad_arit -> POTENCIA .)
    FLOTANTE        reduce using rule 66 (operad_arit -> POTENCIA .)
    CADENA          reduce using rule 66 (operad_arit -> POTENCIA .)
    BOOLEANO        reduce using rule 66 (operad_arit -> POTENCIA .)
    SIGNO_DOLAR     reduce using rule 66 (operad_arit -> POTENCIA .)
    CONST           reduce using rule 66 (operad_arit -> POTENCIA .)
    PRIVATE         reduce using rule 66 (operad_arit -> POTENCIA .)
    PUBLIC          reduce using rule 66 (operad_arit -> POTENCIA .)
    PROTECTED       reduce using rule 66 (operad_arit -> POTENCIA .)
    STATIC          reduce using rule 66 (operad_arit -> POTENCIA .)
    VAR             reduce using rule 66 (operad_arit -> POTENCIA .)


state 91

    (67) operad_arit -> MODULO .

    ENTERO          reduce using rule 67 (operad_arit -> MODULO .)
    FLOTANTE        reduce using rule 67 (operad_arit -> MODULO .)
    CADENA          reduce using rule 67 (operad_arit -> MODULO .)
    BOOLEANO        reduce using rule 67 (operad_arit -> MODULO .)
    SIGNO_DOLAR     reduce using rule 67 (operad_arit -> MODULO .)
    CONST           reduce using rule 67 (operad_arit -> MODULO .)
    PRIVATE         reduce using rule 67 (operad_arit -> MODULO .)
    PUBLIC          reduce using rule 67 (operad_arit -> MODULO .)
    PROTECTED       reduce using rule 67 (operad_arit -> MODULO .)
    STATIC          reduce using rule 67 (operad_arit -> MODULO .)
    VAR             reduce using rule 67 (operad_arit -> MODULO .)


state 92

    (79) operand_bits -> CONJUNCION .

    ENTERO          reduce using rule 79 (operand_bits -> CONJUNCION .)
    FLOTANTE        reduce using rule 79 (operand_bits -> CONJUNCION .)
    CADENA          reduce using rule 79 (operand_bits -> CONJUNCION .)
    BOOLEANO        reduce using rule 79 (operand_bits -> CONJUNCION .)
    SIGNO_DOLAR     reduce using rule 79 (operand_bits -> CONJUNCION .)
    CONST           reduce using rule 79 (operand_bits -> CONJUNCION .)
    PRIVATE         reduce using rule 79 (operand_bits -> CONJUNCION .)
    PUBLIC          reduce using rule 79 (operand_bits -> CONJUNCION .)
    PROTECTED       reduce using rule 79 (operand_bits -> CONJUNCION .)
    STATIC          reduce using rule 79 (operand_bits -> CONJUNCION .)
    VAR             reduce using rule 79 (operand_bits -> CONJUNCION .)


state 93

    (80) operand_bits -> DISYUNCION .

    ENTERO          reduce using rule 80 (operand_bits -> DISYUNCION .)
    FLOTANTE        reduce using rule 80 (operand_bits -> DISYUNCION .)
    CADENA          reduce using rule 80 (operand_bits -> DISYUNCION .)
    BOOLEANO        reduce using rule 80 (operand_bits -> DISYUNCION .)
    SIGNO_DOLAR     reduce using rule 80 (operand_bits -> DISYUNCION .)
    CONST           reduce using rule 80 (operand_bits -> DISYUNCION .)
    PRIVATE         reduce using rule 80 (operand_bits -> DISYUNCION .)
    PUBLIC          reduce using rule 80 (operand_bits -> DISYUNCION .)
    PROTECTED       reduce using rule 80 (operand_bits -> DISYUNCION .)
    STATIC          reduce using rule 80 (operand_bits -> DISYUNCION .)
    VAR             reduce using rule 80 (operand_bits -> DISYUNCION .)


state 94

    (81) operand_bits -> DISYUNCION_EXC .

    ENTERO          reduce using rule 81 (operand_bits -> DISYUNCION_EXC .)
    FLOTANTE        reduce using rule 81 (operand_bits -> DISYUNCION_EXC .)
    CADENA          reduce using rule 81 (operand_bits -> DISYUNCION_EXC .)
    BOOLEANO        reduce using rule 81 (operand_bits -> DISYUNCION_EXC .)
    SIGNO_DOLAR     reduce using rule 81 (operand_bits -> DISYUNCION_EXC .)
    CONST           reduce using rule 81 (operand_bits -> DISYUNCION_EXC .)
    PRIVATE         reduce using rule 81 (operand_bits -> DISYUNCION_EXC .)
    PUBLIC          reduce using rule 81 (operand_bits -> DISYUNCION_EXC .)
    PROTECTED       reduce using rule 81 (operand_bits -> DISYUNCION_EXC .)
    STATIC          reduce using rule 81 (operand_bits -> DISYUNCION_EXC .)
    VAR             reduce using rule 81 (operand_bits -> DISYUNCION_EXC .)


state 95

    (82) operand_bits -> DESPLAZAR_BITS_IZQ .

    ENTERO          reduce using rule 82 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    FLOTANTE        reduce using rule 82 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    CADENA          reduce using rule 82 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    BOOLEANO        reduce using rule 82 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    SIGNO_DOLAR     reduce using rule 82 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    CONST           reduce using rule 82 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PRIVATE         reduce using rule 82 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PUBLIC          reduce using rule 82 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PROTECTED       reduce using rule 82 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    STATIC          reduce using rule 82 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    VAR             reduce using rule 82 (operand_bits -> DESPLAZAR_BITS_IZQ .)


state 96

    (83) operand_bits -> DESPLAZAR_BITS_DER .

    ENTERO          reduce using rule 83 (operand_bits -> DESPLAZAR_BITS_DER .)
    FLOTANTE        reduce using rule 83 (operand_bits -> DESPLAZAR_BITS_DER .)
    CADENA          reduce using rule 83 (operand_bits -> DESPLAZAR_BITS_DER .)
    BOOLEANO        reduce using rule 83 (operand_bits -> DESPLAZAR_BITS_DER .)
    SIGNO_DOLAR     reduce using rule 83 (operand_bits -> DESPLAZAR_BITS_DER .)
    CONST           reduce using rule 83 (operand_bits -> DESPLAZAR_BITS_DER .)
    PRIVATE         reduce using rule 83 (operand_bits -> DESPLAZAR_BITS_DER .)
    PUBLIC          reduce using rule 83 (operand_bits -> DESPLAZAR_BITS_DER .)
    PROTECTED       reduce using rule 83 (operand_bits -> DESPLAZAR_BITS_DER .)
    STATIC          reduce using rule 83 (operand_bits -> DESPLAZAR_BITS_DER .)
    VAR             reduce using rule 83 (operand_bits -> DESPLAZAR_BITS_DER .)


state 97

    (18) salida -> PRINT PARENTESIS_ABRE . salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83
    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    salidas_posibles               shift and go to state 141
    datos                          shift and go to state 59
    decl_variable                  shift and go to state 80
    variable_tipo                  shift and go to state 38

state 98

    (19) salida -> PRINT salidas_posibles . FIN_LINEA

    FIN_LINEA       shift and go to state 142


state 99

    (20) ingreso -> READLINE PARENTESIS_ABRE . CADENA PARENTESIS_CIERRA FIN_LINEA

    CADENA          shift and go to state 143


state 100

    (21) ingreso -> FGETS PARENTESIS_ABRE . STDIN PARENTESIS_CIERRA FIN_LINEA

    STDIN           shift and go to state 144


state 101

    (22) ingreso -> FSCANF PARENTESIS_ABRE . STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    STDIN           shift and go to state 145


state 102

    (29) decl_variable -> SIGNO_DOLAR IDENTIFICADOR .

    IGUAL           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    LAMBDA          reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    INCREMENTO      reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DECREMENTO      reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    IGUALDAD        reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    IDENTIDAD       reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    NO_IDENTIDAD    reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MENOR           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    AND             reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    OR              reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    XOR             reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    SUMA            reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    RESTA           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DIVISION        reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    POTENCIA        reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MODULO          reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCION      reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION      reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION_EXC  reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_IZQ reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_DER reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    FIN_LINEA       reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    AS              reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)


state 103

    (46) estructuras_datos -> pila FIN_LINEA .

    $end            reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    CONST           reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    PRIVATE         reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    PUBLIC          reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    PROTECTED       reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    STATIC          reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    VAR             reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    BREAK           reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    ECHO            reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    PRINT           reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    READLINE        reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    FGETS           reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    FSCANF          reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    FUNCTION        reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    NEW             reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    ARRAY           reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    FOR             reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    FOREACH         reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    WHILE           reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    ENTERO          reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    FLOTANTE        reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    BOOLEANO        reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    NEGACION        reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    INCREMENTO      reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    DECREMENTO      reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    IF              reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)
    CADENA          reduce using rule 46 (estructuras_datos -> pila FIN_LINEA .)


state 104

    (47) estructuras_datos -> arreglo FIN_LINEA .

    $end            reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    CONST           reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    PRIVATE         reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    PUBLIC          reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    PROTECTED       reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    STATIC          reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    VAR             reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    BREAK           reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    ECHO            reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    PRINT           reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    READLINE        reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    FGETS           reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    FSCANF          reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    FUNCTION        reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    NEW             reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    ARRAY           reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    FOR             reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    FOREACH         reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    WHILE           reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    ENTERO          reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    FLOTANTE        reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    BOOLEANO        reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    NEGACION        reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    INCREMENTO      reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    DECREMENTO      reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    IF              reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)
    CADENA          reduce using rule 47 (estructuras_datos -> arreglo FIN_LINEA .)


state 105

    (41) funcion -> FUNCTION IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> FUNCTION IDENTIFICADOR . PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 146


state 106

    (114) declaracion_s -> crecimiento decl_variable .

    FIN_LINEA       reduce using rule 114 (declaracion_s -> crecimiento decl_variable .)
    PARENTESIS_CIERRA reduce using rule 114 (declaracion_s -> crecimiento decl_variable .)


state 107

    (30) decl_variable -> variable_tipo SIGNO_DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 147


state 108

    (48) pila -> NEW STACK . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 148


state 109

    (52) arreglo -> ARRAY PARENTESIS_ABRE . PARENTESIS_CIERRA
    (54) arreglo -> ARRAY PARENTESIS_ABRE . elementos PARENTESIS_CIERRA
    (56) arreglo -> ARRAY PARENTESIS_ABRE . asociacion PARENTESIS_CIERRA
    (60) elementos -> . datos
    (61) elementos -> . datos COMA elementos
    (58) asociacion -> . datos IGUAL MAYOR datos
    (59) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    PARENTESIS_CIERRA shift and go to state 149
    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83

    elementos                      shift and go to state 150
    asociacion                     shift and go to state 151
    datos                          shift and go to state 113

state 110

    (53) arreglo -> CORCHETE_ABRE CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 53 (arreglo -> CORCHETE_ABRE CORCHETE_CIERRA .)


state 111

    (55) arreglo -> CORCHETE_ABRE elementos . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 152


state 112

    (57) arreglo -> CORCHETE_ABRE asociacion . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 153


state 113

    (60) elementos -> datos .
    (61) elementos -> datos . COMA elementos
    (58) asociacion -> datos . IGUAL MAYOR datos
    (59) asociacion -> datos . IGUAL MAYOR datos COMA asociacion

    CORCHETE_CIERRA reduce using rule 60 (elementos -> datos .)
    PARENTESIS_CIERRA reduce using rule 60 (elementos -> datos .)
    COMA            shift and go to state 154
    IGUAL           shift and go to state 155


state 114

    (105) for -> FOR PARENTESIS_ABRE . asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    asignacion                     shift and go to state 156
    decl_variable                  shift and go to state 157
    variable_tipo                  shift and go to state 38

state 115

    (119) foreach -> FOREACH PARENTESIS_ABRE . decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> FOREACH PARENTESIS_ABRE . decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    decl_variable                  shift and go to state 158
    variable_tipo                  shift and go to state 38

state 116

    (122) if_else -> if_else_inicio if_else_fin .

    $end            reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    LLAVE_CIERRA    reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    COMENTARIO_LINEA reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    COMENTARIO_BLOQUE reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    BREAK           reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    ECHO            reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    PRINT           reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    READLINE        reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    FGETS           reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    FSCANF          reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    FUNCTION        reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    SIGNO_DOLAR     reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    NEW             reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    ARRAY           reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    CORCHETE_ABRE   reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    FOR             reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    FOREACH         reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    WHILE           reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    ENTERO          reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    FLOTANTE        reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    BOOLEANO        reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    NEGACION        reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    INCREMENTO      reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    DECREMENTO      reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    CONST           reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    PRIVATE         reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    PUBLIC          reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    PROTECTED       reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    STATIC          reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    VAR             reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    IF              reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)
    CADENA          reduce using rule 122 (if_else -> if_else_inicio if_else_fin .)


state 117

    (123) if_else -> if_else_inicio if_else_cuerpo . if_else_fin
    (127) if_else_fin -> . ELSE LLAVE_ABRE bloque LLAVE_CIERRA

    ELSE            shift and go to state 118

    if_else_fin                    shift and go to state 159

state 118

    (127) if_else_fin -> ELSE . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 160


state 119

    (125) if_else_cuerpo -> ELSEIF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (126) if_else_cuerpo -> ELSEIF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    PARENTESIS_ABRE shift and go to state 161


state 120

    (121) while -> WHILE PARENTESIS_ABRE . decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    decl_variable                  shift and go to state 162
    variable_tipo                  shift and go to state 38

state 121

    (88) operaciones_logicas -> ENTERO operad_logico . ENTERO

    ENTERO          shift and go to state 163


state 122

    (89) operaciones_logicas -> FLOTANTE operad_logico . FLOTANTE

    FLOTANTE        shift and go to state 164


state 123

    (87) operaciones_bits -> NEGACION salidas_posibles .

    FIN_LINEA       reduce using rule 87 (operaciones_bits -> NEGACION salidas_posibles .)


state 124

    (124) if_else_inicio -> IF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 166
    FLOTANTE        shift and go to state 167
    BOOLEANO        shift and go to state 168
    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    operaciones_logicas            shift and go to state 165
    decl_variable                  shift and go to state 169
    variable_tipo                  shift and go to state 38

state 125

    (3) clase -> CLASS IDENTIFICADOR LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    instrucciones                  shift and go to state 170
    asignacion                     shift and go to state 5
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    declaracion_s                  shift and go to state 14
    decl_variable                  shift and go to state 16
    poppila                        shift and go to state 17
    salidas_posibles               shift and go to state 19
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_logicas            shift and go to state 33
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 126

    (36) valor -> decl_variable .
    (49) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA

    FIN_LINEA       reduce using rule 36 (valor -> decl_variable .)
    LAMBDA          shift and go to state 171


state 127

    (31) asignacion -> decl_variable IGUAL valor . FIN_LINEA

    FIN_LINEA       shift and go to state 172


state 128

    (32) asignacion -> decl_variable IGUAL estructuras_datos .

    $end            reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    SIGNO_DOLAR     reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CONST           reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PRIVATE         reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PUBLIC          reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PROTECTED       reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    STATIC          reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    VAR             reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    LLAVE_CIERRA    reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    COMENTARIO_LINEA reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    COMENTARIO_BLOQUE reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    BREAK           reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ECHO            reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PRINT           reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    READLINE        reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FGETS           reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FSCANF          reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FUNCTION        reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    NEW             reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ARRAY           reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CORCHETE_ABRE   reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FOR             reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FOREACH         reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    WHILE           reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ENTERO          reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FLOTANTE        reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    BOOLEANO        reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    NEGACION        reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    INCREMENTO      reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    DECREMENTO      reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    IF              reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CADENA          reduce using rule 32 (asignacion -> decl_variable IGUAL estructuras_datos .)


state 129

    (33) asignacion -> decl_variable IGUAL poppila . FIN_LINEA

    FIN_LINEA       shift and go to state 173


state 130

    (34) valor -> datos .

    FIN_LINEA       reduce using rule 34 (valor -> datos .)
    PARENTESIS_CIERRA reduce using rule 34 (valor -> datos .)


state 131

    (35) valor -> NULO .

    FIN_LINEA       reduce using rule 35 (valor -> NULO .)
    PARENTESIS_CIERRA reduce using rule 35 (valor -> NULO .)


state 132

    (91) operaciones_logicas -> decl_variable operad_logico decl_variable .

    FIN_LINEA       reduce using rule 91 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    PARENTESIS_CIERRA reduce using rule 91 (operaciones_logicas -> decl_variable operad_logico decl_variable .)


state 133

    (92) operaciones_logicas -> decl_variable operad_logico ENTERO .

    FIN_LINEA       reduce using rule 92 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    PARENTESIS_CIERRA reduce using rule 92 (operaciones_logicas -> decl_variable operad_logico ENTERO .)


state 134

    (93) operaciones_logicas -> decl_variable operad_logico FLOTANTE .

    FIN_LINEA       reduce using rule 93 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 93 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)


state 135

    (50) pushpila -> decl_variable LAMBDA PUSH . PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> decl_variable LAMBDA PUSH . PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 174


state 136

    (49) poppila -> decl_variable LAMBDA POP . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 175


state 137

    (17) salida -> ECHO salidas_posibles FIN_LINEA .

    $end            reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    BREAK           reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ECHO            reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PRINT           reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    READLINE        reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FGETS           reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FSCANF          reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FUNCTION        reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    NEW             reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ARRAY           reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FOR             reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FOREACH         reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    WHILE           reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ENTERO          reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FLOTANTE        reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    BOOLEANO        reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    NEGACION        reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    INCREMENTO      reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    DECREMENTO      reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CONST           reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PRIVATE         reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PUBLIC          reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PROTECTED       reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    STATIC          reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    VAR             reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    IF              reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CADENA          reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)


state 138

    (84) operaciones_arit -> salidas_posibles operad_arit salidas_posibles .
    (84) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (85) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (62) operad_arit -> . SUMA
    (63) operad_arit -> . RESTA
    (64) operad_arit -> . MULTIPLICACION
    (65) operad_arit -> . DIVISION
    (66) operad_arit -> . POTENCIA
    (67) operad_arit -> . MODULO

    FIN_LINEA       reduce using rule 84 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    PARENTESIS_CIERRA reduce using rule 84 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91

    operad_arit                    shift and go to state 84

state 139

    (85) operaciones_arit -> salidas_posibles operad_arit operaciones_arit .

    FIN_LINEA       reduce using rule 85 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    PARENTESIS_CIERRA reduce using rule 85 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)


state 140

    (86) operaciones_bits -> salidas_posibles operand_bits salidas_posibles .

    FIN_LINEA       reduce using rule 86 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)


state 141

    (18) salida -> PRINT PARENTESIS_ABRE salidas_posibles . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 176


state 142

    (19) salida -> PRINT salidas_posibles FIN_LINEA .

    $end            reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    BREAK           reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ECHO            reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PRINT           reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    READLINE        reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FGETS           reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FSCANF          reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FUNCTION        reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    NEW             reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ARRAY           reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FOR             reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FOREACH         reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    WHILE           reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ENTERO          reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FLOTANTE        reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    BOOLEANO        reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    NEGACION        reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    INCREMENTO      reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    DECREMENTO      reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CONST           reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PRIVATE         reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PUBLIC          reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PROTECTED       reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    STATIC          reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    VAR             reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    IF              reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CADENA          reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)


state 143

    (20) ingreso -> READLINE PARENTESIS_ABRE CADENA . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 177


state 144

    (21) ingreso -> FGETS PARENTESIS_ABRE STDIN . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 178


state 145

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN . COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    COMA            shift and go to state 179


state 146

    (41) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE . parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (45) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros

    PARENTESIS_CIERRA shift and go to state 180
    SIGNO_DOLAR     shift and go to state 182

    parametros                     shift and go to state 181

state 147

    (30) decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .

    IGUAL           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    LAMBDA          reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    INCREMENTO      reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DECREMENTO      reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    IGUALDAD        reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    IDENTIDAD       reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    NO_IDENTIDAD    reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MENOR           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    AND             reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    OR              reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    XOR             reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    SUMA            reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    RESTA           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DIVISION        reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    POTENCIA        reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MODULO          reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCION      reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION      reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION_EXC  reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_IZQ reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_DER reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    FIN_LINEA       reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    AS              reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)


state 148

    (48) pila -> NEW STACK PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 183


state 149

    (52) arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 52 (arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 150

    (54) arreglo -> ARRAY PARENTESIS_ABRE elementos . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 184


state 151

    (56) arreglo -> ARRAY PARENTESIS_ABRE asociacion . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 185


state 152

    (55) arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 55 (arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA .)


state 153

    (57) arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 57 (arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA .)


state 154

    (61) elementos -> datos COMA . elementos
    (60) elementos -> . datos
    (61) elementos -> . datos COMA elementos
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83

    datos                          shift and go to state 186
    elementos                      shift and go to state 187

state 155

    (58) asociacion -> datos IGUAL . MAYOR datos
    (59) asociacion -> datos IGUAL . MAYOR datos COMA asociacion

    MAYOR           shift and go to state 188


state 156

    (105) for -> FOR PARENTESIS_ABRE asignacion . declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) declaracionp -> . decl_variable valorc
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    declaracionp                   shift and go to state 189
    decl_variable                  shift and go to state 190
    variable_tipo                  shift and go to state 38

state 157

    (31) asignacion -> decl_variable . IGUAL valor FIN_LINEA
    (32) asignacion -> decl_variable . IGUAL estructuras_datos
    (33) asignacion -> decl_variable . IGUAL poppila FIN_LINEA

    IGUAL           shift and go to state 64


state 158

    (119) foreach -> FOREACH PARENTESIS_ABRE decl_variable . AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> FOREACH PARENTESIS_ABRE decl_variable . AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    AS              shift and go to state 191


state 159

    (123) if_else -> if_else_inicio if_else_cuerpo if_else_fin .

    $end            reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    LLAVE_CIERRA    reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    COMENTARIO_LINEA reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    COMENTARIO_BLOQUE reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    BREAK           reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ECHO            reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PRINT           reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    READLINE        reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FGETS           reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FSCANF          reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FUNCTION        reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    SIGNO_DOLAR     reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    NEW             reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ARRAY           reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CORCHETE_ABRE   reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FOR             reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FOREACH         reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    WHILE           reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ENTERO          reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FLOTANTE        reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    BOOLEANO        reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    NEGACION        reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    INCREMENTO      reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    DECREMENTO      reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CONST           reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PRIVATE         reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PUBLIC          reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PROTECTED       reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    STATIC          reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    VAR             reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    IF              reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CADENA          reduce using rule 123 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)


state 160

    (127) if_else_fin -> ELSE LLAVE_ABRE . bloque LLAVE_CIERRA
    (103) bloque -> . instrucciones
    (104) bloque -> . retorno
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (117) retorno -> . RETURN salidas_posibles FIN_LINEA
    (118) retorno -> . RETURN operaciones FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    RETURN          shift and go to state 195
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    bloque                         shift and go to state 192
    instrucciones                  shift and go to state 193
    retorno                        shift and go to state 194
    asignacion                     shift and go to state 5
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    declaracion_s                  shift and go to state 14
    salidas_posibles               shift and go to state 19
    decl_variable                  shift and go to state 16
    poppila                        shift and go to state 17
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_logicas            shift and go to state 33
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 161

    (125) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (126) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 166
    FLOTANTE        shift and go to state 167
    BOOLEANO        shift and go to state 168
    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    operaciones_logicas            shift and go to state 196
    decl_variable                  shift and go to state 169
    variable_tipo                  shift and go to state 38

state 162

    (121) while -> WHILE PARENTESIS_ABRE decl_variable . operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (68) operad_logico -> . IGUALDAD
    (69) operad_logico -> . IDENTIDAD
    (70) operad_logico -> . DIFERENTE
    (71) operad_logico -> . NO_IDENTIDAD
    (72) operad_logico -> . MAYOR
    (73) operad_logico -> . MAYOR_IGUAL
    (74) operad_logico -> . MENOR
    (75) operad_logico -> . MENOR_IGUAL
    (76) operad_logico -> . AND
    (77) operad_logico -> . OR
    (78) operad_logico -> . XOR

    IGUALDAD        shift and go to state 68
    IDENTIDAD       shift and go to state 69
    DIFERENTE       shift and go to state 70
    NO_IDENTIDAD    shift and go to state 71
    MAYOR           shift and go to state 72
    MAYOR_IGUAL     shift and go to state 73
    MENOR           shift and go to state 74
    MENOR_IGUAL     shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77
    XOR             shift and go to state 78

    operad_logico                  shift and go to state 197

state 163

    (88) operaciones_logicas -> ENTERO operad_logico ENTERO .

    FIN_LINEA       reduce using rule 88 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    PARENTESIS_CIERRA reduce using rule 88 (operaciones_logicas -> ENTERO operad_logico ENTERO .)


state 164

    (89) operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .

    FIN_LINEA       reduce using rule 89 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 89 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)


state 165

    (124) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 198


state 166

    (88) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (68) operad_logico -> . IGUALDAD
    (69) operad_logico -> . IDENTIDAD
    (70) operad_logico -> . DIFERENTE
    (71) operad_logico -> . NO_IDENTIDAD
    (72) operad_logico -> . MAYOR
    (73) operad_logico -> . MAYOR_IGUAL
    (74) operad_logico -> . MENOR
    (75) operad_logico -> . MENOR_IGUAL
    (76) operad_logico -> . AND
    (77) operad_logico -> . OR
    (78) operad_logico -> . XOR

    IGUALDAD        shift and go to state 68
    IDENTIDAD       shift and go to state 69
    DIFERENTE       shift and go to state 70
    NO_IDENTIDAD    shift and go to state 71
    MAYOR           shift and go to state 72
    MAYOR_IGUAL     shift and go to state 73
    MENOR           shift and go to state 74
    MENOR_IGUAL     shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77
    XOR             shift and go to state 78

    operad_logico                  shift and go to state 121

state 167

    (89) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (68) operad_logico -> . IGUALDAD
    (69) operad_logico -> . IDENTIDAD
    (70) operad_logico -> . DIFERENTE
    (71) operad_logico -> . NO_IDENTIDAD
    (72) operad_logico -> . MAYOR
    (73) operad_logico -> . MAYOR_IGUAL
    (74) operad_logico -> . MENOR
    (75) operad_logico -> . MENOR_IGUAL
    (76) operad_logico -> . AND
    (77) operad_logico -> . OR
    (78) operad_logico -> . XOR

    IGUALDAD        shift and go to state 68
    IDENTIDAD       shift and go to state 69
    DIFERENTE       shift and go to state 70
    NO_IDENTIDAD    shift and go to state 71
    MAYOR           shift and go to state 72
    MAYOR_IGUAL     shift and go to state 73
    MENOR           shift and go to state 74
    MENOR_IGUAL     shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77
    XOR             shift and go to state 78

    operad_logico                  shift and go to state 122

state 168

    (90) operaciones_logicas -> BOOLEANO .

    PARENTESIS_CIERRA reduce using rule 90 (operaciones_logicas -> BOOLEANO .)


state 169

    (91) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (92) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (93) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (68) operad_logico -> . IGUALDAD
    (69) operad_logico -> . IDENTIDAD
    (70) operad_logico -> . DIFERENTE
    (71) operad_logico -> . NO_IDENTIDAD
    (72) operad_logico -> . MAYOR
    (73) operad_logico -> . MAYOR_IGUAL
    (74) operad_logico -> . MENOR
    (75) operad_logico -> . MENOR_IGUAL
    (76) operad_logico -> . AND
    (77) operad_logico -> . OR
    (78) operad_logico -> . XOR

    IGUALDAD        shift and go to state 68
    IDENTIDAD       shift and go to state 69
    DIFERENTE       shift and go to state 70
    NO_IDENTIDAD    shift and go to state 71
    MAYOR           shift and go to state 72
    MAYOR_IGUAL     shift and go to state 73
    MENOR           shift and go to state 74
    MENOR_IGUAL     shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77
    XOR             shift and go to state 78

    operad_logico                  shift and go to state 66

state 170

    (3) clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 199


state 171

    (49) poppila -> decl_variable LAMBDA . POP PARENTESIS_ABRE PARENTESIS_CIERRA

    POP             shift and go to state 136


state 172

    (31) asignacion -> decl_variable IGUAL valor FIN_LINEA .

    $end            reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CONST           reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PRIVATE         reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PUBLIC          reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PROTECTED       reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    STATIC          reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    VAR             reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    BREAK           reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ECHO            reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PRINT           reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    READLINE        reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FGETS           reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FSCANF          reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FUNCTION        reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    NEW             reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ARRAY           reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FOR             reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FOREACH         reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    WHILE           reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ENTERO          reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FLOTANTE        reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    BOOLEANO        reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    NEGACION        reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    INCREMENTO      reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    DECREMENTO      reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    IF              reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CADENA          reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)


state 173

    (33) asignacion -> decl_variable IGUAL poppila FIN_LINEA .

    $end            reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    CONST           reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    PRIVATE         reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    PUBLIC          reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    PROTECTED       reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    STATIC          reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    VAR             reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    BREAK           reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    ECHO            reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    PRINT           reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    READLINE        reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FGETS           reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FSCANF          reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FUNCTION        reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    NEW             reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    ARRAY           reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FOR             reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FOREACH         reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    WHILE           reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    ENTERO          reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FLOTANTE        reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    BOOLEANO        reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    NEGACION        reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    INCREMENTO      reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    DECREMENTO      reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    IF              reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    CADENA          reduce using rule 33 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)


state 174

    (50) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE . valor PARENTESIS_CIERRA
    (51) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE . operaciones_arit PARENTESIS_CIERRA
    (34) valor -> . datos
    (35) valor -> . NULO
    (36) valor -> . decl_variable
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    NULO            shift and go to state 131
    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83
    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    decl_variable                  shift and go to state 200
    valor                          shift and go to state 201
    operaciones_arit               shift and go to state 202
    datos                          shift and go to state 203
    salidas_posibles               shift and go to state 204
    variable_tipo                  shift and go to state 38

state 175

    (49) poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 205


state 176

    (18) salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 206


state 177

    (20) ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 207


state 178

    (21) ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 208


state 179

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA . CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    CADENA          shift and go to state 209


state 180

    (41) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 210


state 181

    (42) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 211


state 182

    (44) parametros -> SIGNO_DOLAR . IDENTIFICADOR
    (45) parametros -> SIGNO_DOLAR . IDENTIFICADOR COMA parametros

    IDENTIFICADOR   shift and go to state 212


state 183

    (48) pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 48 (pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 184

    (54) arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 54 (arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)


state 185

    (56) arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 56 (arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA .)


state 186

    (60) elementos -> datos .
    (61) elementos -> datos . COMA elementos

    CORCHETE_CIERRA reduce using rule 60 (elementos -> datos .)
    PARENTESIS_CIERRA reduce using rule 60 (elementos -> datos .)
    COMA            shift and go to state 154


state 187

    (61) elementos -> datos COMA elementos .

    CORCHETE_CIERRA reduce using rule 61 (elementos -> datos COMA elementos .)
    PARENTESIS_CIERRA reduce using rule 61 (elementos -> datos COMA elementos .)


state 188

    (58) asociacion -> datos IGUAL MAYOR . datos
    (59) asociacion -> datos IGUAL MAYOR . datos COMA asociacion
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83

    datos                          shift and go to state 213

state 189

    (105) for -> FOR PARENTESIS_ABRE asignacion declaracionp . declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 25
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    declaracion_s                  shift and go to state 214
    decl_variable                  shift and go to state 215
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38

state 190

    (108) declaracionp -> decl_variable . valorc
    (109) valorc -> . menor
    (110) valorc -> . mayor
    (111) menor -> . MENOR_IGUAL ENTERO FIN_LINEA
    (112) mayor -> . MAYOR_IGUAL ENTERO FIN_LINEA

    MENOR_IGUAL     shift and go to state 219
    MAYOR_IGUAL     shift and go to state 220

    valorc                         shift and go to state 216
    menor                          shift and go to state 217
    mayor                          shift and go to state 218

state 191

    (119) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS . decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS . decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    decl_variable                  shift and go to state 221
    variable_tipo                  shift and go to state 38

state 192

    (127) if_else_fin -> ELSE LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 222


state 193

    (103) bloque -> instrucciones .

    LLAVE_CIERRA    reduce using rule 103 (bloque -> instrucciones .)


state 194

    (104) bloque -> retorno .

    LLAVE_CIERRA    reduce using rule 104 (bloque -> retorno .)


state 195

    (117) retorno -> RETURN . salidas_posibles FIN_LINEA
    (118) retorno -> RETURN . operaciones FIN_LINEA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 226
    FLOTANTE        shift and go to state 227
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 228
    SIGNO_DOLAR     shift and go to state 25
    NEGACION        shift and go to state 49
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    salidas_posibles               shift and go to state 223
    operaciones                    shift and go to state 224
    datos                          shift and go to state 59
    decl_variable                  shift and go to state 225
    operaciones_logicas            shift and go to state 33
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    poppila                        shift and go to state 17
    variable_tipo                  shift and go to state 38

state 196

    (125) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (126) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    PARENTESIS_CIERRA shift and go to state 229


state 197

    (121) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico . valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) valor -> . datos
    (35) valor -> . NULO
    (36) valor -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    NULO            shift and go to state 131
    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83
    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    decl_variable                  shift and go to state 230
    valor                          shift and go to state 231
    datos                          shift and go to state 130
    variable_tipo                  shift and go to state 38

state 198

    (124) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 232


state 199

    (3) clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .

    $end            reduce using rule 3 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 200

    (36) valor -> decl_variable .
    (16) salidas_posibles -> decl_variable .

    PARENTESIS_CIERRA reduce using rule 36 (valor -> decl_variable .)
    SUMA            reduce using rule 16 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 16 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 16 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 16 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 16 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 16 (salidas_posibles -> decl_variable .)


state 201

    (50) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 233


state 202

    (51) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 234


state 203

    (34) valor -> datos .
    (15) salidas_posibles -> datos .

    PARENTESIS_CIERRA reduce using rule 34 (valor -> datos .)
    SUMA            reduce using rule 15 (salidas_posibles -> datos .)
    RESTA           reduce using rule 15 (salidas_posibles -> datos .)
    MULTIPLICACION  reduce using rule 15 (salidas_posibles -> datos .)
    DIVISION        reduce using rule 15 (salidas_posibles -> datos .)
    POTENCIA        reduce using rule 15 (salidas_posibles -> datos .)
    MODULO          reduce using rule 15 (salidas_posibles -> datos .)


state 204

    (84) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (85) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (62) operad_arit -> . SUMA
    (63) operad_arit -> . RESTA
    (64) operad_arit -> . MULTIPLICACION
    (65) operad_arit -> . DIVISION
    (66) operad_arit -> . POTENCIA
    (67) operad_arit -> . MODULO

    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91

    operad_arit                    shift and go to state 84

state 205

    (49) poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 49 (poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 206

    (18) salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .

    $end            reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)


state 207

    (20) ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .

    $end            reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)


state 208

    (21) ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .

    $end            reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)


state 209

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA . COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    COMA            shift and go to state 235


state 210

    (41) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (103) bloque -> . instrucciones
    (104) bloque -> . retorno
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (117) retorno -> . RETURN salidas_posibles FIN_LINEA
    (118) retorno -> . RETURN operaciones FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    RETURN          shift and go to state 195
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    bloque                         shift and go to state 236
    instrucciones                  shift and go to state 193
    retorno                        shift and go to state 194
    asignacion                     shift and go to state 5
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    declaracion_s                  shift and go to state 14
    salidas_posibles               shift and go to state 19
    decl_variable                  shift and go to state 16
    poppila                        shift and go to state 17
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_logicas            shift and go to state 33
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 211

    (42) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 237


state 212

    (44) parametros -> SIGNO_DOLAR IDENTIFICADOR .
    (45) parametros -> SIGNO_DOLAR IDENTIFICADOR . COMA parametros

    PARENTESIS_CIERRA reduce using rule 44 (parametros -> SIGNO_DOLAR IDENTIFICADOR .)
    COMA            shift and go to state 238


state 213

    (58) asociacion -> datos IGUAL MAYOR datos .
    (59) asociacion -> datos IGUAL MAYOR datos . COMA asociacion

    CORCHETE_CIERRA reduce using rule 58 (asociacion -> datos IGUAL MAYOR datos .)
    PARENTESIS_CIERRA reduce using rule 58 (asociacion -> datos IGUAL MAYOR datos .)
    COMA            shift and go to state 239


state 214

    (105) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 240


state 215

    (113) declaracion_s -> decl_variable . crecimiento
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO

    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51

    crecimiento                    shift and go to state 65

state 216

    (108) declaracionp -> decl_variable valorc .

    SIGNO_DOLAR     reduce using rule 108 (declaracionp -> decl_variable valorc .)
    INCREMENTO      reduce using rule 108 (declaracionp -> decl_variable valorc .)
    DECREMENTO      reduce using rule 108 (declaracionp -> decl_variable valorc .)
    CONST           reduce using rule 108 (declaracionp -> decl_variable valorc .)
    PRIVATE         reduce using rule 108 (declaracionp -> decl_variable valorc .)
    PUBLIC          reduce using rule 108 (declaracionp -> decl_variable valorc .)
    PROTECTED       reduce using rule 108 (declaracionp -> decl_variable valorc .)
    STATIC          reduce using rule 108 (declaracionp -> decl_variable valorc .)
    VAR             reduce using rule 108 (declaracionp -> decl_variable valorc .)


state 217

    (109) valorc -> menor .

    SIGNO_DOLAR     reduce using rule 109 (valorc -> menor .)
    INCREMENTO      reduce using rule 109 (valorc -> menor .)
    DECREMENTO      reduce using rule 109 (valorc -> menor .)
    CONST           reduce using rule 109 (valorc -> menor .)
    PRIVATE         reduce using rule 109 (valorc -> menor .)
    PUBLIC          reduce using rule 109 (valorc -> menor .)
    PROTECTED       reduce using rule 109 (valorc -> menor .)
    STATIC          reduce using rule 109 (valorc -> menor .)
    VAR             reduce using rule 109 (valorc -> menor .)


state 218

    (110) valorc -> mayor .

    SIGNO_DOLAR     reduce using rule 110 (valorc -> mayor .)
    INCREMENTO      reduce using rule 110 (valorc -> mayor .)
    DECREMENTO      reduce using rule 110 (valorc -> mayor .)
    CONST           reduce using rule 110 (valorc -> mayor .)
    PRIVATE         reduce using rule 110 (valorc -> mayor .)
    PUBLIC          reduce using rule 110 (valorc -> mayor .)
    PROTECTED       reduce using rule 110 (valorc -> mayor .)
    STATIC          reduce using rule 110 (valorc -> mayor .)
    VAR             reduce using rule 110 (valorc -> mayor .)


state 219

    (111) menor -> MENOR_IGUAL . ENTERO FIN_LINEA

    ENTERO          shift and go to state 241


state 220

    (112) mayor -> MAYOR_IGUAL . ENTERO FIN_LINEA

    ENTERO          shift and go to state 242


state 221

    (119) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable . IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 243
    IGUAL           shift and go to state 244


state 222

    (127) if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .

    $end            reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 127 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)


state 223

    (117) retorno -> RETURN salidas_posibles . FIN_LINEA
    (84) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (85) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (86) operaciones_bits -> salidas_posibles . operand_bits salidas_posibles
    (62) operad_arit -> . SUMA
    (63) operad_arit -> . RESTA
    (64) operad_arit -> . MULTIPLICACION
    (65) operad_arit -> . DIVISION
    (66) operad_arit -> . POTENCIA
    (67) operad_arit -> . MODULO
    (79) operand_bits -> . CONJUNCION
    (80) operand_bits -> . DISYUNCION
    (81) operand_bits -> . DISYUNCION_EXC
    (82) operand_bits -> . DESPLAZAR_BITS_IZQ
    (83) operand_bits -> . DESPLAZAR_BITS_DER

    FIN_LINEA       shift and go to state 245
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    CONJUNCION      shift and go to state 92
    DISYUNCION      shift and go to state 93
    DISYUNCION_EXC  shift and go to state 94
    DESPLAZAR_BITS_IZQ shift and go to state 95
    DESPLAZAR_BITS_DER shift and go to state 96

    operad_arit                    shift and go to state 84
    operand_bits                   shift and go to state 85

state 224

    (118) retorno -> RETURN operaciones . FIN_LINEA

    FIN_LINEA       shift and go to state 246


state 225

    (16) salidas_posibles -> decl_variable .
    (91) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (92) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (93) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (50) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (68) operad_logico -> . IGUALDAD
    (69) operad_logico -> . IDENTIDAD
    (70) operad_logico -> . DIFERENTE
    (71) operad_logico -> . NO_IDENTIDAD
    (72) operad_logico -> . MAYOR
    (73) operad_logico -> . MAYOR_IGUAL
    (74) operad_logico -> . MENOR
    (75) operad_logico -> . MENOR_IGUAL
    (76) operad_logico -> . AND
    (77) operad_logico -> . OR
    (78) operad_logico -> . XOR

    FIN_LINEA       reduce using rule 16 (salidas_posibles -> decl_variable .)
    SUMA            reduce using rule 16 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 16 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 16 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 16 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 16 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 16 (salidas_posibles -> decl_variable .)
    CONJUNCION      reduce using rule 16 (salidas_posibles -> decl_variable .)
    DISYUNCION      reduce using rule 16 (salidas_posibles -> decl_variable .)
    DISYUNCION_EXC  reduce using rule 16 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_IZQ reduce using rule 16 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_DER reduce using rule 16 (salidas_posibles -> decl_variable .)
    LAMBDA          shift and go to state 67
    IGUALDAD        shift and go to state 68
    IDENTIDAD       shift and go to state 69
    DIFERENTE       shift and go to state 70
    NO_IDENTIDAD    shift and go to state 71
    MAYOR           shift and go to state 72
    MAYOR_IGUAL     shift and go to state 73
    MENOR           shift and go to state 74
    MENOR_IGUAL     shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77
    XOR             shift and go to state 78

    operad_logico                  shift and go to state 66

state 226

    (37) datos -> ENTERO .
    (88) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (68) operad_logico -> . IGUALDAD
    (69) operad_logico -> . IDENTIDAD
    (70) operad_logico -> . DIFERENTE
    (71) operad_logico -> . NO_IDENTIDAD
    (72) operad_logico -> . MAYOR
    (73) operad_logico -> . MAYOR_IGUAL
    (74) operad_logico -> . MENOR
    (75) operad_logico -> . MENOR_IGUAL
    (76) operad_logico -> . AND
    (77) operad_logico -> . OR
    (78) operad_logico -> . XOR

    FIN_LINEA       reduce using rule 37 (datos -> ENTERO .)
    SUMA            reduce using rule 37 (datos -> ENTERO .)
    RESTA           reduce using rule 37 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 37 (datos -> ENTERO .)
    DIVISION        reduce using rule 37 (datos -> ENTERO .)
    POTENCIA        reduce using rule 37 (datos -> ENTERO .)
    MODULO          reduce using rule 37 (datos -> ENTERO .)
    CONJUNCION      reduce using rule 37 (datos -> ENTERO .)
    DISYUNCION      reduce using rule 37 (datos -> ENTERO .)
    DISYUNCION_EXC  reduce using rule 37 (datos -> ENTERO .)
    DESPLAZAR_BITS_IZQ reduce using rule 37 (datos -> ENTERO .)
    DESPLAZAR_BITS_DER reduce using rule 37 (datos -> ENTERO .)
    IGUALDAD        shift and go to state 68
    IDENTIDAD       shift and go to state 69
    DIFERENTE       shift and go to state 70
    NO_IDENTIDAD    shift and go to state 71
    MAYOR           shift and go to state 72
    MAYOR_IGUAL     shift and go to state 73
    MENOR           shift and go to state 74
    MENOR_IGUAL     shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77
    XOR             shift and go to state 78

    operad_logico                  shift and go to state 121

state 227

    (38) datos -> FLOTANTE .
    (89) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (68) operad_logico -> . IGUALDAD
    (69) operad_logico -> . IDENTIDAD
    (70) operad_logico -> . DIFERENTE
    (71) operad_logico -> . NO_IDENTIDAD
    (72) operad_logico -> . MAYOR
    (73) operad_logico -> . MAYOR_IGUAL
    (74) operad_logico -> . MENOR
    (75) operad_logico -> . MENOR_IGUAL
    (76) operad_logico -> . AND
    (77) operad_logico -> . OR
    (78) operad_logico -> . XOR

    FIN_LINEA       reduce using rule 38 (datos -> FLOTANTE .)
    SUMA            reduce using rule 38 (datos -> FLOTANTE .)
    RESTA           reduce using rule 38 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 38 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 38 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 38 (datos -> FLOTANTE .)
    MODULO          reduce using rule 38 (datos -> FLOTANTE .)
    CONJUNCION      reduce using rule 38 (datos -> FLOTANTE .)
    DISYUNCION      reduce using rule 38 (datos -> FLOTANTE .)
    DISYUNCION_EXC  reduce using rule 38 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_IZQ reduce using rule 38 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_DER reduce using rule 38 (datos -> FLOTANTE .)
    IGUALDAD        shift and go to state 68
    IDENTIDAD       shift and go to state 69
    DIFERENTE       shift and go to state 70
    NO_IDENTIDAD    shift and go to state 71
    MAYOR           shift and go to state 72
    MAYOR_IGUAL     shift and go to state 73
    MENOR           shift and go to state 74
    MENOR_IGUAL     shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77
    XOR             shift and go to state 78

    operad_logico                  shift and go to state 122

state 228

    (40) datos -> BOOLEANO .
    (90) operaciones_logicas -> BOOLEANO .

  ! reduce/reduce conflict for FIN_LINEA resolved using rule 40 (datos -> BOOLEANO .)
    FIN_LINEA       reduce using rule 40 (datos -> BOOLEANO .)
    SUMA            reduce using rule 40 (datos -> BOOLEANO .)
    RESTA           reduce using rule 40 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 40 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 40 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 40 (datos -> BOOLEANO .)
    MODULO          reduce using rule 40 (datos -> BOOLEANO .)
    CONJUNCION      reduce using rule 40 (datos -> BOOLEANO .)
    DISYUNCION      reduce using rule 40 (datos -> BOOLEANO .)
    DISYUNCION_EXC  reduce using rule 40 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_IZQ reduce using rule 40 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_DER reduce using rule 40 (datos -> BOOLEANO .)

  ! FIN_LINEA       [ reduce using rule 90 (operaciones_logicas -> BOOLEANO .) ]


state 229

    (125) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA
    (126) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    LLAVE_ABRE      shift and go to state 247


state 230

    (36) valor -> decl_variable .

    PARENTESIS_CIERRA reduce using rule 36 (valor -> decl_variable .)


state 231

    (121) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 248


state 232

    (124) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (103) bloque -> . instrucciones
    (104) bloque -> . retorno
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (117) retorno -> . RETURN salidas_posibles FIN_LINEA
    (118) retorno -> . RETURN operaciones FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    RETURN          shift and go to state 195
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    operaciones_logicas            shift and go to state 33
    bloque                         shift and go to state 249
    instrucciones                  shift and go to state 193
    retorno                        shift and go to state 194
    asignacion                     shift and go to state 5
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    declaracion_s                  shift and go to state 14
    salidas_posibles               shift and go to state 19
    decl_variable                  shift and go to state 16
    poppila                        shift and go to state 17
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 233

    (50) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 50 (pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA .)


state 234

    (51) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 51 (pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA .)


state 235

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA . SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    SIGNO_DOLAR     shift and go to state 250


state 236

    (41) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 251


state 237

    (42) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (103) bloque -> . instrucciones
    (104) bloque -> . retorno
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (117) retorno -> . RETURN salidas_posibles FIN_LINEA
    (118) retorno -> . RETURN operaciones FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    RETURN          shift and go to state 195
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    bloque                         shift and go to state 252
    instrucciones                  shift and go to state 193
    retorno                        shift and go to state 194
    asignacion                     shift and go to state 5
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    declaracion_s                  shift and go to state 14
    salidas_posibles               shift and go to state 19
    decl_variable                  shift and go to state 16
    poppila                        shift and go to state 17
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_logicas            shift and go to state 33
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 238

    (45) parametros -> SIGNO_DOLAR IDENTIFICADOR COMA . parametros
    (44) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (45) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros

    SIGNO_DOLAR     shift and go to state 182

    parametros                     shift and go to state 253

state 239

    (59) asociacion -> datos IGUAL MAYOR datos COMA . asociacion
    (58) asociacion -> . datos IGUAL MAYOR datos
    (59) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    ENTERO          shift and go to state 81
    FLOTANTE        shift and go to state 82
    CADENA          shift and go to state 22
    BOOLEANO        shift and go to state 83

    datos                          shift and go to state 254
    asociacion                     shift and go to state 255

state 240

    (105) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 256


state 241

    (111) menor -> MENOR_IGUAL ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 257


state 242

    (112) mayor -> MAYOR_IGUAL ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 258


state 243

    (119) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 259


state 244

    (120) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL . MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    MAYOR           shift and go to state 260


state 245

    (117) retorno -> RETURN salidas_posibles FIN_LINEA .

    LLAVE_CIERRA    reduce using rule 117 (retorno -> RETURN salidas_posibles FIN_LINEA .)


state 246

    (118) retorno -> RETURN operaciones FIN_LINEA .

    LLAVE_CIERRA    reduce using rule 118 (retorno -> RETURN operaciones FIN_LINEA .)


state 247

    (125) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (126) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA if_else_cuerpo
    (103) bloque -> . instrucciones
    (104) bloque -> . retorno
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (117) retorno -> . RETURN salidas_posibles FIN_LINEA
    (118) retorno -> . RETURN operaciones FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    RETURN          shift and go to state 195
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    operaciones_logicas            shift and go to state 33
    bloque                         shift and go to state 261
    instrucciones                  shift and go to state 193
    retorno                        shift and go to state 194
    asignacion                     shift and go to state 5
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    declaracion_s                  shift and go to state 14
    salidas_posibles               shift and go to state 19
    decl_variable                  shift and go to state 16
    poppila                        shift and go to state 17
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 248

    (121) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 262


state 249

    (124) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 263


state 250

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR . IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    IDENTIFICADOR   shift and go to state 264


state 251

    (41) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    $end            reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 41 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 252

    (42) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 265


state 253

    (45) parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros .

    PARENTESIS_CIERRA reduce using rule 45 (parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros .)


state 254

    (58) asociacion -> datos . IGUAL MAYOR datos
    (59) asociacion -> datos . IGUAL MAYOR datos COMA asociacion

    IGUAL           shift and go to state 155


state 255

    (59) asociacion -> datos IGUAL MAYOR datos COMA asociacion .

    CORCHETE_CIERRA reduce using rule 59 (asociacion -> datos IGUAL MAYOR datos COMA asociacion .)
    PARENTESIS_CIERRA reduce using rule 59 (asociacion -> datos IGUAL MAYOR datos COMA asociacion .)


state 256

    (105) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (106) sentenciasAnidadas -> . instrucciones
    (107) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    asignacion                     shift and go to state 5
    declaracion_s                  shift and go to state 14
    sentenciasAnidadas             shift and go to state 266
    instrucciones                  shift and go to state 267
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    decl_variable                  shift and go to state 16
    poppila                        shift and go to state 17
    salidas_posibles               shift and go to state 19
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_logicas            shift and go to state 33
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 257

    (111) menor -> MENOR_IGUAL ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 111 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 111 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 111 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    CONST           reduce using rule 111 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 111 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 111 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 111 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    STATIC          reduce using rule 111 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    VAR             reduce using rule 111 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)


state 258

    (112) mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 112 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 112 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 112 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    CONST           reduce using rule 112 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 112 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 112 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 112 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    STATIC          reduce using rule 112 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    VAR             reduce using rule 112 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)


state 259

    (119) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (106) sentenciasAnidadas -> . instrucciones
    (107) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    decl_variable                  shift and go to state 16
    sentenciasAnidadas             shift and go to state 268
    instrucciones                  shift and go to state 267
    asignacion                     shift and go to state 5
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    declaracion_s                  shift and go to state 14
    poppila                        shift and go to state 17
    salidas_posibles               shift and go to state 19
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_logicas            shift and go to state 33
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 260

    (120) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR . decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 25
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57

    decl_variable                  shift and go to state 269
    variable_tipo                  shift and go to state 38

state 261

    (125) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA
    (126) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA if_else_cuerpo

    LLAVE_CIERRA    shift and go to state 270


state 262

    (121) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    decl_variable                  shift and go to state 16
    instrucciones                  shift and go to state 271
    asignacion                     shift and go to state 5
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    declaracion_s                  shift and go to state 14
    poppila                        shift and go to state 17
    salidas_posibles               shift and go to state 19
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_logicas            shift and go to state 33
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 263

    (124) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    ELSE            reduce using rule 124 (if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ELSEIF          reduce using rule 124 (if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 264

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 272


state 265

    (42) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    $end            reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 42 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 266

    (105) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 273


state 267

    (106) sentenciasAnidadas -> instrucciones .
    (107) sentenciasAnidadas -> instrucciones . sentenciasAnidadas
    (106) sentenciasAnidadas -> . instrucciones
    (107) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    LLAVE_CIERRA    reduce using rule 106 (sentenciasAnidadas -> instrucciones .)
    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    instrucciones                  shift and go to state 267
    sentenciasAnidadas             shift and go to state 274
    asignacion                     shift and go to state 5
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    declaracion_s                  shift and go to state 14
    decl_variable                  shift and go to state 16
    poppila                        shift and go to state 17
    salidas_posibles               shift and go to state 19
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_logicas            shift and go to state 33
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 268

    (119) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 275


state 269

    (120) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 276


state 270

    (125) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .
    (126) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA . if_else_cuerpo
    (125) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (126) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    ELSE            reduce using rule 125 (if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ELSEIF          shift and go to state 119

    if_else_cuerpo                 shift and go to state 277

state 271

    (121) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 278


state 272

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 279


state 273

    (105) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    $end            reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 105 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 274

    (107) sentenciasAnidadas -> instrucciones sentenciasAnidadas .

    LLAVE_CIERRA    reduce using rule 107 (sentenciasAnidadas -> instrucciones sentenciasAnidadas .)


state 275

    (119) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    $end            reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 119 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 276

    (120) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 280


state 277

    (126) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo .

    ELSE            reduce using rule 126 (if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo .)


state 278

    (121) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    $end            reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ECHO            reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    READLINE        reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FGETS           reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FSCANF          reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNCTION        reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEW             reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ARRAY           reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOREACH         reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ENTERO          reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEGACION        reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONST           reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRIVATE         reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PUBLIC          reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PROTECTED       reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STATIC          reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CADENA          reduce using rule 121 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 279

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .

    $end            reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)


state 280

    (120) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (106) sentenciasAnidadas -> . instrucciones
    (107) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . salida
    (6) instrucciones -> . ingreso
    (7) instrucciones -> . estructuras_datos
    (8) instrucciones -> . estructuras_control
    (9) instrucciones -> . funcion
    (10) instrucciones -> . COMENTARIO_LINEA
    (11) instrucciones -> . COMENTARIO_BLOQUE
    (12) instrucciones -> . operaciones FIN_LINEA
    (13) instrucciones -> . declaracion_s FIN_LINEA
    (14) instrucciones -> . BREAK FIN_LINEA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) asignacion -> . decl_variable IGUAL estructuras_datos
    (33) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (46) estructuras_datos -> . pila FIN_LINEA
    (47) estructuras_datos -> . arreglo FIN_LINEA
    (99) estructuras_control -> . for
    (100) estructuras_control -> . foreach
    (101) estructuras_control -> . if_else
    (102) estructuras_control -> . while
    (41) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (42) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (94) operaciones -> . operaciones_logicas
    (95) operaciones -> . operaciones_arit
    (96) operaciones -> . operaciones_bits
    (97) operaciones -> . pushpila
    (98) operaciones -> . poppila
    (113) declaracion_s -> . decl_variable crecimiento
    (114) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (48) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (52) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (53) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (105) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (119) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (120) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (122) if_else -> . if_else_inicio if_else_fin
    (123) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (121) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (88) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (89) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (90) operaciones_logicas -> . BOOLEANO
    (91) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (92) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (93) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (84) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (85) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (86) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (87) operaciones_bits -> . NEGACION salidas_posibles
    (50) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (51) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (49) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (115) crecimiento -> . INCREMENTO
    (116) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (124) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (37) datos -> . ENTERO
    (38) datos -> . FLOTANTE
    (39) datos -> . CADENA
    (40) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 11
    COMENTARIO_BLOQUE shift and go to state 12
    BREAK           shift and go to state 15
    ECHO            shift and go to state 18
    PRINT           shift and go to state 20
    READLINE        shift and go to state 21
    FGETS           shift and go to state 23
    FSCANF          shift and go to state 24
    FUNCTION        shift and go to state 32
    SIGNO_DOLAR     shift and go to state 25
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    ENTERO          shift and go to state 46
    FLOTANTE        shift and go to state 47
    BOOLEANO        shift and go to state 48
    NEGACION        shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CONST           shift and go to state 52
    PRIVATE         shift and go to state 53
    PUBLIC          shift and go to state 54
    PROTECTED       shift and go to state 55
    STATIC          shift and go to state 56
    VAR             shift and go to state 57
    IF              shift and go to state 58
    CADENA          shift and go to state 22

    decl_variable                  shift and go to state 16
    sentenciasAnidadas             shift and go to state 281
    instrucciones                  shift and go to state 267
    asignacion                     shift and go to state 5
    salida                         shift and go to state 6
    ingreso                        shift and go to state 7
    estructuras_datos              shift and go to state 8
    estructuras_control            shift and go to state 9
    funcion                        shift and go to state 10
    operaciones                    shift and go to state 13
    declaracion_s                  shift and go to state 14
    poppila                        shift and go to state 17
    salidas_posibles               shift and go to state 19
    pila                           shift and go to state 26
    arreglo                        shift and go to state 27
    for                            shift and go to state 28
    foreach                        shift and go to state 29
    if_else                        shift and go to state 30
    while                          shift and go to state 31
    operaciones_logicas            shift and go to state 33
    operaciones_arit               shift and go to state 34
    operaciones_bits               shift and go to state 35
    pushpila                       shift and go to state 36
    crecimiento                    shift and go to state 37
    variable_tipo                  shift and go to state 38
    if_else_inicio                 shift and go to state 44
    datos                          shift and go to state 59

state 281

    (120) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 282


state 282

    (120) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    $end            reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 120 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 228 resolved using rule (datos -> BOOLEANO)
WARNING: rejected rule (operaciones_logicas -> BOOLEANO) in state 228
