Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BACKSLASH
    EXPLODE
    PUNTO

Grammar

Rule 0     S' -> variaslineas
Rule 1     variaslineas -> programa
Rule 2     variaslineas -> programa variaslineas
Rule 3     programa -> clase
Rule 4     programa -> instrucciones
Rule 5     clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 6     instrucciones -> asignacion
Rule 7     instrucciones -> salida
Rule 8     instrucciones -> ingreso
Rule 9     instrucciones -> estructuras_datos
Rule 10    instrucciones -> estructuras_control
Rule 11    instrucciones -> funcion
Rule 12    instrucciones -> COMENTARIO_LINEA
Rule 13    instrucciones -> COMENTARIO_BLOQUE
Rule 14    instrucciones -> operaciones FIN_LINEA
Rule 15    instrucciones -> declaracion_s FIN_LINEA
Rule 16    instrucciones -> BREAK FIN_LINEA
Rule 17    salidas_posibles -> datos
Rule 18    salidas_posibles -> decl_variable
Rule 19    salida -> ECHO salidas_posibles FIN_LINEA
Rule 20    salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
Rule 21    salida -> PRINT salidas_posibles FIN_LINEA
Rule 22    ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
Rule 23    ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
Rule 24    ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
Rule 25    variable_tipo -> CONST
Rule 26    variable_tipo -> PRIVATE
Rule 27    variable_tipo -> PUBLIC
Rule 28    variable_tipo -> PROTECTED
Rule 29    variable_tipo -> STATIC
Rule 30    variable_tipo -> VAR
Rule 31    decl_variable -> SIGNO_DOLAR IDENTIFICADOR
Rule 32    decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR
Rule 33    asignacion -> decl_variable IGUAL valor FIN_LINEA
Rule 34    asignacion -> decl_variable IGUAL estructuras_datos
Rule 35    asignacion -> decl_variable IGUAL poppila FIN_LINEA
Rule 36    valor -> datos
Rule 37    valor -> NULO
Rule 38    valor -> decl_variable
Rule 39    datos -> ENTERO
Rule 40    datos -> FLOTANTE
Rule 41    datos -> CADENA
Rule 42    datos -> BOOLEANO
Rule 43    funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 44    funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 45    funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
Rule 46    parametros -> SIGNO_DOLAR IDENTIFICADOR
Rule 47    parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros
Rule 48    estructuras_datos -> pila FIN_LINEA
Rule 49    estructuras_datos -> arreglo FIN_LINEA
Rule 50    pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 51    poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 52    pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
Rule 53    pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
Rule 54    arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 55    arreglo -> CORCHETE_ABRE CORCHETE_CIERRA
Rule 56    arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
Rule 57    arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA
Rule 58    arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
Rule 59    arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA
Rule 60    asociacion -> datos IGUAL MAYOR datos
Rule 61    asociacion -> datos IGUAL MAYOR datos COMA asociacion
Rule 62    elementos -> datos
Rule 63    elementos -> datos COMA elementos
Rule 64    operad_arit -> SUMA
Rule 65    operad_arit -> RESTA
Rule 66    operad_arit -> MULTIPLICACION
Rule 67    operad_arit -> DIVISION
Rule 68    operad_arit -> POTENCIA
Rule 69    operad_arit -> MODULO
Rule 70    operad_logico -> IGUALDAD
Rule 71    operad_logico -> IDENTIDAD
Rule 72    operad_logico -> DIFERENTE
Rule 73    operad_logico -> NO_IDENTIDAD
Rule 74    operad_logico -> MAYOR
Rule 75    operad_logico -> MAYOR_IGUAL
Rule 76    operad_logico -> MENOR
Rule 77    operad_logico -> MENOR_IGUAL
Rule 78    operad_logico -> AND
Rule 79    operad_logico -> OR
Rule 80    operad_logico -> XOR
Rule 81    operand_bits -> CONJUNCION
Rule 82    operand_bits -> DISYUNCION
Rule 83    operand_bits -> DISYUNCION_EXC
Rule 84    operand_bits -> DESPLAZAR_BITS_IZQ
Rule 85    operand_bits -> DESPLAZAR_BITS_DER
Rule 86    operaciones_arit -> salidas_posibles operad_arit salidas_posibles
Rule 87    operaciones_arit -> salidas_posibles operad_arit operaciones_arit
Rule 88    operaciones_bits -> salidas_posibles operand_bits salidas_posibles
Rule 89    operaciones_bits -> NEGACION salidas_posibles
Rule 90    operaciones_logicas -> ENTERO operad_logico ENTERO
Rule 91    operaciones_logicas -> FLOTANTE operad_logico FLOTANTE
Rule 92    operaciones_logicas -> BOOLEANO
Rule 93    operaciones_logicas -> decl_variable operad_logico decl_variable
Rule 94    operaciones_logicas -> decl_variable operad_logico ENTERO
Rule 95    operaciones_logicas -> decl_variable operad_logico FLOTANTE
Rule 96    operaciones -> operaciones_logicas
Rule 97    operaciones -> operaciones_arit
Rule 98    operaciones -> operaciones_bits
Rule 99    operaciones -> pushpila
Rule 100   operaciones -> poppila
Rule 101   paraCalculos -> ENTERO
Rule 102   paraCalculos -> FLOTANTE
Rule 103   paraCalculos -> decl_variable
Rule 104   combinarOp -> operad_arit paraCalculos
Rule 105   combinarOp -> operad_arit paraCalculos combinarOp
Rule 106   opAritVar -> paraCalculos combinarOp
Rule 107   estructuras_control -> for
Rule 108   estructuras_control -> foreach
Rule 109   estructuras_control -> if_else
Rule 110   estructuras_control -> while
Rule 111   bloque -> instrucciones
Rule 112   bloque -> retorno
Rule 113   for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 114   sentenciasAnidadas -> instrucciones
Rule 115   sentenciasAnidadas -> instrucciones sentenciasAnidadas
Rule 116   declaracionp -> decl_variable valorc
Rule 117   valorc -> menor
Rule 118   valorc -> mayor
Rule 119   menor -> MENOR_IGUAL ENTERO FIN_LINEA
Rule 120   mayor -> MAYOR_IGUAL ENTERO FIN_LINEA
Rule 121   declaracion_s -> decl_variable crecimiento
Rule 122   declaracion_s -> crecimiento decl_variable
Rule 123   crecimiento -> INCREMENTO
Rule 124   crecimiento -> DECREMENTO
Rule 125   retorno -> RETURN salidas_posibles FIN_LINEA
Rule 126   retorno -> RETURN operaciones FIN_LINEA
Rule 127   foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 128   foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 129   while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 130   if_else -> if_else_inicio if_else_fin
Rule 131   if_else -> if_else_inicio if_else_cuerpo if_else_fin
Rule 132   if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 133   if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 134   if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
Rule 135   if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA

Terminals, with rules where they appear

AND                  : 78
ARRAY                : 54 56 58
AS                   : 127 128
BACKSLASH            : 
BOOLEANO             : 42 92
BREAK                : 16
CADENA               : 22 24 41
CLASS                : 5
COMA                 : 24 24 47 61 63
COMENTARIO_BLOQUE    : 13
COMENTARIO_LINEA     : 12
CONJUNCION           : 81
CONST                : 25
CORCHETE_ABRE        : 55 57 59
CORCHETE_CIERRA      : 55 57 59
DECREMENTO           : 124
DESPLAZAR_BITS_DER   : 85
DESPLAZAR_BITS_IZQ   : 84
DIFERENTE            : 72
DISYUNCION           : 82
DISYUNCION_EXC       : 83
DIVISION             : 67
ECHO                 : 19
ELSE                 : 135
ELSEIF               : 133 134
ENTERO               : 39 90 90 94 101 119 120
EXPLODE              : 
FGETS                : 23
FIN_LINEA            : 14 15 16 19 20 21 22 23 24 33 35 48 49 119 120 125 126
FLOTANTE             : 40 91 91 95 102
FOR                  : 113
FOREACH              : 127 128
FSCANF               : 24
FUNCTION             : 43 44
IDENTIDAD            : 71
IDENTIFICADOR        : 5 24 31 32 43 44 45 46 47
IF                   : 132
IGUAL                : 33 34 35 60 61 128
IGUALDAD             : 70
INCREMENTO           : 123
LAMBDA               : 51 52 53
LLAVE_ABRE           : 5 43 44 113 127 128 129 132 133 134 135
LLAVE_CIERRA         : 5 43 44 113 127 128 129 132 133 134 135
MAYOR                : 60 61 74 128
MAYOR_IGUAL          : 75 120
MENOR                : 76
MENOR_IGUAL          : 77 119
MODULO               : 69
MULTIPLICACION       : 66
NEGACION             : 89
NEW                  : 50
NO_IDENTIDAD         : 73
NULO                 : 37
OR                   : 79
PARENTESIS_ABRE      : 20 22 23 24 43 44 45 50 51 52 53 54 56 58 113 127 128 129 132 133 134
PARENTESIS_CIERRA    : 20 22 23 24 43 44 45 50 51 52 53 54 56 58 113 127 128 129 132 133 134
POP                  : 51
POTENCIA             : 68
PRINT                : 20 21
PRIVATE              : 26
PROTECTED            : 28
PUBLIC               : 27
PUNTO                : 
PUSH                 : 52 53
READLINE             : 22
RESTA                : 65
RETURN               : 125 126
SIGNO_DOLAR          : 24 31 32 46 47
STACK                : 50
STATIC               : 29
STDIN                : 23 24
SUMA                 : 64
VAR                  : 30
WHILE                : 129
XOR                  : 80
error                : 

Nonterminals, with rules where they appear

arreglo              : 49
asignacion           : 6 113
asociacion           : 58 59 61
bloque               : 43 44 132 133 134 135
clase                : 3
combinarOp           : 105 106
crecimiento          : 121 122
datos                : 17 36 60 60 61 61 62 63
decl_variable        : 18 33 34 35 38 51 52 53 93 93 94 95 103 116 121 122 127 127 128 128 128 129
declaracion_s        : 15 113
declaracionp         : 113
elementos            : 56 57 63
estructuras_control  : 10
estructuras_datos    : 9 34
for                  : 107
foreach              : 108
funcion              : 11
funcionuso           : 
if_else              : 109
if_else_cuerpo       : 131 134
if_else_fin          : 130 131
if_else_inicio       : 130 131
ingreso              : 8
instrucciones        : 4 5 111 114 115 129
mayor                : 118
menor                : 117
opAritVar            : 
operaciones          : 14 126
operaciones_arit     : 53 87 97
operaciones_bits     : 98
operaciones_logicas  : 96 132 133 134
operad_arit          : 86 87 104 105
operad_logico        : 90 91 93 94 95 129
operand_bits         : 88
paraCalculos         : 104 105 106
parametros           : 44 45 47
pila                 : 48
poppila              : 35 100
programa             : 1 2
pushpila             : 99
retorno              : 112
salida               : 7
salidas_posibles     : 19 20 21 86 86 87 88 88 89 125
sentenciasAnidadas   : 113 115 127 128
valor                : 33 52 129
valorc               : 116
variable_tipo        : 32
variaslineas         : 2 0
while                : 110

Parsing method: LALR

state 0

    (0) S' -> . variaslineas
    (1) variaslineas -> . programa
    (2) variaslineas -> . programa variaslineas
    (3) programa -> . clase
    (4) programa -> . instrucciones
    (5) clase -> . CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    CLASS           shift and go to state 5
    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    variaslineas                   shift and go to state 1
    programa                       shift and go to state 2
    clase                          shift and go to state 3
    instrucciones                  shift and go to state 4
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    decl_variable                  shift and go to state 17
    poppila                        shift and go to state 18
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 1

    (0) S' -> variaslineas .



state 2

    (1) variaslineas -> programa .
    (2) variaslineas -> programa . variaslineas
    (1) variaslineas -> . programa
    (2) variaslineas -> . programa variaslineas
    (3) programa -> . clase
    (4) programa -> . instrucciones
    (5) clase -> . CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    $end            reduce using rule 1 (variaslineas -> programa .)
    CLASS           shift and go to state 5
    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    programa                       shift and go to state 2
    variaslineas                   shift and go to state 61
    clase                          shift and go to state 3
    instrucciones                  shift and go to state 4
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    decl_variable                  shift and go to state 17
    poppila                        shift and go to state 18
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 3

    (3) programa -> clase .

    CLASS           reduce using rule 3 (programa -> clase .)
    COMENTARIO_LINEA reduce using rule 3 (programa -> clase .)
    COMENTARIO_BLOQUE reduce using rule 3 (programa -> clase .)
    BREAK           reduce using rule 3 (programa -> clase .)
    ECHO            reduce using rule 3 (programa -> clase .)
    PRINT           reduce using rule 3 (programa -> clase .)
    READLINE        reduce using rule 3 (programa -> clase .)
    FGETS           reduce using rule 3 (programa -> clase .)
    FSCANF          reduce using rule 3 (programa -> clase .)
    FUNCTION        reduce using rule 3 (programa -> clase .)
    SIGNO_DOLAR     reduce using rule 3 (programa -> clase .)
    NEW             reduce using rule 3 (programa -> clase .)
    ARRAY           reduce using rule 3 (programa -> clase .)
    CORCHETE_ABRE   reduce using rule 3 (programa -> clase .)
    FOR             reduce using rule 3 (programa -> clase .)
    FOREACH         reduce using rule 3 (programa -> clase .)
    WHILE           reduce using rule 3 (programa -> clase .)
    ENTERO          reduce using rule 3 (programa -> clase .)
    FLOTANTE        reduce using rule 3 (programa -> clase .)
    BOOLEANO        reduce using rule 3 (programa -> clase .)
    NEGACION        reduce using rule 3 (programa -> clase .)
    INCREMENTO      reduce using rule 3 (programa -> clase .)
    DECREMENTO      reduce using rule 3 (programa -> clase .)
    CONST           reduce using rule 3 (programa -> clase .)
    PRIVATE         reduce using rule 3 (programa -> clase .)
    PUBLIC          reduce using rule 3 (programa -> clase .)
    PROTECTED       reduce using rule 3 (programa -> clase .)
    STATIC          reduce using rule 3 (programa -> clase .)
    VAR             reduce using rule 3 (programa -> clase .)
    IF              reduce using rule 3 (programa -> clase .)
    CADENA          reduce using rule 3 (programa -> clase .)
    $end            reduce using rule 3 (programa -> clase .)


state 4

    (4) programa -> instrucciones .

    CLASS           reduce using rule 4 (programa -> instrucciones .)
    COMENTARIO_LINEA reduce using rule 4 (programa -> instrucciones .)
    COMENTARIO_BLOQUE reduce using rule 4 (programa -> instrucciones .)
    BREAK           reduce using rule 4 (programa -> instrucciones .)
    ECHO            reduce using rule 4 (programa -> instrucciones .)
    PRINT           reduce using rule 4 (programa -> instrucciones .)
    READLINE        reduce using rule 4 (programa -> instrucciones .)
    FGETS           reduce using rule 4 (programa -> instrucciones .)
    FSCANF          reduce using rule 4 (programa -> instrucciones .)
    FUNCTION        reduce using rule 4 (programa -> instrucciones .)
    SIGNO_DOLAR     reduce using rule 4 (programa -> instrucciones .)
    NEW             reduce using rule 4 (programa -> instrucciones .)
    ARRAY           reduce using rule 4 (programa -> instrucciones .)
    CORCHETE_ABRE   reduce using rule 4 (programa -> instrucciones .)
    FOR             reduce using rule 4 (programa -> instrucciones .)
    FOREACH         reduce using rule 4 (programa -> instrucciones .)
    WHILE           reduce using rule 4 (programa -> instrucciones .)
    ENTERO          reduce using rule 4 (programa -> instrucciones .)
    FLOTANTE        reduce using rule 4 (programa -> instrucciones .)
    BOOLEANO        reduce using rule 4 (programa -> instrucciones .)
    NEGACION        reduce using rule 4 (programa -> instrucciones .)
    INCREMENTO      reduce using rule 4 (programa -> instrucciones .)
    DECREMENTO      reduce using rule 4 (programa -> instrucciones .)
    CONST           reduce using rule 4 (programa -> instrucciones .)
    PRIVATE         reduce using rule 4 (programa -> instrucciones .)
    PUBLIC          reduce using rule 4 (programa -> instrucciones .)
    PROTECTED       reduce using rule 4 (programa -> instrucciones .)
    STATIC          reduce using rule 4 (programa -> instrucciones .)
    VAR             reduce using rule 4 (programa -> instrucciones .)
    IF              reduce using rule 4 (programa -> instrucciones .)
    CADENA          reduce using rule 4 (programa -> instrucciones .)
    $end            reduce using rule 4 (programa -> instrucciones .)


state 5

    (5) clase -> CLASS . IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 62


state 6

    (6) instrucciones -> asignacion .

    CLASS           reduce using rule 6 (instrucciones -> asignacion .)
    COMENTARIO_LINEA reduce using rule 6 (instrucciones -> asignacion .)
    COMENTARIO_BLOQUE reduce using rule 6 (instrucciones -> asignacion .)
    BREAK           reduce using rule 6 (instrucciones -> asignacion .)
    ECHO            reduce using rule 6 (instrucciones -> asignacion .)
    PRINT           reduce using rule 6 (instrucciones -> asignacion .)
    READLINE        reduce using rule 6 (instrucciones -> asignacion .)
    FGETS           reduce using rule 6 (instrucciones -> asignacion .)
    FSCANF          reduce using rule 6 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 6 (instrucciones -> asignacion .)
    SIGNO_DOLAR     reduce using rule 6 (instrucciones -> asignacion .)
    NEW             reduce using rule 6 (instrucciones -> asignacion .)
    ARRAY           reduce using rule 6 (instrucciones -> asignacion .)
    CORCHETE_ABRE   reduce using rule 6 (instrucciones -> asignacion .)
    FOR             reduce using rule 6 (instrucciones -> asignacion .)
    FOREACH         reduce using rule 6 (instrucciones -> asignacion .)
    WHILE           reduce using rule 6 (instrucciones -> asignacion .)
    ENTERO          reduce using rule 6 (instrucciones -> asignacion .)
    FLOTANTE        reduce using rule 6 (instrucciones -> asignacion .)
    BOOLEANO        reduce using rule 6 (instrucciones -> asignacion .)
    NEGACION        reduce using rule 6 (instrucciones -> asignacion .)
    INCREMENTO      reduce using rule 6 (instrucciones -> asignacion .)
    DECREMENTO      reduce using rule 6 (instrucciones -> asignacion .)
    CONST           reduce using rule 6 (instrucciones -> asignacion .)
    PRIVATE         reduce using rule 6 (instrucciones -> asignacion .)
    PUBLIC          reduce using rule 6 (instrucciones -> asignacion .)
    PROTECTED       reduce using rule 6 (instrucciones -> asignacion .)
    STATIC          reduce using rule 6 (instrucciones -> asignacion .)
    VAR             reduce using rule 6 (instrucciones -> asignacion .)
    IF              reduce using rule 6 (instrucciones -> asignacion .)
    CADENA          reduce using rule 6 (instrucciones -> asignacion .)
    $end            reduce using rule 6 (instrucciones -> asignacion .)
    LLAVE_CIERRA    reduce using rule 6 (instrucciones -> asignacion .)


state 7

    (7) instrucciones -> salida .

    CLASS           reduce using rule 7 (instrucciones -> salida .)
    COMENTARIO_LINEA reduce using rule 7 (instrucciones -> salida .)
    COMENTARIO_BLOQUE reduce using rule 7 (instrucciones -> salida .)
    BREAK           reduce using rule 7 (instrucciones -> salida .)
    ECHO            reduce using rule 7 (instrucciones -> salida .)
    PRINT           reduce using rule 7 (instrucciones -> salida .)
    READLINE        reduce using rule 7 (instrucciones -> salida .)
    FGETS           reduce using rule 7 (instrucciones -> salida .)
    FSCANF          reduce using rule 7 (instrucciones -> salida .)
    FUNCTION        reduce using rule 7 (instrucciones -> salida .)
    SIGNO_DOLAR     reduce using rule 7 (instrucciones -> salida .)
    NEW             reduce using rule 7 (instrucciones -> salida .)
    ARRAY           reduce using rule 7 (instrucciones -> salida .)
    CORCHETE_ABRE   reduce using rule 7 (instrucciones -> salida .)
    FOR             reduce using rule 7 (instrucciones -> salida .)
    FOREACH         reduce using rule 7 (instrucciones -> salida .)
    WHILE           reduce using rule 7 (instrucciones -> salida .)
    ENTERO          reduce using rule 7 (instrucciones -> salida .)
    FLOTANTE        reduce using rule 7 (instrucciones -> salida .)
    BOOLEANO        reduce using rule 7 (instrucciones -> salida .)
    NEGACION        reduce using rule 7 (instrucciones -> salida .)
    INCREMENTO      reduce using rule 7 (instrucciones -> salida .)
    DECREMENTO      reduce using rule 7 (instrucciones -> salida .)
    CONST           reduce using rule 7 (instrucciones -> salida .)
    PRIVATE         reduce using rule 7 (instrucciones -> salida .)
    PUBLIC          reduce using rule 7 (instrucciones -> salida .)
    PROTECTED       reduce using rule 7 (instrucciones -> salida .)
    STATIC          reduce using rule 7 (instrucciones -> salida .)
    VAR             reduce using rule 7 (instrucciones -> salida .)
    IF              reduce using rule 7 (instrucciones -> salida .)
    CADENA          reduce using rule 7 (instrucciones -> salida .)
    $end            reduce using rule 7 (instrucciones -> salida .)
    LLAVE_CIERRA    reduce using rule 7 (instrucciones -> salida .)


state 8

    (8) instrucciones -> ingreso .

    CLASS           reduce using rule 8 (instrucciones -> ingreso .)
    COMENTARIO_LINEA reduce using rule 8 (instrucciones -> ingreso .)
    COMENTARIO_BLOQUE reduce using rule 8 (instrucciones -> ingreso .)
    BREAK           reduce using rule 8 (instrucciones -> ingreso .)
    ECHO            reduce using rule 8 (instrucciones -> ingreso .)
    PRINT           reduce using rule 8 (instrucciones -> ingreso .)
    READLINE        reduce using rule 8 (instrucciones -> ingreso .)
    FGETS           reduce using rule 8 (instrucciones -> ingreso .)
    FSCANF          reduce using rule 8 (instrucciones -> ingreso .)
    FUNCTION        reduce using rule 8 (instrucciones -> ingreso .)
    SIGNO_DOLAR     reduce using rule 8 (instrucciones -> ingreso .)
    NEW             reduce using rule 8 (instrucciones -> ingreso .)
    ARRAY           reduce using rule 8 (instrucciones -> ingreso .)
    CORCHETE_ABRE   reduce using rule 8 (instrucciones -> ingreso .)
    FOR             reduce using rule 8 (instrucciones -> ingreso .)
    FOREACH         reduce using rule 8 (instrucciones -> ingreso .)
    WHILE           reduce using rule 8 (instrucciones -> ingreso .)
    ENTERO          reduce using rule 8 (instrucciones -> ingreso .)
    FLOTANTE        reduce using rule 8 (instrucciones -> ingreso .)
    BOOLEANO        reduce using rule 8 (instrucciones -> ingreso .)
    NEGACION        reduce using rule 8 (instrucciones -> ingreso .)
    INCREMENTO      reduce using rule 8 (instrucciones -> ingreso .)
    DECREMENTO      reduce using rule 8 (instrucciones -> ingreso .)
    CONST           reduce using rule 8 (instrucciones -> ingreso .)
    PRIVATE         reduce using rule 8 (instrucciones -> ingreso .)
    PUBLIC          reduce using rule 8 (instrucciones -> ingreso .)
    PROTECTED       reduce using rule 8 (instrucciones -> ingreso .)
    STATIC          reduce using rule 8 (instrucciones -> ingreso .)
    VAR             reduce using rule 8 (instrucciones -> ingreso .)
    IF              reduce using rule 8 (instrucciones -> ingreso .)
    CADENA          reduce using rule 8 (instrucciones -> ingreso .)
    $end            reduce using rule 8 (instrucciones -> ingreso .)
    LLAVE_CIERRA    reduce using rule 8 (instrucciones -> ingreso .)


state 9

    (9) instrucciones -> estructuras_datos .

    CLASS           reduce using rule 9 (instrucciones -> estructuras_datos .)
    COMENTARIO_LINEA reduce using rule 9 (instrucciones -> estructuras_datos .)
    COMENTARIO_BLOQUE reduce using rule 9 (instrucciones -> estructuras_datos .)
    BREAK           reduce using rule 9 (instrucciones -> estructuras_datos .)
    ECHO            reduce using rule 9 (instrucciones -> estructuras_datos .)
    PRINT           reduce using rule 9 (instrucciones -> estructuras_datos .)
    READLINE        reduce using rule 9 (instrucciones -> estructuras_datos .)
    FGETS           reduce using rule 9 (instrucciones -> estructuras_datos .)
    FSCANF          reduce using rule 9 (instrucciones -> estructuras_datos .)
    FUNCTION        reduce using rule 9 (instrucciones -> estructuras_datos .)
    SIGNO_DOLAR     reduce using rule 9 (instrucciones -> estructuras_datos .)
    NEW             reduce using rule 9 (instrucciones -> estructuras_datos .)
    ARRAY           reduce using rule 9 (instrucciones -> estructuras_datos .)
    CORCHETE_ABRE   reduce using rule 9 (instrucciones -> estructuras_datos .)
    FOR             reduce using rule 9 (instrucciones -> estructuras_datos .)
    FOREACH         reduce using rule 9 (instrucciones -> estructuras_datos .)
    WHILE           reduce using rule 9 (instrucciones -> estructuras_datos .)
    ENTERO          reduce using rule 9 (instrucciones -> estructuras_datos .)
    FLOTANTE        reduce using rule 9 (instrucciones -> estructuras_datos .)
    BOOLEANO        reduce using rule 9 (instrucciones -> estructuras_datos .)
    NEGACION        reduce using rule 9 (instrucciones -> estructuras_datos .)
    INCREMENTO      reduce using rule 9 (instrucciones -> estructuras_datos .)
    DECREMENTO      reduce using rule 9 (instrucciones -> estructuras_datos .)
    CONST           reduce using rule 9 (instrucciones -> estructuras_datos .)
    PRIVATE         reduce using rule 9 (instrucciones -> estructuras_datos .)
    PUBLIC          reduce using rule 9 (instrucciones -> estructuras_datos .)
    PROTECTED       reduce using rule 9 (instrucciones -> estructuras_datos .)
    STATIC          reduce using rule 9 (instrucciones -> estructuras_datos .)
    VAR             reduce using rule 9 (instrucciones -> estructuras_datos .)
    IF              reduce using rule 9 (instrucciones -> estructuras_datos .)
    CADENA          reduce using rule 9 (instrucciones -> estructuras_datos .)
    $end            reduce using rule 9 (instrucciones -> estructuras_datos .)
    LLAVE_CIERRA    reduce using rule 9 (instrucciones -> estructuras_datos .)


state 10

    (10) instrucciones -> estructuras_control .

    CLASS           reduce using rule 10 (instrucciones -> estructuras_control .)
    COMENTARIO_LINEA reduce using rule 10 (instrucciones -> estructuras_control .)
    COMENTARIO_BLOQUE reduce using rule 10 (instrucciones -> estructuras_control .)
    BREAK           reduce using rule 10 (instrucciones -> estructuras_control .)
    ECHO            reduce using rule 10 (instrucciones -> estructuras_control .)
    PRINT           reduce using rule 10 (instrucciones -> estructuras_control .)
    READLINE        reduce using rule 10 (instrucciones -> estructuras_control .)
    FGETS           reduce using rule 10 (instrucciones -> estructuras_control .)
    FSCANF          reduce using rule 10 (instrucciones -> estructuras_control .)
    FUNCTION        reduce using rule 10 (instrucciones -> estructuras_control .)
    SIGNO_DOLAR     reduce using rule 10 (instrucciones -> estructuras_control .)
    NEW             reduce using rule 10 (instrucciones -> estructuras_control .)
    ARRAY           reduce using rule 10 (instrucciones -> estructuras_control .)
    CORCHETE_ABRE   reduce using rule 10 (instrucciones -> estructuras_control .)
    FOR             reduce using rule 10 (instrucciones -> estructuras_control .)
    FOREACH         reduce using rule 10 (instrucciones -> estructuras_control .)
    WHILE           reduce using rule 10 (instrucciones -> estructuras_control .)
    ENTERO          reduce using rule 10 (instrucciones -> estructuras_control .)
    FLOTANTE        reduce using rule 10 (instrucciones -> estructuras_control .)
    BOOLEANO        reduce using rule 10 (instrucciones -> estructuras_control .)
    NEGACION        reduce using rule 10 (instrucciones -> estructuras_control .)
    INCREMENTO      reduce using rule 10 (instrucciones -> estructuras_control .)
    DECREMENTO      reduce using rule 10 (instrucciones -> estructuras_control .)
    CONST           reduce using rule 10 (instrucciones -> estructuras_control .)
    PRIVATE         reduce using rule 10 (instrucciones -> estructuras_control .)
    PUBLIC          reduce using rule 10 (instrucciones -> estructuras_control .)
    PROTECTED       reduce using rule 10 (instrucciones -> estructuras_control .)
    STATIC          reduce using rule 10 (instrucciones -> estructuras_control .)
    VAR             reduce using rule 10 (instrucciones -> estructuras_control .)
    IF              reduce using rule 10 (instrucciones -> estructuras_control .)
    CADENA          reduce using rule 10 (instrucciones -> estructuras_control .)
    $end            reduce using rule 10 (instrucciones -> estructuras_control .)
    LLAVE_CIERRA    reduce using rule 10 (instrucciones -> estructuras_control .)


state 11

    (11) instrucciones -> funcion .

    CLASS           reduce using rule 11 (instrucciones -> funcion .)
    COMENTARIO_LINEA reduce using rule 11 (instrucciones -> funcion .)
    COMENTARIO_BLOQUE reduce using rule 11 (instrucciones -> funcion .)
    BREAK           reduce using rule 11 (instrucciones -> funcion .)
    ECHO            reduce using rule 11 (instrucciones -> funcion .)
    PRINT           reduce using rule 11 (instrucciones -> funcion .)
    READLINE        reduce using rule 11 (instrucciones -> funcion .)
    FGETS           reduce using rule 11 (instrucciones -> funcion .)
    FSCANF          reduce using rule 11 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 11 (instrucciones -> funcion .)
    SIGNO_DOLAR     reduce using rule 11 (instrucciones -> funcion .)
    NEW             reduce using rule 11 (instrucciones -> funcion .)
    ARRAY           reduce using rule 11 (instrucciones -> funcion .)
    CORCHETE_ABRE   reduce using rule 11 (instrucciones -> funcion .)
    FOR             reduce using rule 11 (instrucciones -> funcion .)
    FOREACH         reduce using rule 11 (instrucciones -> funcion .)
    WHILE           reduce using rule 11 (instrucciones -> funcion .)
    ENTERO          reduce using rule 11 (instrucciones -> funcion .)
    FLOTANTE        reduce using rule 11 (instrucciones -> funcion .)
    BOOLEANO        reduce using rule 11 (instrucciones -> funcion .)
    NEGACION        reduce using rule 11 (instrucciones -> funcion .)
    INCREMENTO      reduce using rule 11 (instrucciones -> funcion .)
    DECREMENTO      reduce using rule 11 (instrucciones -> funcion .)
    CONST           reduce using rule 11 (instrucciones -> funcion .)
    PRIVATE         reduce using rule 11 (instrucciones -> funcion .)
    PUBLIC          reduce using rule 11 (instrucciones -> funcion .)
    PROTECTED       reduce using rule 11 (instrucciones -> funcion .)
    STATIC          reduce using rule 11 (instrucciones -> funcion .)
    VAR             reduce using rule 11 (instrucciones -> funcion .)
    IF              reduce using rule 11 (instrucciones -> funcion .)
    CADENA          reduce using rule 11 (instrucciones -> funcion .)
    $end            reduce using rule 11 (instrucciones -> funcion .)
    LLAVE_CIERRA    reduce using rule 11 (instrucciones -> funcion .)


state 12

    (12) instrucciones -> COMENTARIO_LINEA .

    CLASS           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    COMENTARIO_LINEA reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    BREAK           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    ECHO            reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PRINT           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    READLINE        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FGETS           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FSCANF          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FUNCTION        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    SIGNO_DOLAR     reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    NEW             reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    ARRAY           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    CORCHETE_ABRE   reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FOR             reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FOREACH         reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    WHILE           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    ENTERO          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FLOTANTE        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    BOOLEANO        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    NEGACION        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    INCREMENTO      reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    DECREMENTO      reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    CONST           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PRIVATE         reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PUBLIC          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PROTECTED       reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    STATIC          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    VAR             reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    IF              reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    CADENA          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    $end            reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    LLAVE_CIERRA    reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)


state 13

    (13) instrucciones -> COMENTARIO_BLOQUE .

    CLASS           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    COMENTARIO_LINEA reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    COMENTARIO_BLOQUE reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    BREAK           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    ECHO            reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PRINT           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    READLINE        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FGETS           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FSCANF          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FUNCTION        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    SIGNO_DOLAR     reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    NEW             reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    ARRAY           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    CORCHETE_ABRE   reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FOR             reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FOREACH         reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    WHILE           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    ENTERO          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FLOTANTE        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    BOOLEANO        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    NEGACION        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    INCREMENTO      reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    DECREMENTO      reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    CONST           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PRIVATE         reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PUBLIC          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PROTECTED       reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    STATIC          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    VAR             reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    IF              reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    CADENA          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    $end            reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    LLAVE_CIERRA    reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)


state 14

    (14) instrucciones -> operaciones . FIN_LINEA

    FIN_LINEA       shift and go to state 63


state 15

    (15) instrucciones -> declaracion_s . FIN_LINEA

    FIN_LINEA       shift and go to state 64


state 16

    (16) instrucciones -> BREAK . FIN_LINEA

    FIN_LINEA       shift and go to state 65


state 17

    (33) asignacion -> decl_variable . IGUAL valor FIN_LINEA
    (34) asignacion -> decl_variable . IGUAL estructuras_datos
    (35) asignacion -> decl_variable . IGUAL poppila FIN_LINEA
    (121) declaracion_s -> decl_variable . crecimiento
    (93) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (94) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (95) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (52) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (18) salidas_posibles -> decl_variable .
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (70) operad_logico -> . IGUALDAD
    (71) operad_logico -> . IDENTIDAD
    (72) operad_logico -> . DIFERENTE
    (73) operad_logico -> . NO_IDENTIDAD
    (74) operad_logico -> . MAYOR
    (75) operad_logico -> . MAYOR_IGUAL
    (76) operad_logico -> . MENOR
    (77) operad_logico -> . MENOR_IGUAL
    (78) operad_logico -> . AND
    (79) operad_logico -> . OR
    (80) operad_logico -> . XOR

    IGUAL           shift and go to state 66
    LAMBDA          shift and go to state 69
    SUMA            reduce using rule 18 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 18 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 18 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 18 (salidas_posibles -> decl_variable .)
    CONJUNCION      reduce using rule 18 (salidas_posibles -> decl_variable .)
    DISYUNCION      reduce using rule 18 (salidas_posibles -> decl_variable .)
    DISYUNCION_EXC  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_IZQ reduce using rule 18 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_DER reduce using rule 18 (salidas_posibles -> decl_variable .)
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    IGUALDAD        shift and go to state 70
    IDENTIDAD       shift and go to state 71
    DIFERENTE       shift and go to state 72
    NO_IDENTIDAD    shift and go to state 73
    MAYOR           shift and go to state 74
    MAYOR_IGUAL     shift and go to state 75
    MENOR           shift and go to state 76
    MENOR_IGUAL     shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80

    crecimiento                    shift and go to state 67
    operad_logico                  shift and go to state 68

state 18

    (100) operaciones -> poppila .

    FIN_LINEA       reduce using rule 100 (operaciones -> poppila .)


state 19

    (19) salida -> ECHO . salidas_posibles FIN_LINEA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 81
    datos                          shift and go to state 60
    decl_variable                  shift and go to state 82
    variable_tipo                  shift and go to state 39

state 20

    (86) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (87) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (88) operaciones_bits -> salidas_posibles . operand_bits salidas_posibles
    (64) operad_arit -> . SUMA
    (65) operad_arit -> . RESTA
    (66) operad_arit -> . MULTIPLICACION
    (67) operad_arit -> . DIVISION
    (68) operad_arit -> . POTENCIA
    (69) operad_arit -> . MODULO
    (81) operand_bits -> . CONJUNCION
    (82) operand_bits -> . DISYUNCION
    (83) operand_bits -> . DISYUNCION_EXC
    (84) operand_bits -> . DESPLAZAR_BITS_IZQ
    (85) operand_bits -> . DESPLAZAR_BITS_DER

    SUMA            shift and go to state 88
    RESTA           shift and go to state 89
    MULTIPLICACION  shift and go to state 90
    DIVISION        shift and go to state 91
    POTENCIA        shift and go to state 92
    MODULO          shift and go to state 93
    CONJUNCION      shift and go to state 94
    DISYUNCION      shift and go to state 95
    DISYUNCION_EXC  shift and go to state 96
    DESPLAZAR_BITS_IZQ shift and go to state 97
    DESPLAZAR_BITS_DER shift and go to state 98

    operad_arit                    shift and go to state 86
    operand_bits                   shift and go to state 87

state 21

    (20) salida -> PRINT . PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> PRINT . salidas_posibles FIN_LINEA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    PARENTESIS_ABRE shift and go to state 99
    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 100
    datos                          shift and go to state 60
    decl_variable                  shift and go to state 82
    variable_tipo                  shift and go to state 39

state 22

    (22) ingreso -> READLINE . PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 101


state 23

    (41) datos -> CADENA .

    SUMA            reduce using rule 41 (datos -> CADENA .)
    RESTA           reduce using rule 41 (datos -> CADENA .)
    MULTIPLICACION  reduce using rule 41 (datos -> CADENA .)
    DIVISION        reduce using rule 41 (datos -> CADENA .)
    POTENCIA        reduce using rule 41 (datos -> CADENA .)
    MODULO          reduce using rule 41 (datos -> CADENA .)
    CONJUNCION      reduce using rule 41 (datos -> CADENA .)
    DISYUNCION      reduce using rule 41 (datos -> CADENA .)
    DISYUNCION_EXC  reduce using rule 41 (datos -> CADENA .)
    DESPLAZAR_BITS_IZQ reduce using rule 41 (datos -> CADENA .)
    DESPLAZAR_BITS_DER reduce using rule 41 (datos -> CADENA .)
    FIN_LINEA       reduce using rule 41 (datos -> CADENA .)
    COMA            reduce using rule 41 (datos -> CADENA .)
    IGUAL           reduce using rule 41 (datos -> CADENA .)
    CORCHETE_CIERRA reduce using rule 41 (datos -> CADENA .)
    PARENTESIS_CIERRA reduce using rule 41 (datos -> CADENA .)


state 24

    (23) ingreso -> FGETS . PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 102


state 25

    (24) ingreso -> FSCANF . PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 103


state 26

    (31) decl_variable -> SIGNO_DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 104


state 27

    (48) estructuras_datos -> pila . FIN_LINEA

    FIN_LINEA       shift and go to state 105


state 28

    (49) estructuras_datos -> arreglo . FIN_LINEA

    FIN_LINEA       shift and go to state 106


state 29

    (107) estructuras_control -> for .

    CLASS           reduce using rule 107 (estructuras_control -> for .)
    COMENTARIO_LINEA reduce using rule 107 (estructuras_control -> for .)
    COMENTARIO_BLOQUE reduce using rule 107 (estructuras_control -> for .)
    BREAK           reduce using rule 107 (estructuras_control -> for .)
    ECHO            reduce using rule 107 (estructuras_control -> for .)
    PRINT           reduce using rule 107 (estructuras_control -> for .)
    READLINE        reduce using rule 107 (estructuras_control -> for .)
    FGETS           reduce using rule 107 (estructuras_control -> for .)
    FSCANF          reduce using rule 107 (estructuras_control -> for .)
    FUNCTION        reduce using rule 107 (estructuras_control -> for .)
    SIGNO_DOLAR     reduce using rule 107 (estructuras_control -> for .)
    NEW             reduce using rule 107 (estructuras_control -> for .)
    ARRAY           reduce using rule 107 (estructuras_control -> for .)
    CORCHETE_ABRE   reduce using rule 107 (estructuras_control -> for .)
    FOR             reduce using rule 107 (estructuras_control -> for .)
    FOREACH         reduce using rule 107 (estructuras_control -> for .)
    WHILE           reduce using rule 107 (estructuras_control -> for .)
    ENTERO          reduce using rule 107 (estructuras_control -> for .)
    FLOTANTE        reduce using rule 107 (estructuras_control -> for .)
    BOOLEANO        reduce using rule 107 (estructuras_control -> for .)
    NEGACION        reduce using rule 107 (estructuras_control -> for .)
    INCREMENTO      reduce using rule 107 (estructuras_control -> for .)
    DECREMENTO      reduce using rule 107 (estructuras_control -> for .)
    CONST           reduce using rule 107 (estructuras_control -> for .)
    PRIVATE         reduce using rule 107 (estructuras_control -> for .)
    PUBLIC          reduce using rule 107 (estructuras_control -> for .)
    PROTECTED       reduce using rule 107 (estructuras_control -> for .)
    STATIC          reduce using rule 107 (estructuras_control -> for .)
    VAR             reduce using rule 107 (estructuras_control -> for .)
    IF              reduce using rule 107 (estructuras_control -> for .)
    CADENA          reduce using rule 107 (estructuras_control -> for .)
    $end            reduce using rule 107 (estructuras_control -> for .)
    LLAVE_CIERRA    reduce using rule 107 (estructuras_control -> for .)


state 30

    (108) estructuras_control -> foreach .

    CLASS           reduce using rule 108 (estructuras_control -> foreach .)
    COMENTARIO_LINEA reduce using rule 108 (estructuras_control -> foreach .)
    COMENTARIO_BLOQUE reduce using rule 108 (estructuras_control -> foreach .)
    BREAK           reduce using rule 108 (estructuras_control -> foreach .)
    ECHO            reduce using rule 108 (estructuras_control -> foreach .)
    PRINT           reduce using rule 108 (estructuras_control -> foreach .)
    READLINE        reduce using rule 108 (estructuras_control -> foreach .)
    FGETS           reduce using rule 108 (estructuras_control -> foreach .)
    FSCANF          reduce using rule 108 (estructuras_control -> foreach .)
    FUNCTION        reduce using rule 108 (estructuras_control -> foreach .)
    SIGNO_DOLAR     reduce using rule 108 (estructuras_control -> foreach .)
    NEW             reduce using rule 108 (estructuras_control -> foreach .)
    ARRAY           reduce using rule 108 (estructuras_control -> foreach .)
    CORCHETE_ABRE   reduce using rule 108 (estructuras_control -> foreach .)
    FOR             reduce using rule 108 (estructuras_control -> foreach .)
    FOREACH         reduce using rule 108 (estructuras_control -> foreach .)
    WHILE           reduce using rule 108 (estructuras_control -> foreach .)
    ENTERO          reduce using rule 108 (estructuras_control -> foreach .)
    FLOTANTE        reduce using rule 108 (estructuras_control -> foreach .)
    BOOLEANO        reduce using rule 108 (estructuras_control -> foreach .)
    NEGACION        reduce using rule 108 (estructuras_control -> foreach .)
    INCREMENTO      reduce using rule 108 (estructuras_control -> foreach .)
    DECREMENTO      reduce using rule 108 (estructuras_control -> foreach .)
    CONST           reduce using rule 108 (estructuras_control -> foreach .)
    PRIVATE         reduce using rule 108 (estructuras_control -> foreach .)
    PUBLIC          reduce using rule 108 (estructuras_control -> foreach .)
    PROTECTED       reduce using rule 108 (estructuras_control -> foreach .)
    STATIC          reduce using rule 108 (estructuras_control -> foreach .)
    VAR             reduce using rule 108 (estructuras_control -> foreach .)
    IF              reduce using rule 108 (estructuras_control -> foreach .)
    CADENA          reduce using rule 108 (estructuras_control -> foreach .)
    $end            reduce using rule 108 (estructuras_control -> foreach .)
    LLAVE_CIERRA    reduce using rule 108 (estructuras_control -> foreach .)


state 31

    (109) estructuras_control -> if_else .

    CLASS           reduce using rule 109 (estructuras_control -> if_else .)
    COMENTARIO_LINEA reduce using rule 109 (estructuras_control -> if_else .)
    COMENTARIO_BLOQUE reduce using rule 109 (estructuras_control -> if_else .)
    BREAK           reduce using rule 109 (estructuras_control -> if_else .)
    ECHO            reduce using rule 109 (estructuras_control -> if_else .)
    PRINT           reduce using rule 109 (estructuras_control -> if_else .)
    READLINE        reduce using rule 109 (estructuras_control -> if_else .)
    FGETS           reduce using rule 109 (estructuras_control -> if_else .)
    FSCANF          reduce using rule 109 (estructuras_control -> if_else .)
    FUNCTION        reduce using rule 109 (estructuras_control -> if_else .)
    SIGNO_DOLAR     reduce using rule 109 (estructuras_control -> if_else .)
    NEW             reduce using rule 109 (estructuras_control -> if_else .)
    ARRAY           reduce using rule 109 (estructuras_control -> if_else .)
    CORCHETE_ABRE   reduce using rule 109 (estructuras_control -> if_else .)
    FOR             reduce using rule 109 (estructuras_control -> if_else .)
    FOREACH         reduce using rule 109 (estructuras_control -> if_else .)
    WHILE           reduce using rule 109 (estructuras_control -> if_else .)
    ENTERO          reduce using rule 109 (estructuras_control -> if_else .)
    FLOTANTE        reduce using rule 109 (estructuras_control -> if_else .)
    BOOLEANO        reduce using rule 109 (estructuras_control -> if_else .)
    NEGACION        reduce using rule 109 (estructuras_control -> if_else .)
    INCREMENTO      reduce using rule 109 (estructuras_control -> if_else .)
    DECREMENTO      reduce using rule 109 (estructuras_control -> if_else .)
    CONST           reduce using rule 109 (estructuras_control -> if_else .)
    PRIVATE         reduce using rule 109 (estructuras_control -> if_else .)
    PUBLIC          reduce using rule 109 (estructuras_control -> if_else .)
    PROTECTED       reduce using rule 109 (estructuras_control -> if_else .)
    STATIC          reduce using rule 109 (estructuras_control -> if_else .)
    VAR             reduce using rule 109 (estructuras_control -> if_else .)
    IF              reduce using rule 109 (estructuras_control -> if_else .)
    CADENA          reduce using rule 109 (estructuras_control -> if_else .)
    $end            reduce using rule 109 (estructuras_control -> if_else .)
    LLAVE_CIERRA    reduce using rule 109 (estructuras_control -> if_else .)


state 32

    (110) estructuras_control -> while .

    CLASS           reduce using rule 110 (estructuras_control -> while .)
    COMENTARIO_LINEA reduce using rule 110 (estructuras_control -> while .)
    COMENTARIO_BLOQUE reduce using rule 110 (estructuras_control -> while .)
    BREAK           reduce using rule 110 (estructuras_control -> while .)
    ECHO            reduce using rule 110 (estructuras_control -> while .)
    PRINT           reduce using rule 110 (estructuras_control -> while .)
    READLINE        reduce using rule 110 (estructuras_control -> while .)
    FGETS           reduce using rule 110 (estructuras_control -> while .)
    FSCANF          reduce using rule 110 (estructuras_control -> while .)
    FUNCTION        reduce using rule 110 (estructuras_control -> while .)
    SIGNO_DOLAR     reduce using rule 110 (estructuras_control -> while .)
    NEW             reduce using rule 110 (estructuras_control -> while .)
    ARRAY           reduce using rule 110 (estructuras_control -> while .)
    CORCHETE_ABRE   reduce using rule 110 (estructuras_control -> while .)
    FOR             reduce using rule 110 (estructuras_control -> while .)
    FOREACH         reduce using rule 110 (estructuras_control -> while .)
    WHILE           reduce using rule 110 (estructuras_control -> while .)
    ENTERO          reduce using rule 110 (estructuras_control -> while .)
    FLOTANTE        reduce using rule 110 (estructuras_control -> while .)
    BOOLEANO        reduce using rule 110 (estructuras_control -> while .)
    NEGACION        reduce using rule 110 (estructuras_control -> while .)
    INCREMENTO      reduce using rule 110 (estructuras_control -> while .)
    DECREMENTO      reduce using rule 110 (estructuras_control -> while .)
    CONST           reduce using rule 110 (estructuras_control -> while .)
    PRIVATE         reduce using rule 110 (estructuras_control -> while .)
    PUBLIC          reduce using rule 110 (estructuras_control -> while .)
    PROTECTED       reduce using rule 110 (estructuras_control -> while .)
    STATIC          reduce using rule 110 (estructuras_control -> while .)
    VAR             reduce using rule 110 (estructuras_control -> while .)
    IF              reduce using rule 110 (estructuras_control -> while .)
    CADENA          reduce using rule 110 (estructuras_control -> while .)
    $end            reduce using rule 110 (estructuras_control -> while .)
    LLAVE_CIERRA    reduce using rule 110 (estructuras_control -> while .)


state 33

    (43) funcion -> FUNCTION . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> FUNCTION . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 107


state 34

    (96) operaciones -> operaciones_logicas .

    FIN_LINEA       reduce using rule 96 (operaciones -> operaciones_logicas .)


state 35

    (97) operaciones -> operaciones_arit .

    FIN_LINEA       reduce using rule 97 (operaciones -> operaciones_arit .)


state 36

    (98) operaciones -> operaciones_bits .

    FIN_LINEA       reduce using rule 98 (operaciones -> operaciones_bits .)


state 37

    (99) operaciones -> pushpila .

    FIN_LINEA       reduce using rule 99 (operaciones -> pushpila .)


state 38

    (122) declaracion_s -> crecimiento . decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 108
    variable_tipo                  shift and go to state 39

state 39

    (32) decl_variable -> variable_tipo . SIGNO_DOLAR IDENTIFICADOR

    SIGNO_DOLAR     shift and go to state 109


state 40

    (50) pila -> NEW . STACK PARENTESIS_ABRE PARENTESIS_CIERRA

    STACK           shift and go to state 110


state 41

    (54) arreglo -> ARRAY . PARENTESIS_ABRE PARENTESIS_CIERRA
    (56) arreglo -> ARRAY . PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (58) arreglo -> ARRAY . PARENTESIS_ABRE asociacion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 111


state 42

    (55) arreglo -> CORCHETE_ABRE . CORCHETE_CIERRA
    (57) arreglo -> CORCHETE_ABRE . elementos CORCHETE_CIERRA
    (59) arreglo -> CORCHETE_ABRE . asociacion CORCHETE_CIERRA
    (62) elementos -> . datos
    (63) elementos -> . datos COMA elementos
    (60) asociacion -> . datos IGUAL MAYOR datos
    (61) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    CORCHETE_CIERRA shift and go to state 112
    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85

    elementos                      shift and go to state 113
    asociacion                     shift and go to state 114
    datos                          shift and go to state 115

state 43

    (113) for -> FOR . PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 116


state 44

    (127) foreach -> FOREACH . PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> FOREACH . PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 117


state 45

    (130) if_else -> if_else_inicio . if_else_fin
    (131) if_else -> if_else_inicio . if_else_cuerpo if_else_fin
    (135) if_else_fin -> . ELSE LLAVE_ABRE bloque LLAVE_CIERRA
    (133) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (134) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    ELSE            shift and go to state 120
    ELSEIF          shift and go to state 121

    if_else_fin                    shift and go to state 118
    if_else_cuerpo                 shift and go to state 119

state 46

    (129) while -> WHILE . PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 122


state 47

    (90) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (39) datos -> ENTERO .
    (70) operad_logico -> . IGUALDAD
    (71) operad_logico -> . IDENTIDAD
    (72) operad_logico -> . DIFERENTE
    (73) operad_logico -> . NO_IDENTIDAD
    (74) operad_logico -> . MAYOR
    (75) operad_logico -> . MAYOR_IGUAL
    (76) operad_logico -> . MENOR
    (77) operad_logico -> . MENOR_IGUAL
    (78) operad_logico -> . AND
    (79) operad_logico -> . OR
    (80) operad_logico -> . XOR

    SUMA            reduce using rule 39 (datos -> ENTERO .)
    RESTA           reduce using rule 39 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 39 (datos -> ENTERO .)
    DIVISION        reduce using rule 39 (datos -> ENTERO .)
    POTENCIA        reduce using rule 39 (datos -> ENTERO .)
    MODULO          reduce using rule 39 (datos -> ENTERO .)
    CONJUNCION      reduce using rule 39 (datos -> ENTERO .)
    DISYUNCION      reduce using rule 39 (datos -> ENTERO .)
    DISYUNCION_EXC  reduce using rule 39 (datos -> ENTERO .)
    DESPLAZAR_BITS_IZQ reduce using rule 39 (datos -> ENTERO .)
    DESPLAZAR_BITS_DER reduce using rule 39 (datos -> ENTERO .)
    IGUALDAD        shift and go to state 70
    IDENTIDAD       shift and go to state 71
    DIFERENTE       shift and go to state 72
    NO_IDENTIDAD    shift and go to state 73
    MAYOR           shift and go to state 74
    MAYOR_IGUAL     shift and go to state 75
    MENOR           shift and go to state 76
    MENOR_IGUAL     shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80

    operad_logico                  shift and go to state 123

state 48

    (91) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (40) datos -> FLOTANTE .
    (70) operad_logico -> . IGUALDAD
    (71) operad_logico -> . IDENTIDAD
    (72) operad_logico -> . DIFERENTE
    (73) operad_logico -> . NO_IDENTIDAD
    (74) operad_logico -> . MAYOR
    (75) operad_logico -> . MAYOR_IGUAL
    (76) operad_logico -> . MENOR
    (77) operad_logico -> . MENOR_IGUAL
    (78) operad_logico -> . AND
    (79) operad_logico -> . OR
    (80) operad_logico -> . XOR

    SUMA            reduce using rule 40 (datos -> FLOTANTE .)
    RESTA           reduce using rule 40 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 40 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 40 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 40 (datos -> FLOTANTE .)
    MODULO          reduce using rule 40 (datos -> FLOTANTE .)
    CONJUNCION      reduce using rule 40 (datos -> FLOTANTE .)
    DISYUNCION      reduce using rule 40 (datos -> FLOTANTE .)
    DISYUNCION_EXC  reduce using rule 40 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_IZQ reduce using rule 40 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_DER reduce using rule 40 (datos -> FLOTANTE .)
    IGUALDAD        shift and go to state 70
    IDENTIDAD       shift and go to state 71
    DIFERENTE       shift and go to state 72
    NO_IDENTIDAD    shift and go to state 73
    MAYOR           shift and go to state 74
    MAYOR_IGUAL     shift and go to state 75
    MENOR           shift and go to state 76
    MENOR_IGUAL     shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80

    operad_logico                  shift and go to state 124

state 49

    (92) operaciones_logicas -> BOOLEANO .
    (42) datos -> BOOLEANO .

    FIN_LINEA       reduce using rule 92 (operaciones_logicas -> BOOLEANO .)
    SUMA            reduce using rule 42 (datos -> BOOLEANO .)
    RESTA           reduce using rule 42 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 42 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 42 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 42 (datos -> BOOLEANO .)
    MODULO          reduce using rule 42 (datos -> BOOLEANO .)
    CONJUNCION      reduce using rule 42 (datos -> BOOLEANO .)
    DISYUNCION      reduce using rule 42 (datos -> BOOLEANO .)
    DISYUNCION_EXC  reduce using rule 42 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_IZQ reduce using rule 42 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_DER reduce using rule 42 (datos -> BOOLEANO .)


state 50

    (89) operaciones_bits -> NEGACION . salidas_posibles
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 125
    datos                          shift and go to state 60
    decl_variable                  shift and go to state 82
    variable_tipo                  shift and go to state 39

state 51

    (123) crecimiento -> INCREMENTO .

    SIGNO_DOLAR     reduce using rule 123 (crecimiento -> INCREMENTO .)
    CONST           reduce using rule 123 (crecimiento -> INCREMENTO .)
    PRIVATE         reduce using rule 123 (crecimiento -> INCREMENTO .)
    PUBLIC          reduce using rule 123 (crecimiento -> INCREMENTO .)
    PROTECTED       reduce using rule 123 (crecimiento -> INCREMENTO .)
    STATIC          reduce using rule 123 (crecimiento -> INCREMENTO .)
    VAR             reduce using rule 123 (crecimiento -> INCREMENTO .)
    FIN_LINEA       reduce using rule 123 (crecimiento -> INCREMENTO .)
    PARENTESIS_CIERRA reduce using rule 123 (crecimiento -> INCREMENTO .)


state 52

    (124) crecimiento -> DECREMENTO .

    SIGNO_DOLAR     reduce using rule 124 (crecimiento -> DECREMENTO .)
    CONST           reduce using rule 124 (crecimiento -> DECREMENTO .)
    PRIVATE         reduce using rule 124 (crecimiento -> DECREMENTO .)
    PUBLIC          reduce using rule 124 (crecimiento -> DECREMENTO .)
    PROTECTED       reduce using rule 124 (crecimiento -> DECREMENTO .)
    STATIC          reduce using rule 124 (crecimiento -> DECREMENTO .)
    VAR             reduce using rule 124 (crecimiento -> DECREMENTO .)
    FIN_LINEA       reduce using rule 124 (crecimiento -> DECREMENTO .)
    PARENTESIS_CIERRA reduce using rule 124 (crecimiento -> DECREMENTO .)


state 53

    (25) variable_tipo -> CONST .

    SIGNO_DOLAR     reduce using rule 25 (variable_tipo -> CONST .)


state 54

    (26) variable_tipo -> PRIVATE .

    SIGNO_DOLAR     reduce using rule 26 (variable_tipo -> PRIVATE .)


state 55

    (27) variable_tipo -> PUBLIC .

    SIGNO_DOLAR     reduce using rule 27 (variable_tipo -> PUBLIC .)


state 56

    (28) variable_tipo -> PROTECTED .

    SIGNO_DOLAR     reduce using rule 28 (variable_tipo -> PROTECTED .)


state 57

    (29) variable_tipo -> STATIC .

    SIGNO_DOLAR     reduce using rule 29 (variable_tipo -> STATIC .)


state 58

    (30) variable_tipo -> VAR .

    SIGNO_DOLAR     reduce using rule 30 (variable_tipo -> VAR .)


state 59

    (132) if_else_inicio -> IF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 126


state 60

    (17) salidas_posibles -> datos .

    SUMA            reduce using rule 17 (salidas_posibles -> datos .)
    RESTA           reduce using rule 17 (salidas_posibles -> datos .)
    MULTIPLICACION  reduce using rule 17 (salidas_posibles -> datos .)
    DIVISION        reduce using rule 17 (salidas_posibles -> datos .)
    POTENCIA        reduce using rule 17 (salidas_posibles -> datos .)
    MODULO          reduce using rule 17 (salidas_posibles -> datos .)
    CONJUNCION      reduce using rule 17 (salidas_posibles -> datos .)
    DISYUNCION      reduce using rule 17 (salidas_posibles -> datos .)
    DISYUNCION_EXC  reduce using rule 17 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_IZQ reduce using rule 17 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_DER reduce using rule 17 (salidas_posibles -> datos .)
    FIN_LINEA       reduce using rule 17 (salidas_posibles -> datos .)
    PARENTESIS_CIERRA reduce using rule 17 (salidas_posibles -> datos .)


state 61

    (2) variaslineas -> programa variaslineas .

    $end            reduce using rule 2 (variaslineas -> programa variaslineas .)


state 62

    (5) clase -> CLASS IDENTIFICADOR . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 127


state 63

    (14) instrucciones -> operaciones FIN_LINEA .

    CLASS           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    BREAK           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    ECHO            reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PRINT           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    READLINE        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FGETS           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FSCANF          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FUNCTION        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    NEW             reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    ARRAY           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FOR             reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FOREACH         reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    WHILE           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    ENTERO          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FLOTANTE        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    BOOLEANO        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    NEGACION        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    INCREMENTO      reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    DECREMENTO      reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    CONST           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PRIVATE         reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PUBLIC          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PROTECTED       reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    STATIC          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    VAR             reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    IF              reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    CADENA          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    $end            reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)


state 64

    (15) instrucciones -> declaracion_s FIN_LINEA .

    CLASS           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    BREAK           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    ECHO            reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PRINT           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    READLINE        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FGETS           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FSCANF          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FUNCTION        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    NEW             reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    ARRAY           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FOR             reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FOREACH         reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    WHILE           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    ENTERO          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FLOTANTE        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    BOOLEANO        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    NEGACION        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    INCREMENTO      reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    DECREMENTO      reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    CONST           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PRIVATE         reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PUBLIC          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PROTECTED       reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    STATIC          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    VAR             reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    IF              reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    CADENA          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    $end            reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)


state 65

    (16) instrucciones -> BREAK FIN_LINEA .

    CLASS           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    BREAK           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    ECHO            reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PRINT           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    READLINE        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FGETS           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FSCANF          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FUNCTION        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    NEW             reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    ARRAY           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FOR             reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FOREACH         reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    WHILE           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    ENTERO          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FLOTANTE        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    BOOLEANO        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    NEGACION        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    INCREMENTO      reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    DECREMENTO      reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    CONST           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PRIVATE         reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PUBLIC          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PROTECTED       reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    STATIC          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    VAR             reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    IF              reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    CADENA          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    $end            reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)


state 66

    (33) asignacion -> decl_variable IGUAL . valor FIN_LINEA
    (34) asignacion -> decl_variable IGUAL . estructuras_datos
    (35) asignacion -> decl_variable IGUAL . poppila FIN_LINEA
    (36) valor -> . datos
    (37) valor -> . NULO
    (38) valor -> . decl_variable
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    NULO            shift and go to state 133
    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 128
    valor                          shift and go to state 129
    estructuras_datos              shift and go to state 130
    poppila                        shift and go to state 131
    datos                          shift and go to state 132
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    variable_tipo                  shift and go to state 39

state 67

    (121) declaracion_s -> decl_variable crecimiento .

    FIN_LINEA       reduce using rule 121 (declaracion_s -> decl_variable crecimiento .)
    PARENTESIS_CIERRA reduce using rule 121 (declaracion_s -> decl_variable crecimiento .)


state 68

    (93) operaciones_logicas -> decl_variable operad_logico . decl_variable
    (94) operaciones_logicas -> decl_variable operad_logico . ENTERO
    (95) operaciones_logicas -> decl_variable operad_logico . FLOTANTE
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 134
    variable_tipo                  shift and go to state 39

state 69

    (52) pushpila -> decl_variable LAMBDA . PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> decl_variable LAMBDA . PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> decl_variable LAMBDA . POP PARENTESIS_ABRE PARENTESIS_CIERRA

    PUSH            shift and go to state 137
    POP             shift and go to state 138


state 70

    (70) operad_logico -> IGUALDAD .

    ENTERO          reduce using rule 70 (operad_logico -> IGUALDAD .)
    FLOTANTE        reduce using rule 70 (operad_logico -> IGUALDAD .)
    SIGNO_DOLAR     reduce using rule 70 (operad_logico -> IGUALDAD .)
    CONST           reduce using rule 70 (operad_logico -> IGUALDAD .)
    PRIVATE         reduce using rule 70 (operad_logico -> IGUALDAD .)
    PUBLIC          reduce using rule 70 (operad_logico -> IGUALDAD .)
    PROTECTED       reduce using rule 70 (operad_logico -> IGUALDAD .)
    STATIC          reduce using rule 70 (operad_logico -> IGUALDAD .)
    VAR             reduce using rule 70 (operad_logico -> IGUALDAD .)
    NULO            reduce using rule 70 (operad_logico -> IGUALDAD .)
    CADENA          reduce using rule 70 (operad_logico -> IGUALDAD .)
    BOOLEANO        reduce using rule 70 (operad_logico -> IGUALDAD .)


state 71

    (71) operad_logico -> IDENTIDAD .

    ENTERO          reduce using rule 71 (operad_logico -> IDENTIDAD .)
    FLOTANTE        reduce using rule 71 (operad_logico -> IDENTIDAD .)
    SIGNO_DOLAR     reduce using rule 71 (operad_logico -> IDENTIDAD .)
    CONST           reduce using rule 71 (operad_logico -> IDENTIDAD .)
    PRIVATE         reduce using rule 71 (operad_logico -> IDENTIDAD .)
    PUBLIC          reduce using rule 71 (operad_logico -> IDENTIDAD .)
    PROTECTED       reduce using rule 71 (operad_logico -> IDENTIDAD .)
    STATIC          reduce using rule 71 (operad_logico -> IDENTIDAD .)
    VAR             reduce using rule 71 (operad_logico -> IDENTIDAD .)
    NULO            reduce using rule 71 (operad_logico -> IDENTIDAD .)
    CADENA          reduce using rule 71 (operad_logico -> IDENTIDAD .)
    BOOLEANO        reduce using rule 71 (operad_logico -> IDENTIDAD .)


state 72

    (72) operad_logico -> DIFERENTE .

    ENTERO          reduce using rule 72 (operad_logico -> DIFERENTE .)
    FLOTANTE        reduce using rule 72 (operad_logico -> DIFERENTE .)
    SIGNO_DOLAR     reduce using rule 72 (operad_logico -> DIFERENTE .)
    CONST           reduce using rule 72 (operad_logico -> DIFERENTE .)
    PRIVATE         reduce using rule 72 (operad_logico -> DIFERENTE .)
    PUBLIC          reduce using rule 72 (operad_logico -> DIFERENTE .)
    PROTECTED       reduce using rule 72 (operad_logico -> DIFERENTE .)
    STATIC          reduce using rule 72 (operad_logico -> DIFERENTE .)
    VAR             reduce using rule 72 (operad_logico -> DIFERENTE .)
    NULO            reduce using rule 72 (operad_logico -> DIFERENTE .)
    CADENA          reduce using rule 72 (operad_logico -> DIFERENTE .)
    BOOLEANO        reduce using rule 72 (operad_logico -> DIFERENTE .)


state 73

    (73) operad_logico -> NO_IDENTIDAD .

    ENTERO          reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)
    FLOTANTE        reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)
    SIGNO_DOLAR     reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)
    CONST           reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)
    PRIVATE         reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)
    PUBLIC          reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)
    PROTECTED       reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)
    STATIC          reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)
    VAR             reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)
    NULO            reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)
    CADENA          reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)
    BOOLEANO        reduce using rule 73 (operad_logico -> NO_IDENTIDAD .)


state 74

    (74) operad_logico -> MAYOR .

    ENTERO          reduce using rule 74 (operad_logico -> MAYOR .)
    FLOTANTE        reduce using rule 74 (operad_logico -> MAYOR .)
    SIGNO_DOLAR     reduce using rule 74 (operad_logico -> MAYOR .)
    CONST           reduce using rule 74 (operad_logico -> MAYOR .)
    PRIVATE         reduce using rule 74 (operad_logico -> MAYOR .)
    PUBLIC          reduce using rule 74 (operad_logico -> MAYOR .)
    PROTECTED       reduce using rule 74 (operad_logico -> MAYOR .)
    STATIC          reduce using rule 74 (operad_logico -> MAYOR .)
    VAR             reduce using rule 74 (operad_logico -> MAYOR .)
    NULO            reduce using rule 74 (operad_logico -> MAYOR .)
    CADENA          reduce using rule 74 (operad_logico -> MAYOR .)
    BOOLEANO        reduce using rule 74 (operad_logico -> MAYOR .)


state 75

    (75) operad_logico -> MAYOR_IGUAL .

    ENTERO          reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)
    SIGNO_DOLAR     reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)
    CONST           reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)
    PRIVATE         reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)
    PUBLIC          reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)
    PROTECTED       reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)
    STATIC          reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)
    VAR             reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)
    NULO            reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)
    CADENA          reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)
    BOOLEANO        reduce using rule 75 (operad_logico -> MAYOR_IGUAL .)


state 76

    (76) operad_logico -> MENOR .

    ENTERO          reduce using rule 76 (operad_logico -> MENOR .)
    FLOTANTE        reduce using rule 76 (operad_logico -> MENOR .)
    SIGNO_DOLAR     reduce using rule 76 (operad_logico -> MENOR .)
    CONST           reduce using rule 76 (operad_logico -> MENOR .)
    PRIVATE         reduce using rule 76 (operad_logico -> MENOR .)
    PUBLIC          reduce using rule 76 (operad_logico -> MENOR .)
    PROTECTED       reduce using rule 76 (operad_logico -> MENOR .)
    STATIC          reduce using rule 76 (operad_logico -> MENOR .)
    VAR             reduce using rule 76 (operad_logico -> MENOR .)
    NULO            reduce using rule 76 (operad_logico -> MENOR .)
    CADENA          reduce using rule 76 (operad_logico -> MENOR .)
    BOOLEANO        reduce using rule 76 (operad_logico -> MENOR .)


state 77

    (77) operad_logico -> MENOR_IGUAL .

    ENTERO          reduce using rule 77 (operad_logico -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 77 (operad_logico -> MENOR_IGUAL .)
    SIGNO_DOLAR     reduce using rule 77 (operad_logico -> MENOR_IGUAL .)
    CONST           reduce using rule 77 (operad_logico -> MENOR_IGUAL .)
    PRIVATE         reduce using rule 77 (operad_logico -> MENOR_IGUAL .)
    PUBLIC          reduce using rule 77 (operad_logico -> MENOR_IGUAL .)
    PROTECTED       reduce using rule 77 (operad_logico -> MENOR_IGUAL .)
    STATIC          reduce using rule 77 (operad_logico -> MENOR_IGUAL .)
    VAR             reduce using rule 77 (operad_logico -> MENOR_IGUAL .)
    NULO            reduce using rule 77 (operad_logico -> MENOR_IGUAL .)
    CADENA          reduce using rule 77 (operad_logico -> MENOR_IGUAL .)
    BOOLEANO        reduce using rule 77 (operad_logico -> MENOR_IGUAL .)


state 78

    (78) operad_logico -> AND .

    ENTERO          reduce using rule 78 (operad_logico -> AND .)
    FLOTANTE        reduce using rule 78 (operad_logico -> AND .)
    SIGNO_DOLAR     reduce using rule 78 (operad_logico -> AND .)
    CONST           reduce using rule 78 (operad_logico -> AND .)
    PRIVATE         reduce using rule 78 (operad_logico -> AND .)
    PUBLIC          reduce using rule 78 (operad_logico -> AND .)
    PROTECTED       reduce using rule 78 (operad_logico -> AND .)
    STATIC          reduce using rule 78 (operad_logico -> AND .)
    VAR             reduce using rule 78 (operad_logico -> AND .)
    NULO            reduce using rule 78 (operad_logico -> AND .)
    CADENA          reduce using rule 78 (operad_logico -> AND .)
    BOOLEANO        reduce using rule 78 (operad_logico -> AND .)


state 79

    (79) operad_logico -> OR .

    ENTERO          reduce using rule 79 (operad_logico -> OR .)
    FLOTANTE        reduce using rule 79 (operad_logico -> OR .)
    SIGNO_DOLAR     reduce using rule 79 (operad_logico -> OR .)
    CONST           reduce using rule 79 (operad_logico -> OR .)
    PRIVATE         reduce using rule 79 (operad_logico -> OR .)
    PUBLIC          reduce using rule 79 (operad_logico -> OR .)
    PROTECTED       reduce using rule 79 (operad_logico -> OR .)
    STATIC          reduce using rule 79 (operad_logico -> OR .)
    VAR             reduce using rule 79 (operad_logico -> OR .)
    NULO            reduce using rule 79 (operad_logico -> OR .)
    CADENA          reduce using rule 79 (operad_logico -> OR .)
    BOOLEANO        reduce using rule 79 (operad_logico -> OR .)


state 80

    (80) operad_logico -> XOR .

    ENTERO          reduce using rule 80 (operad_logico -> XOR .)
    FLOTANTE        reduce using rule 80 (operad_logico -> XOR .)
    SIGNO_DOLAR     reduce using rule 80 (operad_logico -> XOR .)
    CONST           reduce using rule 80 (operad_logico -> XOR .)
    PRIVATE         reduce using rule 80 (operad_logico -> XOR .)
    PUBLIC          reduce using rule 80 (operad_logico -> XOR .)
    PROTECTED       reduce using rule 80 (operad_logico -> XOR .)
    STATIC          reduce using rule 80 (operad_logico -> XOR .)
    VAR             reduce using rule 80 (operad_logico -> XOR .)
    NULO            reduce using rule 80 (operad_logico -> XOR .)
    CADENA          reduce using rule 80 (operad_logico -> XOR .)
    BOOLEANO        reduce using rule 80 (operad_logico -> XOR .)


state 81

    (19) salida -> ECHO salidas_posibles . FIN_LINEA

    FIN_LINEA       shift and go to state 139


state 82

    (18) salidas_posibles -> decl_variable .

    FIN_LINEA       reduce using rule 18 (salidas_posibles -> decl_variable .)
    SUMA            reduce using rule 18 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 18 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 18 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 18 (salidas_posibles -> decl_variable .)
    PARENTESIS_CIERRA reduce using rule 18 (salidas_posibles -> decl_variable .)


state 83

    (39) datos -> ENTERO .

    FIN_LINEA       reduce using rule 39 (datos -> ENTERO .)
    COMA            reduce using rule 39 (datos -> ENTERO .)
    IGUAL           reduce using rule 39 (datos -> ENTERO .)
    CORCHETE_CIERRA reduce using rule 39 (datos -> ENTERO .)
    SUMA            reduce using rule 39 (datos -> ENTERO .)
    RESTA           reduce using rule 39 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 39 (datos -> ENTERO .)
    DIVISION        reduce using rule 39 (datos -> ENTERO .)
    POTENCIA        reduce using rule 39 (datos -> ENTERO .)
    MODULO          reduce using rule 39 (datos -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 39 (datos -> ENTERO .)


state 84

    (40) datos -> FLOTANTE .

    FIN_LINEA       reduce using rule 40 (datos -> FLOTANTE .)
    COMA            reduce using rule 40 (datos -> FLOTANTE .)
    IGUAL           reduce using rule 40 (datos -> FLOTANTE .)
    CORCHETE_CIERRA reduce using rule 40 (datos -> FLOTANTE .)
    SUMA            reduce using rule 40 (datos -> FLOTANTE .)
    RESTA           reduce using rule 40 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 40 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 40 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 40 (datos -> FLOTANTE .)
    MODULO          reduce using rule 40 (datos -> FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 40 (datos -> FLOTANTE .)


state 85

    (42) datos -> BOOLEANO .

    FIN_LINEA       reduce using rule 42 (datos -> BOOLEANO .)
    COMA            reduce using rule 42 (datos -> BOOLEANO .)
    IGUAL           reduce using rule 42 (datos -> BOOLEANO .)
    CORCHETE_CIERRA reduce using rule 42 (datos -> BOOLEANO .)
    SUMA            reduce using rule 42 (datos -> BOOLEANO .)
    RESTA           reduce using rule 42 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 42 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 42 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 42 (datos -> BOOLEANO .)
    MODULO          reduce using rule 42 (datos -> BOOLEANO .)
    PARENTESIS_CIERRA reduce using rule 42 (datos -> BOOLEANO .)


state 86

    (86) operaciones_arit -> salidas_posibles operad_arit . salidas_posibles
    (87) operaciones_arit -> salidas_posibles operad_arit . operaciones_arit
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 140
    operaciones_arit               shift and go to state 141
    datos                          shift and go to state 60
    decl_variable                  shift and go to state 82
    variable_tipo                  shift and go to state 39

state 87

    (88) operaciones_bits -> salidas_posibles operand_bits . salidas_posibles
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 142
    datos                          shift and go to state 60
    decl_variable                  shift and go to state 82
    variable_tipo                  shift and go to state 39

state 88

    (64) operad_arit -> SUMA .

    ENTERO          reduce using rule 64 (operad_arit -> SUMA .)
    FLOTANTE        reduce using rule 64 (operad_arit -> SUMA .)
    CADENA          reduce using rule 64 (operad_arit -> SUMA .)
    BOOLEANO        reduce using rule 64 (operad_arit -> SUMA .)
    SIGNO_DOLAR     reduce using rule 64 (operad_arit -> SUMA .)
    CONST           reduce using rule 64 (operad_arit -> SUMA .)
    PRIVATE         reduce using rule 64 (operad_arit -> SUMA .)
    PUBLIC          reduce using rule 64 (operad_arit -> SUMA .)
    PROTECTED       reduce using rule 64 (operad_arit -> SUMA .)
    STATIC          reduce using rule 64 (operad_arit -> SUMA .)
    VAR             reduce using rule 64 (operad_arit -> SUMA .)


state 89

    (65) operad_arit -> RESTA .

    ENTERO          reduce using rule 65 (operad_arit -> RESTA .)
    FLOTANTE        reduce using rule 65 (operad_arit -> RESTA .)
    CADENA          reduce using rule 65 (operad_arit -> RESTA .)
    BOOLEANO        reduce using rule 65 (operad_arit -> RESTA .)
    SIGNO_DOLAR     reduce using rule 65 (operad_arit -> RESTA .)
    CONST           reduce using rule 65 (operad_arit -> RESTA .)
    PRIVATE         reduce using rule 65 (operad_arit -> RESTA .)
    PUBLIC          reduce using rule 65 (operad_arit -> RESTA .)
    PROTECTED       reduce using rule 65 (operad_arit -> RESTA .)
    STATIC          reduce using rule 65 (operad_arit -> RESTA .)
    VAR             reduce using rule 65 (operad_arit -> RESTA .)


state 90

    (66) operad_arit -> MULTIPLICACION .

    ENTERO          reduce using rule 66 (operad_arit -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 66 (operad_arit -> MULTIPLICACION .)
    CADENA          reduce using rule 66 (operad_arit -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 66 (operad_arit -> MULTIPLICACION .)
    SIGNO_DOLAR     reduce using rule 66 (operad_arit -> MULTIPLICACION .)
    CONST           reduce using rule 66 (operad_arit -> MULTIPLICACION .)
    PRIVATE         reduce using rule 66 (operad_arit -> MULTIPLICACION .)
    PUBLIC          reduce using rule 66 (operad_arit -> MULTIPLICACION .)
    PROTECTED       reduce using rule 66 (operad_arit -> MULTIPLICACION .)
    STATIC          reduce using rule 66 (operad_arit -> MULTIPLICACION .)
    VAR             reduce using rule 66 (operad_arit -> MULTIPLICACION .)


state 91

    (67) operad_arit -> DIVISION .

    ENTERO          reduce using rule 67 (operad_arit -> DIVISION .)
    FLOTANTE        reduce using rule 67 (operad_arit -> DIVISION .)
    CADENA          reduce using rule 67 (operad_arit -> DIVISION .)
    BOOLEANO        reduce using rule 67 (operad_arit -> DIVISION .)
    SIGNO_DOLAR     reduce using rule 67 (operad_arit -> DIVISION .)
    CONST           reduce using rule 67 (operad_arit -> DIVISION .)
    PRIVATE         reduce using rule 67 (operad_arit -> DIVISION .)
    PUBLIC          reduce using rule 67 (operad_arit -> DIVISION .)
    PROTECTED       reduce using rule 67 (operad_arit -> DIVISION .)
    STATIC          reduce using rule 67 (operad_arit -> DIVISION .)
    VAR             reduce using rule 67 (operad_arit -> DIVISION .)


state 92

    (68) operad_arit -> POTENCIA .

    ENTERO          reduce using rule 68 (operad_arit -> POTENCIA .)
    FLOTANTE        reduce using rule 68 (operad_arit -> POTENCIA .)
    CADENA          reduce using rule 68 (operad_arit -> POTENCIA .)
    BOOLEANO        reduce using rule 68 (operad_arit -> POTENCIA .)
    SIGNO_DOLAR     reduce using rule 68 (operad_arit -> POTENCIA .)
    CONST           reduce using rule 68 (operad_arit -> POTENCIA .)
    PRIVATE         reduce using rule 68 (operad_arit -> POTENCIA .)
    PUBLIC          reduce using rule 68 (operad_arit -> POTENCIA .)
    PROTECTED       reduce using rule 68 (operad_arit -> POTENCIA .)
    STATIC          reduce using rule 68 (operad_arit -> POTENCIA .)
    VAR             reduce using rule 68 (operad_arit -> POTENCIA .)


state 93

    (69) operad_arit -> MODULO .

    ENTERO          reduce using rule 69 (operad_arit -> MODULO .)
    FLOTANTE        reduce using rule 69 (operad_arit -> MODULO .)
    CADENA          reduce using rule 69 (operad_arit -> MODULO .)
    BOOLEANO        reduce using rule 69 (operad_arit -> MODULO .)
    SIGNO_DOLAR     reduce using rule 69 (operad_arit -> MODULO .)
    CONST           reduce using rule 69 (operad_arit -> MODULO .)
    PRIVATE         reduce using rule 69 (operad_arit -> MODULO .)
    PUBLIC          reduce using rule 69 (operad_arit -> MODULO .)
    PROTECTED       reduce using rule 69 (operad_arit -> MODULO .)
    STATIC          reduce using rule 69 (operad_arit -> MODULO .)
    VAR             reduce using rule 69 (operad_arit -> MODULO .)


state 94

    (81) operand_bits -> CONJUNCION .

    ENTERO          reduce using rule 81 (operand_bits -> CONJUNCION .)
    FLOTANTE        reduce using rule 81 (operand_bits -> CONJUNCION .)
    CADENA          reduce using rule 81 (operand_bits -> CONJUNCION .)
    BOOLEANO        reduce using rule 81 (operand_bits -> CONJUNCION .)
    SIGNO_DOLAR     reduce using rule 81 (operand_bits -> CONJUNCION .)
    CONST           reduce using rule 81 (operand_bits -> CONJUNCION .)
    PRIVATE         reduce using rule 81 (operand_bits -> CONJUNCION .)
    PUBLIC          reduce using rule 81 (operand_bits -> CONJUNCION .)
    PROTECTED       reduce using rule 81 (operand_bits -> CONJUNCION .)
    STATIC          reduce using rule 81 (operand_bits -> CONJUNCION .)
    VAR             reduce using rule 81 (operand_bits -> CONJUNCION .)


state 95

    (82) operand_bits -> DISYUNCION .

    ENTERO          reduce using rule 82 (operand_bits -> DISYUNCION .)
    FLOTANTE        reduce using rule 82 (operand_bits -> DISYUNCION .)
    CADENA          reduce using rule 82 (operand_bits -> DISYUNCION .)
    BOOLEANO        reduce using rule 82 (operand_bits -> DISYUNCION .)
    SIGNO_DOLAR     reduce using rule 82 (operand_bits -> DISYUNCION .)
    CONST           reduce using rule 82 (operand_bits -> DISYUNCION .)
    PRIVATE         reduce using rule 82 (operand_bits -> DISYUNCION .)
    PUBLIC          reduce using rule 82 (operand_bits -> DISYUNCION .)
    PROTECTED       reduce using rule 82 (operand_bits -> DISYUNCION .)
    STATIC          reduce using rule 82 (operand_bits -> DISYUNCION .)
    VAR             reduce using rule 82 (operand_bits -> DISYUNCION .)


state 96

    (83) operand_bits -> DISYUNCION_EXC .

    ENTERO          reduce using rule 83 (operand_bits -> DISYUNCION_EXC .)
    FLOTANTE        reduce using rule 83 (operand_bits -> DISYUNCION_EXC .)
    CADENA          reduce using rule 83 (operand_bits -> DISYUNCION_EXC .)
    BOOLEANO        reduce using rule 83 (operand_bits -> DISYUNCION_EXC .)
    SIGNO_DOLAR     reduce using rule 83 (operand_bits -> DISYUNCION_EXC .)
    CONST           reduce using rule 83 (operand_bits -> DISYUNCION_EXC .)
    PRIVATE         reduce using rule 83 (operand_bits -> DISYUNCION_EXC .)
    PUBLIC          reduce using rule 83 (operand_bits -> DISYUNCION_EXC .)
    PROTECTED       reduce using rule 83 (operand_bits -> DISYUNCION_EXC .)
    STATIC          reduce using rule 83 (operand_bits -> DISYUNCION_EXC .)
    VAR             reduce using rule 83 (operand_bits -> DISYUNCION_EXC .)


state 97

    (84) operand_bits -> DESPLAZAR_BITS_IZQ .

    ENTERO          reduce using rule 84 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    FLOTANTE        reduce using rule 84 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    CADENA          reduce using rule 84 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    BOOLEANO        reduce using rule 84 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    SIGNO_DOLAR     reduce using rule 84 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    CONST           reduce using rule 84 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PRIVATE         reduce using rule 84 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PUBLIC          reduce using rule 84 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PROTECTED       reduce using rule 84 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    STATIC          reduce using rule 84 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    VAR             reduce using rule 84 (operand_bits -> DESPLAZAR_BITS_IZQ .)


state 98

    (85) operand_bits -> DESPLAZAR_BITS_DER .

    ENTERO          reduce using rule 85 (operand_bits -> DESPLAZAR_BITS_DER .)
    FLOTANTE        reduce using rule 85 (operand_bits -> DESPLAZAR_BITS_DER .)
    CADENA          reduce using rule 85 (operand_bits -> DESPLAZAR_BITS_DER .)
    BOOLEANO        reduce using rule 85 (operand_bits -> DESPLAZAR_BITS_DER .)
    SIGNO_DOLAR     reduce using rule 85 (operand_bits -> DESPLAZAR_BITS_DER .)
    CONST           reduce using rule 85 (operand_bits -> DESPLAZAR_BITS_DER .)
    PRIVATE         reduce using rule 85 (operand_bits -> DESPLAZAR_BITS_DER .)
    PUBLIC          reduce using rule 85 (operand_bits -> DESPLAZAR_BITS_DER .)
    PROTECTED       reduce using rule 85 (operand_bits -> DESPLAZAR_BITS_DER .)
    STATIC          reduce using rule 85 (operand_bits -> DESPLAZAR_BITS_DER .)
    VAR             reduce using rule 85 (operand_bits -> DESPLAZAR_BITS_DER .)


state 99

    (20) salida -> PRINT PARENTESIS_ABRE . salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 143
    datos                          shift and go to state 60
    decl_variable                  shift and go to state 82
    variable_tipo                  shift and go to state 39

state 100

    (21) salida -> PRINT salidas_posibles . FIN_LINEA

    FIN_LINEA       shift and go to state 144


state 101

    (22) ingreso -> READLINE PARENTESIS_ABRE . CADENA PARENTESIS_CIERRA FIN_LINEA

    CADENA          shift and go to state 145


state 102

    (23) ingreso -> FGETS PARENTESIS_ABRE . STDIN PARENTESIS_CIERRA FIN_LINEA

    STDIN           shift and go to state 146


state 103

    (24) ingreso -> FSCANF PARENTESIS_ABRE . STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    STDIN           shift and go to state 147


state 104

    (31) decl_variable -> SIGNO_DOLAR IDENTIFICADOR .

    IGUAL           reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    LAMBDA          reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    INCREMENTO      reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DECREMENTO      reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    IGUALDAD        reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    IDENTIDAD       reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    NO_IDENTIDAD    reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR           reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MENOR           reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    AND             reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    OR              reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    XOR             reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    SUMA            reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    RESTA           reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DIVISION        reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    POTENCIA        reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MODULO          reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCION      reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION      reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION_EXC  reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_IZQ reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_DER reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    FIN_LINEA       reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    AS              reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)


state 105

    (48) estructuras_datos -> pila FIN_LINEA .

    CLASS           reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    BREAK           reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    ECHO            reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    PRINT           reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    READLINE        reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    FGETS           reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    FSCANF          reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    FUNCTION        reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    NEW             reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    ARRAY           reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    FOR             reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    FOREACH         reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    WHILE           reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    ENTERO          reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    FLOTANTE        reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    BOOLEANO        reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    NEGACION        reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    INCREMENTO      reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    DECREMENTO      reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    CONST           reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    PRIVATE         reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    PUBLIC          reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    PROTECTED       reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    STATIC          reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    VAR             reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    IF              reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    CADENA          reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    $end            reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 48 (estructuras_datos -> pila FIN_LINEA .)


state 106

    (49) estructuras_datos -> arreglo FIN_LINEA .

    CLASS           reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    BREAK           reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    ECHO            reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    PRINT           reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    READLINE        reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    FGETS           reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    FSCANF          reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    FUNCTION        reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    NEW             reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    ARRAY           reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    FOR             reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    FOREACH         reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    WHILE           reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    ENTERO          reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    FLOTANTE        reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    BOOLEANO        reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    NEGACION        reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    INCREMENTO      reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    DECREMENTO      reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    CONST           reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    PRIVATE         reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    PUBLIC          reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    PROTECTED       reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    STATIC          reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    VAR             reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    IF              reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    CADENA          reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    $end            reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 49 (estructuras_datos -> arreglo FIN_LINEA .)


state 107

    (43) funcion -> FUNCTION IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> FUNCTION IDENTIFICADOR . PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 148


state 108

    (122) declaracion_s -> crecimiento decl_variable .

    FIN_LINEA       reduce using rule 122 (declaracion_s -> crecimiento decl_variable .)
    PARENTESIS_CIERRA reduce using rule 122 (declaracion_s -> crecimiento decl_variable .)


state 109

    (32) decl_variable -> variable_tipo SIGNO_DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 149


state 110

    (50) pila -> NEW STACK . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 150


state 111

    (54) arreglo -> ARRAY PARENTESIS_ABRE . PARENTESIS_CIERRA
    (56) arreglo -> ARRAY PARENTESIS_ABRE . elementos PARENTESIS_CIERRA
    (58) arreglo -> ARRAY PARENTESIS_ABRE . asociacion PARENTESIS_CIERRA
    (62) elementos -> . datos
    (63) elementos -> . datos COMA elementos
    (60) asociacion -> . datos IGUAL MAYOR datos
    (61) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    PARENTESIS_CIERRA shift and go to state 151
    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85

    elementos                      shift and go to state 152
    asociacion                     shift and go to state 153
    datos                          shift and go to state 115

state 112

    (55) arreglo -> CORCHETE_ABRE CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 55 (arreglo -> CORCHETE_ABRE CORCHETE_CIERRA .)


state 113

    (57) arreglo -> CORCHETE_ABRE elementos . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 154


state 114

    (59) arreglo -> CORCHETE_ABRE asociacion . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 155


state 115

    (62) elementos -> datos .
    (63) elementos -> datos . COMA elementos
    (60) asociacion -> datos . IGUAL MAYOR datos
    (61) asociacion -> datos . IGUAL MAYOR datos COMA asociacion

    CORCHETE_CIERRA reduce using rule 62 (elementos -> datos .)
    PARENTESIS_CIERRA reduce using rule 62 (elementos -> datos .)
    COMA            shift and go to state 156
    IGUAL           shift and go to state 157


state 116

    (113) for -> FOR PARENTESIS_ABRE . asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    asignacion                     shift and go to state 158
    decl_variable                  shift and go to state 159
    variable_tipo                  shift and go to state 39

state 117

    (127) foreach -> FOREACH PARENTESIS_ABRE . decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> FOREACH PARENTESIS_ABRE . decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 160
    variable_tipo                  shift and go to state 39

state 118

    (130) if_else -> if_else_inicio if_else_fin .

    CLASS           reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    COMENTARIO_LINEA reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    COMENTARIO_BLOQUE reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    BREAK           reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    ECHO            reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    PRINT           reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    READLINE        reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    FGETS           reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    FSCANF          reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    FUNCTION        reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    SIGNO_DOLAR     reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    NEW             reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    ARRAY           reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    CORCHETE_ABRE   reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    FOR             reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    FOREACH         reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    WHILE           reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    ENTERO          reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    FLOTANTE        reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    BOOLEANO        reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    NEGACION        reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    INCREMENTO      reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    DECREMENTO      reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    CONST           reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    PRIVATE         reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    PUBLIC          reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    PROTECTED       reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    STATIC          reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    VAR             reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    IF              reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    CADENA          reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    $end            reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)
    LLAVE_CIERRA    reduce using rule 130 (if_else -> if_else_inicio if_else_fin .)


state 119

    (131) if_else -> if_else_inicio if_else_cuerpo . if_else_fin
    (135) if_else_fin -> . ELSE LLAVE_ABRE bloque LLAVE_CIERRA

    ELSE            shift and go to state 120

    if_else_fin                    shift and go to state 161

state 120

    (135) if_else_fin -> ELSE . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 162


state 121

    (133) if_else_cuerpo -> ELSEIF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (134) if_else_cuerpo -> ELSEIF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    PARENTESIS_ABRE shift and go to state 163


state 122

    (129) while -> WHILE PARENTESIS_ABRE . decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 164
    variable_tipo                  shift and go to state 39

state 123

    (90) operaciones_logicas -> ENTERO operad_logico . ENTERO

    ENTERO          shift and go to state 165


state 124

    (91) operaciones_logicas -> FLOTANTE operad_logico . FLOTANTE

    FLOTANTE        shift and go to state 166


state 125

    (89) operaciones_bits -> NEGACION salidas_posibles .

    FIN_LINEA       reduce using rule 89 (operaciones_bits -> NEGACION salidas_posibles .)


state 126

    (132) if_else_inicio -> IF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 168
    FLOTANTE        shift and go to state 169
    BOOLEANO        shift and go to state 170
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    operaciones_logicas            shift and go to state 167
    decl_variable                  shift and go to state 171
    variable_tipo                  shift and go to state 39

state 127

    (5) clase -> CLASS IDENTIFICADOR LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    instrucciones                  shift and go to state 172
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    decl_variable                  shift and go to state 17
    poppila                        shift and go to state 18
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 128

    (38) valor -> decl_variable .
    (51) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA

    FIN_LINEA       reduce using rule 38 (valor -> decl_variable .)
    LAMBDA          shift and go to state 173


state 129

    (33) asignacion -> decl_variable IGUAL valor . FIN_LINEA

    FIN_LINEA       shift and go to state 174


state 130

    (34) asignacion -> decl_variable IGUAL estructuras_datos .

    CLASS           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    COMENTARIO_LINEA reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    COMENTARIO_BLOQUE reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    BREAK           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ECHO            reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PRINT           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    READLINE        reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FGETS           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FSCANF          reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FUNCTION        reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    SIGNO_DOLAR     reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    NEW             reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ARRAY           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CORCHETE_ABRE   reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FOR             reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FOREACH         reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    WHILE           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ENTERO          reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FLOTANTE        reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    BOOLEANO        reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    NEGACION        reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    INCREMENTO      reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    DECREMENTO      reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CONST           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PRIVATE         reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PUBLIC          reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PROTECTED       reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    STATIC          reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    VAR             reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    IF              reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CADENA          reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    $end            reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    LLAVE_CIERRA    reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)


state 131

    (35) asignacion -> decl_variable IGUAL poppila . FIN_LINEA

    FIN_LINEA       shift and go to state 175


state 132

    (36) valor -> datos .

    FIN_LINEA       reduce using rule 36 (valor -> datos .)
    PARENTESIS_CIERRA reduce using rule 36 (valor -> datos .)


state 133

    (37) valor -> NULO .

    FIN_LINEA       reduce using rule 37 (valor -> NULO .)
    PARENTESIS_CIERRA reduce using rule 37 (valor -> NULO .)


state 134

    (93) operaciones_logicas -> decl_variable operad_logico decl_variable .

    FIN_LINEA       reduce using rule 93 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    PARENTESIS_CIERRA reduce using rule 93 (operaciones_logicas -> decl_variable operad_logico decl_variable .)


state 135

    (94) operaciones_logicas -> decl_variable operad_logico ENTERO .

    FIN_LINEA       reduce using rule 94 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    PARENTESIS_CIERRA reduce using rule 94 (operaciones_logicas -> decl_variable operad_logico ENTERO .)


state 136

    (95) operaciones_logicas -> decl_variable operad_logico FLOTANTE .

    FIN_LINEA       reduce using rule 95 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 95 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)


state 137

    (52) pushpila -> decl_variable LAMBDA PUSH . PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> decl_variable LAMBDA PUSH . PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 176


state 138

    (51) poppila -> decl_variable LAMBDA POP . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 177


state 139

    (19) salida -> ECHO salidas_posibles FIN_LINEA .

    CLASS           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    BREAK           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ECHO            reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PRINT           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    READLINE        reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FGETS           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FSCANF          reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FUNCTION        reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    NEW             reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ARRAY           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FOR             reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FOREACH         reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    WHILE           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ENTERO          reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FLOTANTE        reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    BOOLEANO        reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    NEGACION        reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    INCREMENTO      reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    DECREMENTO      reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CONST           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PRIVATE         reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PUBLIC          reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PROTECTED       reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    STATIC          reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    VAR             reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    IF              reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CADENA          reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    $end            reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)


state 140

    (86) operaciones_arit -> salidas_posibles operad_arit salidas_posibles .
    (86) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (87) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (64) operad_arit -> . SUMA
    (65) operad_arit -> . RESTA
    (66) operad_arit -> . MULTIPLICACION
    (67) operad_arit -> . DIVISION
    (68) operad_arit -> . POTENCIA
    (69) operad_arit -> . MODULO

    FIN_LINEA       reduce using rule 86 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    PARENTESIS_CIERRA reduce using rule 86 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    SUMA            shift and go to state 88
    RESTA           shift and go to state 89
    MULTIPLICACION  shift and go to state 90
    DIVISION        shift and go to state 91
    POTENCIA        shift and go to state 92
    MODULO          shift and go to state 93

    operad_arit                    shift and go to state 86

state 141

    (87) operaciones_arit -> salidas_posibles operad_arit operaciones_arit .

    FIN_LINEA       reduce using rule 87 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    PARENTESIS_CIERRA reduce using rule 87 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)


state 142

    (88) operaciones_bits -> salidas_posibles operand_bits salidas_posibles .

    FIN_LINEA       reduce using rule 88 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)


state 143

    (20) salida -> PRINT PARENTESIS_ABRE salidas_posibles . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 178


state 144

    (21) salida -> PRINT salidas_posibles FIN_LINEA .

    CLASS           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    BREAK           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ECHO            reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PRINT           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    READLINE        reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FGETS           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FSCANF          reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FUNCTION        reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    NEW             reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ARRAY           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FOR             reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FOREACH         reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    WHILE           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ENTERO          reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FLOTANTE        reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    BOOLEANO        reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    NEGACION        reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    INCREMENTO      reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    DECREMENTO      reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CONST           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PRIVATE         reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PUBLIC          reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PROTECTED       reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    STATIC          reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    VAR             reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    IF              reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CADENA          reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    $end            reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)


state 145

    (22) ingreso -> READLINE PARENTESIS_ABRE CADENA . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 179


state 146

    (23) ingreso -> FGETS PARENTESIS_ABRE STDIN . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 180


state 147

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN . COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    COMA            shift and go to state 181


state 148

    (43) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE . parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (46) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (47) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros

    PARENTESIS_CIERRA shift and go to state 182
    SIGNO_DOLAR     shift and go to state 184

    parametros                     shift and go to state 183

state 149

    (32) decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .

    IGUAL           reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    LAMBDA          reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    INCREMENTO      reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DECREMENTO      reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    IGUALDAD        reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    IDENTIDAD       reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    NO_IDENTIDAD    reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR           reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MENOR           reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    AND             reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    OR              reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    XOR             reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    SUMA            reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    RESTA           reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DIVISION        reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    POTENCIA        reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MODULO          reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCION      reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION      reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION_EXC  reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_IZQ reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_DER reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    FIN_LINEA       reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    AS              reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)


state 150

    (50) pila -> NEW STACK PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 185


state 151

    (54) arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 54 (arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 152

    (56) arreglo -> ARRAY PARENTESIS_ABRE elementos . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 186


state 153

    (58) arreglo -> ARRAY PARENTESIS_ABRE asociacion . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 187


state 154

    (57) arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 57 (arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA .)


state 155

    (59) arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 59 (arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA .)


state 156

    (63) elementos -> datos COMA . elementos
    (62) elementos -> . datos
    (63) elementos -> . datos COMA elementos
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85

    datos                          shift and go to state 188
    elementos                      shift and go to state 189

state 157

    (60) asociacion -> datos IGUAL . MAYOR datos
    (61) asociacion -> datos IGUAL . MAYOR datos COMA asociacion

    MAYOR           shift and go to state 190


state 158

    (113) for -> FOR PARENTESIS_ABRE asignacion . declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (116) declaracionp -> . decl_variable valorc
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    declaracionp                   shift and go to state 191
    decl_variable                  shift and go to state 192
    variable_tipo                  shift and go to state 39

state 159

    (33) asignacion -> decl_variable . IGUAL valor FIN_LINEA
    (34) asignacion -> decl_variable . IGUAL estructuras_datos
    (35) asignacion -> decl_variable . IGUAL poppila FIN_LINEA

    IGUAL           shift and go to state 66


state 160

    (127) foreach -> FOREACH PARENTESIS_ABRE decl_variable . AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> FOREACH PARENTESIS_ABRE decl_variable . AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    AS              shift and go to state 193


state 161

    (131) if_else -> if_else_inicio if_else_cuerpo if_else_fin .

    CLASS           reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    COMENTARIO_LINEA reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    COMENTARIO_BLOQUE reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    BREAK           reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ECHO            reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PRINT           reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    READLINE        reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FGETS           reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FSCANF          reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FUNCTION        reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    SIGNO_DOLAR     reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    NEW             reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ARRAY           reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CORCHETE_ABRE   reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FOR             reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FOREACH         reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    WHILE           reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ENTERO          reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FLOTANTE        reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    BOOLEANO        reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    NEGACION        reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    INCREMENTO      reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    DECREMENTO      reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CONST           reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PRIVATE         reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PUBLIC          reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PROTECTED       reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    STATIC          reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    VAR             reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    IF              reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CADENA          reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    $end            reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    LLAVE_CIERRA    reduce using rule 131 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)


state 162

    (135) if_else_fin -> ELSE LLAVE_ABRE . bloque LLAVE_CIERRA
    (111) bloque -> . instrucciones
    (112) bloque -> . retorno
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (125) retorno -> . RETURN salidas_posibles FIN_LINEA
    (126) retorno -> . RETURN operaciones FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    RETURN          shift and go to state 197
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    bloque                         shift and go to state 194
    instrucciones                  shift and go to state 195
    retorno                        shift and go to state 196
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    salidas_posibles               shift and go to state 20
    decl_variable                  shift and go to state 17
    poppila                        shift and go to state 18
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 163

    (133) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (134) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 168
    FLOTANTE        shift and go to state 169
    BOOLEANO        shift and go to state 170
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    operaciones_logicas            shift and go to state 198
    decl_variable                  shift and go to state 171
    variable_tipo                  shift and go to state 39

state 164

    (129) while -> WHILE PARENTESIS_ABRE decl_variable . operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) operad_logico -> . IGUALDAD
    (71) operad_logico -> . IDENTIDAD
    (72) operad_logico -> . DIFERENTE
    (73) operad_logico -> . NO_IDENTIDAD
    (74) operad_logico -> . MAYOR
    (75) operad_logico -> . MAYOR_IGUAL
    (76) operad_logico -> . MENOR
    (77) operad_logico -> . MENOR_IGUAL
    (78) operad_logico -> . AND
    (79) operad_logico -> . OR
    (80) operad_logico -> . XOR

    IGUALDAD        shift and go to state 70
    IDENTIDAD       shift and go to state 71
    DIFERENTE       shift and go to state 72
    NO_IDENTIDAD    shift and go to state 73
    MAYOR           shift and go to state 74
    MAYOR_IGUAL     shift and go to state 75
    MENOR           shift and go to state 76
    MENOR_IGUAL     shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80

    operad_logico                  shift and go to state 199

state 165

    (90) operaciones_logicas -> ENTERO operad_logico ENTERO .

    FIN_LINEA       reduce using rule 90 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    PARENTESIS_CIERRA reduce using rule 90 (operaciones_logicas -> ENTERO operad_logico ENTERO .)


state 166

    (91) operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .

    FIN_LINEA       reduce using rule 91 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 91 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)


state 167

    (132) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 200


state 168

    (90) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (70) operad_logico -> . IGUALDAD
    (71) operad_logico -> . IDENTIDAD
    (72) operad_logico -> . DIFERENTE
    (73) operad_logico -> . NO_IDENTIDAD
    (74) operad_logico -> . MAYOR
    (75) operad_logico -> . MAYOR_IGUAL
    (76) operad_logico -> . MENOR
    (77) operad_logico -> . MENOR_IGUAL
    (78) operad_logico -> . AND
    (79) operad_logico -> . OR
    (80) operad_logico -> . XOR

    IGUALDAD        shift and go to state 70
    IDENTIDAD       shift and go to state 71
    DIFERENTE       shift and go to state 72
    NO_IDENTIDAD    shift and go to state 73
    MAYOR           shift and go to state 74
    MAYOR_IGUAL     shift and go to state 75
    MENOR           shift and go to state 76
    MENOR_IGUAL     shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80

    operad_logico                  shift and go to state 123

state 169

    (91) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (70) operad_logico -> . IGUALDAD
    (71) operad_logico -> . IDENTIDAD
    (72) operad_logico -> . DIFERENTE
    (73) operad_logico -> . NO_IDENTIDAD
    (74) operad_logico -> . MAYOR
    (75) operad_logico -> . MAYOR_IGUAL
    (76) operad_logico -> . MENOR
    (77) operad_logico -> . MENOR_IGUAL
    (78) operad_logico -> . AND
    (79) operad_logico -> . OR
    (80) operad_logico -> . XOR

    IGUALDAD        shift and go to state 70
    IDENTIDAD       shift and go to state 71
    DIFERENTE       shift and go to state 72
    NO_IDENTIDAD    shift and go to state 73
    MAYOR           shift and go to state 74
    MAYOR_IGUAL     shift and go to state 75
    MENOR           shift and go to state 76
    MENOR_IGUAL     shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80

    operad_logico                  shift and go to state 124

state 170

    (92) operaciones_logicas -> BOOLEANO .

    PARENTESIS_CIERRA reduce using rule 92 (operaciones_logicas -> BOOLEANO .)


state 171

    (93) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (94) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (95) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (70) operad_logico -> . IGUALDAD
    (71) operad_logico -> . IDENTIDAD
    (72) operad_logico -> . DIFERENTE
    (73) operad_logico -> . NO_IDENTIDAD
    (74) operad_logico -> . MAYOR
    (75) operad_logico -> . MAYOR_IGUAL
    (76) operad_logico -> . MENOR
    (77) operad_logico -> . MENOR_IGUAL
    (78) operad_logico -> . AND
    (79) operad_logico -> . OR
    (80) operad_logico -> . XOR

    IGUALDAD        shift and go to state 70
    IDENTIDAD       shift and go to state 71
    DIFERENTE       shift and go to state 72
    NO_IDENTIDAD    shift and go to state 73
    MAYOR           shift and go to state 74
    MAYOR_IGUAL     shift and go to state 75
    MENOR           shift and go to state 76
    MENOR_IGUAL     shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80

    operad_logico                  shift and go to state 68

state 172

    (5) clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 201


state 173

    (51) poppila -> decl_variable LAMBDA . POP PARENTESIS_ABRE PARENTESIS_CIERRA

    POP             shift and go to state 138


state 174

    (33) asignacion -> decl_variable IGUAL valor FIN_LINEA .

    CLASS           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    BREAK           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ECHO            reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PRINT           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    READLINE        reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FGETS           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FSCANF          reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FUNCTION        reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    NEW             reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ARRAY           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FOR             reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FOREACH         reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    WHILE           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ENTERO          reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FLOTANTE        reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    BOOLEANO        reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    NEGACION        reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    INCREMENTO      reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    DECREMENTO      reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CONST           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PRIVATE         reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PUBLIC          reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PROTECTED       reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    STATIC          reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    VAR             reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    IF              reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CADENA          reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    $end            reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)


state 175

    (35) asignacion -> decl_variable IGUAL poppila FIN_LINEA .

    CLASS           reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    BREAK           reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    ECHO            reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    PRINT           reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    READLINE        reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FGETS           reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FSCANF          reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FUNCTION        reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    NEW             reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    ARRAY           reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FOR             reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FOREACH         reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    WHILE           reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    ENTERO          reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    FLOTANTE        reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    BOOLEANO        reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    NEGACION        reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    INCREMENTO      reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    DECREMENTO      reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    CONST           reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    PRIVATE         reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    PUBLIC          reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    PROTECTED       reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    STATIC          reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    VAR             reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    IF              reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    CADENA          reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    $end            reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 35 (asignacion -> decl_variable IGUAL poppila FIN_LINEA .)


state 176

    (52) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE . valor PARENTESIS_CIERRA
    (53) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE . operaciones_arit PARENTESIS_CIERRA
    (36) valor -> . datos
    (37) valor -> . NULO
    (38) valor -> . decl_variable
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    NULO            shift and go to state 133
    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 202
    valor                          shift and go to state 203
    operaciones_arit               shift and go to state 204
    datos                          shift and go to state 205
    salidas_posibles               shift and go to state 206
    variable_tipo                  shift and go to state 39

state 177

    (51) poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 207


state 178

    (20) salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 208


state 179

    (22) ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 209


state 180

    (23) ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 210


state 181

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA . CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    CADENA          shift and go to state 211


state 182

    (43) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 212


state 183

    (44) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 213


state 184

    (46) parametros -> SIGNO_DOLAR . IDENTIFICADOR
    (47) parametros -> SIGNO_DOLAR . IDENTIFICADOR COMA parametros

    IDENTIFICADOR   shift and go to state 214


state 185

    (50) pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 50 (pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 186

    (56) arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 56 (arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)


state 187

    (58) arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 58 (arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA .)


state 188

    (62) elementos -> datos .
    (63) elementos -> datos . COMA elementos

    CORCHETE_CIERRA reduce using rule 62 (elementos -> datos .)
    PARENTESIS_CIERRA reduce using rule 62 (elementos -> datos .)
    COMA            shift and go to state 156


state 189

    (63) elementos -> datos COMA elementos .

    CORCHETE_CIERRA reduce using rule 63 (elementos -> datos COMA elementos .)
    PARENTESIS_CIERRA reduce using rule 63 (elementos -> datos COMA elementos .)


state 190

    (60) asociacion -> datos IGUAL MAYOR . datos
    (61) asociacion -> datos IGUAL MAYOR . datos COMA asociacion
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85

    datos                          shift and go to state 215

state 191

    (113) for -> FOR PARENTESIS_ABRE asignacion declaracionp . declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    declaracion_s                  shift and go to state 216
    decl_variable                  shift and go to state 217
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39

state 192

    (116) declaracionp -> decl_variable . valorc
    (117) valorc -> . menor
    (118) valorc -> . mayor
    (119) menor -> . MENOR_IGUAL ENTERO FIN_LINEA
    (120) mayor -> . MAYOR_IGUAL ENTERO FIN_LINEA

    MENOR_IGUAL     shift and go to state 221
    MAYOR_IGUAL     shift and go to state 222

    valorc                         shift and go to state 218
    menor                          shift and go to state 219
    mayor                          shift and go to state 220

state 193

    (127) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS . decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS . decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 223
    variable_tipo                  shift and go to state 39

state 194

    (135) if_else_fin -> ELSE LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 224


state 195

    (111) bloque -> instrucciones .

    LLAVE_CIERRA    reduce using rule 111 (bloque -> instrucciones .)


state 196

    (112) bloque -> retorno .

    LLAVE_CIERRA    reduce using rule 112 (bloque -> retorno .)


state 197

    (125) retorno -> RETURN . salidas_posibles FIN_LINEA
    (126) retorno -> RETURN . operaciones FIN_LINEA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 228
    FLOTANTE        shift and go to state 229
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 230
    SIGNO_DOLAR     shift and go to state 26
    NEGACION        shift and go to state 50
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 225
    operaciones                    shift and go to state 226
    datos                          shift and go to state 60
    decl_variable                  shift and go to state 227
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    poppila                        shift and go to state 18
    variable_tipo                  shift and go to state 39

state 198

    (133) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (134) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    PARENTESIS_CIERRA shift and go to state 231


state 199

    (129) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico . valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (36) valor -> . datos
    (37) valor -> . NULO
    (38) valor -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    NULO            shift and go to state 133
    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 232
    valor                          shift and go to state 233
    datos                          shift and go to state 132
    variable_tipo                  shift and go to state 39

state 200

    (132) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 234


state 201

    (5) clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .

    CLASS           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ECHO            reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    READLINE        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FGETS           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FSCANF          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNCTION        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEW             reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ARRAY           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOREACH         reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ENTERO          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEGACION        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONST           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRIVATE         reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PUBLIC          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PROTECTED       reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STATIC          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CADENA          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 202

    (38) valor -> decl_variable .
    (18) salidas_posibles -> decl_variable .

    PARENTESIS_CIERRA reduce using rule 38 (valor -> decl_variable .)
    SUMA            reduce using rule 18 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 18 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 18 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 18 (salidas_posibles -> decl_variable .)


state 203

    (52) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 235


state 204

    (53) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 236


state 205

    (36) valor -> datos .
    (17) salidas_posibles -> datos .

    PARENTESIS_CIERRA reduce using rule 36 (valor -> datos .)
    SUMA            reduce using rule 17 (salidas_posibles -> datos .)
    RESTA           reduce using rule 17 (salidas_posibles -> datos .)
    MULTIPLICACION  reduce using rule 17 (salidas_posibles -> datos .)
    DIVISION        reduce using rule 17 (salidas_posibles -> datos .)
    POTENCIA        reduce using rule 17 (salidas_posibles -> datos .)
    MODULO          reduce using rule 17 (salidas_posibles -> datos .)


state 206

    (86) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (87) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (64) operad_arit -> . SUMA
    (65) operad_arit -> . RESTA
    (66) operad_arit -> . MULTIPLICACION
    (67) operad_arit -> . DIVISION
    (68) operad_arit -> . POTENCIA
    (69) operad_arit -> . MODULO

    SUMA            shift and go to state 88
    RESTA           shift and go to state 89
    MULTIPLICACION  shift and go to state 90
    DIVISION        shift and go to state 91
    POTENCIA        shift and go to state 92
    MODULO          shift and go to state 93

    operad_arit                    shift and go to state 86

state 207

    (51) poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 51 (poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 208

    (20) salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)


state 209

    (22) ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)


state 210

    (23) ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)


state 211

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA . COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    COMA            shift and go to state 237


state 212

    (43) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (111) bloque -> . instrucciones
    (112) bloque -> . retorno
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (125) retorno -> . RETURN salidas_posibles FIN_LINEA
    (126) retorno -> . RETURN operaciones FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    RETURN          shift and go to state 197
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    bloque                         shift and go to state 238
    instrucciones                  shift and go to state 195
    retorno                        shift and go to state 196
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    salidas_posibles               shift and go to state 20
    decl_variable                  shift and go to state 17
    poppila                        shift and go to state 18
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 213

    (44) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 239


state 214

    (46) parametros -> SIGNO_DOLAR IDENTIFICADOR .
    (47) parametros -> SIGNO_DOLAR IDENTIFICADOR . COMA parametros

    PARENTESIS_CIERRA reduce using rule 46 (parametros -> SIGNO_DOLAR IDENTIFICADOR .)
    COMA            shift and go to state 240


state 215

    (60) asociacion -> datos IGUAL MAYOR datos .
    (61) asociacion -> datos IGUAL MAYOR datos . COMA asociacion

    CORCHETE_CIERRA reduce using rule 60 (asociacion -> datos IGUAL MAYOR datos .)
    PARENTESIS_CIERRA reduce using rule 60 (asociacion -> datos IGUAL MAYOR datos .)
    COMA            shift and go to state 241


state 216

    (113) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 242


state 217

    (121) declaracion_s -> decl_variable . crecimiento
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO

    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52

    crecimiento                    shift and go to state 67

state 218

    (116) declaracionp -> decl_variable valorc .

    SIGNO_DOLAR     reduce using rule 116 (declaracionp -> decl_variable valorc .)
    INCREMENTO      reduce using rule 116 (declaracionp -> decl_variable valorc .)
    DECREMENTO      reduce using rule 116 (declaracionp -> decl_variable valorc .)
    CONST           reduce using rule 116 (declaracionp -> decl_variable valorc .)
    PRIVATE         reduce using rule 116 (declaracionp -> decl_variable valorc .)
    PUBLIC          reduce using rule 116 (declaracionp -> decl_variable valorc .)
    PROTECTED       reduce using rule 116 (declaracionp -> decl_variable valorc .)
    STATIC          reduce using rule 116 (declaracionp -> decl_variable valorc .)
    VAR             reduce using rule 116 (declaracionp -> decl_variable valorc .)


state 219

    (117) valorc -> menor .

    SIGNO_DOLAR     reduce using rule 117 (valorc -> menor .)
    INCREMENTO      reduce using rule 117 (valorc -> menor .)
    DECREMENTO      reduce using rule 117 (valorc -> menor .)
    CONST           reduce using rule 117 (valorc -> menor .)
    PRIVATE         reduce using rule 117 (valorc -> menor .)
    PUBLIC          reduce using rule 117 (valorc -> menor .)
    PROTECTED       reduce using rule 117 (valorc -> menor .)
    STATIC          reduce using rule 117 (valorc -> menor .)
    VAR             reduce using rule 117 (valorc -> menor .)


state 220

    (118) valorc -> mayor .

    SIGNO_DOLAR     reduce using rule 118 (valorc -> mayor .)
    INCREMENTO      reduce using rule 118 (valorc -> mayor .)
    DECREMENTO      reduce using rule 118 (valorc -> mayor .)
    CONST           reduce using rule 118 (valorc -> mayor .)
    PRIVATE         reduce using rule 118 (valorc -> mayor .)
    PUBLIC          reduce using rule 118 (valorc -> mayor .)
    PROTECTED       reduce using rule 118 (valorc -> mayor .)
    STATIC          reduce using rule 118 (valorc -> mayor .)
    VAR             reduce using rule 118 (valorc -> mayor .)


state 221

    (119) menor -> MENOR_IGUAL . ENTERO FIN_LINEA

    ENTERO          shift and go to state 243


state 222

    (120) mayor -> MAYOR_IGUAL . ENTERO FIN_LINEA

    ENTERO          shift and go to state 244


state 223

    (127) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable . IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 245
    IGUAL           shift and go to state 246


state 224

    (135) if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .

    CLASS           reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    $end            reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 135 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)


state 225

    (125) retorno -> RETURN salidas_posibles . FIN_LINEA
    (86) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (87) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (88) operaciones_bits -> salidas_posibles . operand_bits salidas_posibles
    (64) operad_arit -> . SUMA
    (65) operad_arit -> . RESTA
    (66) operad_arit -> . MULTIPLICACION
    (67) operad_arit -> . DIVISION
    (68) operad_arit -> . POTENCIA
    (69) operad_arit -> . MODULO
    (81) operand_bits -> . CONJUNCION
    (82) operand_bits -> . DISYUNCION
    (83) operand_bits -> . DISYUNCION_EXC
    (84) operand_bits -> . DESPLAZAR_BITS_IZQ
    (85) operand_bits -> . DESPLAZAR_BITS_DER

    FIN_LINEA       shift and go to state 247
    SUMA            shift and go to state 88
    RESTA           shift and go to state 89
    MULTIPLICACION  shift and go to state 90
    DIVISION        shift and go to state 91
    POTENCIA        shift and go to state 92
    MODULO          shift and go to state 93
    CONJUNCION      shift and go to state 94
    DISYUNCION      shift and go to state 95
    DISYUNCION_EXC  shift and go to state 96
    DESPLAZAR_BITS_IZQ shift and go to state 97
    DESPLAZAR_BITS_DER shift and go to state 98

    operad_arit                    shift and go to state 86
    operand_bits                   shift and go to state 87

state 226

    (126) retorno -> RETURN operaciones . FIN_LINEA

    FIN_LINEA       shift and go to state 248


state 227

    (18) salidas_posibles -> decl_variable .
    (93) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (94) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (95) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (52) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (70) operad_logico -> . IGUALDAD
    (71) operad_logico -> . IDENTIDAD
    (72) operad_logico -> . DIFERENTE
    (73) operad_logico -> . NO_IDENTIDAD
    (74) operad_logico -> . MAYOR
    (75) operad_logico -> . MAYOR_IGUAL
    (76) operad_logico -> . MENOR
    (77) operad_logico -> . MENOR_IGUAL
    (78) operad_logico -> . AND
    (79) operad_logico -> . OR
    (80) operad_logico -> . XOR

    FIN_LINEA       reduce using rule 18 (salidas_posibles -> decl_variable .)
    SUMA            reduce using rule 18 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 18 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 18 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 18 (salidas_posibles -> decl_variable .)
    CONJUNCION      reduce using rule 18 (salidas_posibles -> decl_variable .)
    DISYUNCION      reduce using rule 18 (salidas_posibles -> decl_variable .)
    DISYUNCION_EXC  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_IZQ reduce using rule 18 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_DER reduce using rule 18 (salidas_posibles -> decl_variable .)
    LAMBDA          shift and go to state 69
    IGUALDAD        shift and go to state 70
    IDENTIDAD       shift and go to state 71
    DIFERENTE       shift and go to state 72
    NO_IDENTIDAD    shift and go to state 73
    MAYOR           shift and go to state 74
    MAYOR_IGUAL     shift and go to state 75
    MENOR           shift and go to state 76
    MENOR_IGUAL     shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80

    operad_logico                  shift and go to state 68

state 228

    (39) datos -> ENTERO .
    (90) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (70) operad_logico -> . IGUALDAD
    (71) operad_logico -> . IDENTIDAD
    (72) operad_logico -> . DIFERENTE
    (73) operad_logico -> . NO_IDENTIDAD
    (74) operad_logico -> . MAYOR
    (75) operad_logico -> . MAYOR_IGUAL
    (76) operad_logico -> . MENOR
    (77) operad_logico -> . MENOR_IGUAL
    (78) operad_logico -> . AND
    (79) operad_logico -> . OR
    (80) operad_logico -> . XOR

    FIN_LINEA       reduce using rule 39 (datos -> ENTERO .)
    SUMA            reduce using rule 39 (datos -> ENTERO .)
    RESTA           reduce using rule 39 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 39 (datos -> ENTERO .)
    DIVISION        reduce using rule 39 (datos -> ENTERO .)
    POTENCIA        reduce using rule 39 (datos -> ENTERO .)
    MODULO          reduce using rule 39 (datos -> ENTERO .)
    CONJUNCION      reduce using rule 39 (datos -> ENTERO .)
    DISYUNCION      reduce using rule 39 (datos -> ENTERO .)
    DISYUNCION_EXC  reduce using rule 39 (datos -> ENTERO .)
    DESPLAZAR_BITS_IZQ reduce using rule 39 (datos -> ENTERO .)
    DESPLAZAR_BITS_DER reduce using rule 39 (datos -> ENTERO .)
    IGUALDAD        shift and go to state 70
    IDENTIDAD       shift and go to state 71
    DIFERENTE       shift and go to state 72
    NO_IDENTIDAD    shift and go to state 73
    MAYOR           shift and go to state 74
    MAYOR_IGUAL     shift and go to state 75
    MENOR           shift and go to state 76
    MENOR_IGUAL     shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80

    operad_logico                  shift and go to state 123

state 229

    (40) datos -> FLOTANTE .
    (91) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (70) operad_logico -> . IGUALDAD
    (71) operad_logico -> . IDENTIDAD
    (72) operad_logico -> . DIFERENTE
    (73) operad_logico -> . NO_IDENTIDAD
    (74) operad_logico -> . MAYOR
    (75) operad_logico -> . MAYOR_IGUAL
    (76) operad_logico -> . MENOR
    (77) operad_logico -> . MENOR_IGUAL
    (78) operad_logico -> . AND
    (79) operad_logico -> . OR
    (80) operad_logico -> . XOR

    FIN_LINEA       reduce using rule 40 (datos -> FLOTANTE .)
    SUMA            reduce using rule 40 (datos -> FLOTANTE .)
    RESTA           reduce using rule 40 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 40 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 40 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 40 (datos -> FLOTANTE .)
    MODULO          reduce using rule 40 (datos -> FLOTANTE .)
    CONJUNCION      reduce using rule 40 (datos -> FLOTANTE .)
    DISYUNCION      reduce using rule 40 (datos -> FLOTANTE .)
    DISYUNCION_EXC  reduce using rule 40 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_IZQ reduce using rule 40 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_DER reduce using rule 40 (datos -> FLOTANTE .)
    IGUALDAD        shift and go to state 70
    IDENTIDAD       shift and go to state 71
    DIFERENTE       shift and go to state 72
    NO_IDENTIDAD    shift and go to state 73
    MAYOR           shift and go to state 74
    MAYOR_IGUAL     shift and go to state 75
    MENOR           shift and go to state 76
    MENOR_IGUAL     shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80

    operad_logico                  shift and go to state 124

state 230

    (42) datos -> BOOLEANO .
    (92) operaciones_logicas -> BOOLEANO .

  ! reduce/reduce conflict for FIN_LINEA resolved using rule 42 (datos -> BOOLEANO .)
    FIN_LINEA       reduce using rule 42 (datos -> BOOLEANO .)
    SUMA            reduce using rule 42 (datos -> BOOLEANO .)
    RESTA           reduce using rule 42 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 42 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 42 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 42 (datos -> BOOLEANO .)
    MODULO          reduce using rule 42 (datos -> BOOLEANO .)
    CONJUNCION      reduce using rule 42 (datos -> BOOLEANO .)
    DISYUNCION      reduce using rule 42 (datos -> BOOLEANO .)
    DISYUNCION_EXC  reduce using rule 42 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_IZQ reduce using rule 42 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_DER reduce using rule 42 (datos -> BOOLEANO .)

  ! FIN_LINEA       [ reduce using rule 92 (operaciones_logicas -> BOOLEANO .) ]


state 231

    (133) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA
    (134) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    LLAVE_ABRE      shift and go to state 249


state 232

    (38) valor -> decl_variable .

    PARENTESIS_CIERRA reduce using rule 38 (valor -> decl_variable .)


state 233

    (129) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 250


state 234

    (132) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (111) bloque -> . instrucciones
    (112) bloque -> . retorno
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (125) retorno -> . RETURN salidas_posibles FIN_LINEA
    (126) retorno -> . RETURN operaciones FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    RETURN          shift and go to state 197
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    operaciones_logicas            shift and go to state 34
    bloque                         shift and go to state 251
    instrucciones                  shift and go to state 195
    retorno                        shift and go to state 196
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    salidas_posibles               shift and go to state 20
    decl_variable                  shift and go to state 17
    poppila                        shift and go to state 18
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 235

    (52) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 52 (pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA .)


state 236

    (53) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 53 (pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA .)


state 237

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA . SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    SIGNO_DOLAR     shift and go to state 252


state 238

    (43) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 253


state 239

    (44) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (111) bloque -> . instrucciones
    (112) bloque -> . retorno
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (125) retorno -> . RETURN salidas_posibles FIN_LINEA
    (126) retorno -> . RETURN operaciones FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    RETURN          shift and go to state 197
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    bloque                         shift and go to state 254
    instrucciones                  shift and go to state 195
    retorno                        shift and go to state 196
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    salidas_posibles               shift and go to state 20
    decl_variable                  shift and go to state 17
    poppila                        shift and go to state 18
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 240

    (47) parametros -> SIGNO_DOLAR IDENTIFICADOR COMA . parametros
    (46) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (47) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros

    SIGNO_DOLAR     shift and go to state 184

    parametros                     shift and go to state 255

state 241

    (61) asociacion -> datos IGUAL MAYOR datos COMA . asociacion
    (60) asociacion -> . datos IGUAL MAYOR datos
    (61) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 85

    datos                          shift and go to state 256
    asociacion                     shift and go to state 257

state 242

    (113) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 258


state 243

    (119) menor -> MENOR_IGUAL ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 259


state 244

    (120) mayor -> MAYOR_IGUAL ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 260


state 245

    (127) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 261


state 246

    (128) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL . MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    MAYOR           shift and go to state 262


state 247

    (125) retorno -> RETURN salidas_posibles FIN_LINEA .

    LLAVE_CIERRA    reduce using rule 125 (retorno -> RETURN salidas_posibles FIN_LINEA .)


state 248

    (126) retorno -> RETURN operaciones FIN_LINEA .

    LLAVE_CIERRA    reduce using rule 126 (retorno -> RETURN operaciones FIN_LINEA .)


state 249

    (133) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (134) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA if_else_cuerpo
    (111) bloque -> . instrucciones
    (112) bloque -> . retorno
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (125) retorno -> . RETURN salidas_posibles FIN_LINEA
    (126) retorno -> . RETURN operaciones FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    RETURN          shift and go to state 197
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    operaciones_logicas            shift and go to state 34
    bloque                         shift and go to state 263
    instrucciones                  shift and go to state 195
    retorno                        shift and go to state 196
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    salidas_posibles               shift and go to state 20
    decl_variable                  shift and go to state 17
    poppila                        shift and go to state 18
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 250

    (129) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 264


state 251

    (132) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 265


state 252

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR . IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    IDENTIFICADOR   shift and go to state 266


state 253

    (43) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    CLASS           reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    $end            reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 43 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 254

    (44) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 267


state 255

    (47) parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros .

    PARENTESIS_CIERRA reduce using rule 47 (parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros .)


state 256

    (60) asociacion -> datos . IGUAL MAYOR datos
    (61) asociacion -> datos . IGUAL MAYOR datos COMA asociacion

    IGUAL           shift and go to state 157


state 257

    (61) asociacion -> datos IGUAL MAYOR datos COMA asociacion .

    CORCHETE_CIERRA reduce using rule 61 (asociacion -> datos IGUAL MAYOR datos COMA asociacion .)
    PARENTESIS_CIERRA reduce using rule 61 (asociacion -> datos IGUAL MAYOR datos COMA asociacion .)


state 258

    (113) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (114) sentenciasAnidadas -> . instrucciones
    (115) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    asignacion                     shift and go to state 6
    declaracion_s                  shift and go to state 15
    sentenciasAnidadas             shift and go to state 268
    instrucciones                  shift and go to state 269
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    decl_variable                  shift and go to state 17
    poppila                        shift and go to state 18
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 259

    (119) menor -> MENOR_IGUAL ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 119 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 119 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 119 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    CONST           reduce using rule 119 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 119 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 119 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 119 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    STATIC          reduce using rule 119 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    VAR             reduce using rule 119 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)


state 260

    (120) mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 120 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 120 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 120 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    CONST           reduce using rule 120 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 120 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 120 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 120 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    STATIC          reduce using rule 120 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    VAR             reduce using rule 120 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)


state 261

    (127) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (114) sentenciasAnidadas -> . instrucciones
    (115) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    decl_variable                  shift and go to state 17
    sentenciasAnidadas             shift and go to state 270
    instrucciones                  shift and go to state 269
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    poppila                        shift and go to state 18
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 262

    (128) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR . decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 271
    variable_tipo                  shift and go to state 39

state 263

    (133) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA
    (134) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA if_else_cuerpo

    LLAVE_CIERRA    shift and go to state 272


state 264

    (129) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    decl_variable                  shift and go to state 17
    instrucciones                  shift and go to state 273
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    poppila                        shift and go to state 18
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 265

    (132) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    ELSE            reduce using rule 132 (if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ELSEIF          reduce using rule 132 (if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 266

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 274


state 267

    (44) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    CLASS           reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    $end            reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 44 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 268

    (113) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 275


state 269

    (114) sentenciasAnidadas -> instrucciones .
    (115) sentenciasAnidadas -> instrucciones . sentenciasAnidadas
    (114) sentenciasAnidadas -> . instrucciones
    (115) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    LLAVE_CIERRA    reduce using rule 114 (sentenciasAnidadas -> instrucciones .)
    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    instrucciones                  shift and go to state 269
    sentenciasAnidadas             shift and go to state 276
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    decl_variable                  shift and go to state 17
    poppila                        shift and go to state 18
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 270

    (127) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 277


state 271

    (128) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 278


state 272

    (133) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .
    (134) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA . if_else_cuerpo
    (133) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (134) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    ELSE            reduce using rule 133 (if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ELSEIF          shift and go to state 121

    if_else_cuerpo                 shift and go to state 279

state 273

    (129) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 280


state 274

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 281


state 275

    (113) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    CLASS           reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    $end            reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 113 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 276

    (115) sentenciasAnidadas -> instrucciones sentenciasAnidadas .

    LLAVE_CIERRA    reduce using rule 115 (sentenciasAnidadas -> instrucciones sentenciasAnidadas .)


state 277

    (127) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    CLASS           reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    $end            reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 127 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 278

    (128) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 282


state 279

    (134) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo .

    ELSE            reduce using rule 134 (if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo .)


state 280

    (129) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    CLASS           reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ECHO            reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    READLINE        reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FGETS           reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FSCANF          reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNCTION        reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEW             reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ARRAY           reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOREACH         reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ENTERO          reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEGACION        reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONST           reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRIVATE         reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PUBLIC          reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PROTECTED       reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STATIC          reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CADENA          reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 129 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 281

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)


state 282

    (128) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (114) sentenciasAnidadas -> . instrucciones
    (115) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcion
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL poppila FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (48) estructuras_datos -> . pila FIN_LINEA
    (49) estructuras_datos -> . arreglo FIN_LINEA
    (107) estructuras_control -> . for
    (108) estructuras_control -> . foreach
    (109) estructuras_control -> . if_else
    (110) estructuras_control -> . while
    (43) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (44) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (96) operaciones -> . operaciones_logicas
    (97) operaciones -> . operaciones_arit
    (98) operaciones -> . operaciones_bits
    (99) operaciones -> . pushpila
    (100) operaciones -> . poppila
    (121) declaracion_s -> . decl_variable crecimiento
    (122) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (50) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (54) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (55) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (56) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (57) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (58) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (59) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (113) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (127) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (128) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (130) if_else -> . if_else_inicio if_else_fin
    (131) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (129) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (90) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (91) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (92) operaciones_logicas -> . BOOLEANO
    (93) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (94) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (95) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (86) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (87) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (88) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (89) operaciones_bits -> . NEGACION salidas_posibles
    (52) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (53) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (51) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (123) crecimiento -> . INCREMENTO
    (124) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (132) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (39) datos -> . ENTERO
    (40) datos -> . FLOTANTE
    (41) datos -> . CADENA
    (42) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    BREAK           shift and go to state 16
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    SIGNO_DOLAR     shift and go to state 26
    NEW             shift and go to state 40
    ARRAY           shift and go to state 41
    CORCHETE_ABRE   shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    WHILE           shift and go to state 46
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 48
    BOOLEANO        shift and go to state 49
    NEGACION        shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    CADENA          shift and go to state 23

    decl_variable                  shift and go to state 17
    sentenciasAnidadas             shift and go to state 283
    instrucciones                  shift and go to state 269
    asignacion                     shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones                    shift and go to state 14
    declaracion_s                  shift and go to state 15
    poppila                        shift and go to state 18
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    operaciones_logicas            shift and go to state 34
    operaciones_arit               shift and go to state 35
    operaciones_bits               shift and go to state 36
    pushpila                       shift and go to state 37
    crecimiento                    shift and go to state 38
    variable_tipo                  shift and go to state 39
    if_else_inicio                 shift and go to state 45
    datos                          shift and go to state 60

state 283

    (128) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 284


state 284

    (128) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    CLASS           reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    $end            reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 128 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 230 resolved using rule (datos -> BOOLEANO)
WARNING: rejected rule (operaciones_logicas -> BOOLEANO) in state 230
