Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BACKSLASH
    PUNTO

Grammar

Rule 0     S' -> variaslineas
Rule 1     variaslineas -> programa
Rule 2     variaslineas -> programa variaslineas
Rule 3     programa -> clase
Rule 4     programa -> instrucciones
Rule 5     clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 6     instrucciones -> asignacion
Rule 7     instrucciones -> salida
Rule 8     instrucciones -> ingreso
Rule 9     instrucciones -> estructuras_datos
Rule 10    instrucciones -> estructuras_control
Rule 11    instrucciones -> funcionglobal
Rule 12    instrucciones -> COMENTARIO_LINEA
Rule 13    instrucciones -> COMENTARIO_BLOQUE
Rule 14    instrucciones -> operaciones FIN_LINEA
Rule 15    instrucciones -> declaracion_s FIN_LINEA
Rule 16    instrucciones -> BREAK FIN_LINEA
Rule 17    salidas_posibles -> datos
Rule 18    salidas_posibles -> decl_variable
Rule 19    salida -> ECHO salidas_posibles FIN_LINEA
Rule 20    salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
Rule 21    salida -> PRINT salidas_posibles FIN_LINEA
Rule 22    ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
Rule 23    ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
Rule 24    ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
Rule 25    variable_tipo -> CONST
Rule 26    variable_tipo -> PRIVATE
Rule 27    variable_tipo -> PUBLIC
Rule 28    variable_tipo -> PROTECTED
Rule 29    variable_tipo -> STATIC
Rule 30    variable_tipo -> VAR
Rule 31    decl_variable -> SIGNO_DOLAR IDENTIFICADOR
Rule 32    decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR
Rule 33    asignacion -> decl_variable IGUAL valor FIN_LINEA
Rule 34    asignacion -> decl_variable IGUAL estructuras_datos
Rule 35    asignacion -> decl_variable IGUAL explode FIN_LINEA
Rule 36    asignacion -> decl_variable IGUAL funcionuso FIN_LINEA
Rule 37    asignacion -> decl_variable IGUAL operaciones FIN_LINEA
Rule 38    valor -> datos
Rule 39    valor -> pila
Rule 40    valor -> NULO
Rule 41    valor -> decl_variable
Rule 42    valor -> opAritVar
Rule 43    datos -> ENTERO
Rule 44    datos -> FLOTANTE
Rule 45    datos -> CADENA
Rule 46    datos -> BOOLEANO
Rule 47    funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 48    funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 49    funcionglobal -> funcion
Rule 50    funcionglobal -> variable_tipo funcion
Rule 51    funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
Rule 52    funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
Rule 53    parametros -> SIGNO_DOLAR IDENTIFICADOR
Rule 54    parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros
Rule 55    estructuras_datos -> pila FIN_LINEA
Rule 56    estructuras_datos -> arreglo FIN_LINEA
Rule 57    pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 58    poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 59    pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
Rule 60    pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
Rule 61    explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA
Rule 62    explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA
Rule 63    arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 64    arreglo -> CORCHETE_ABRE CORCHETE_CIERRA
Rule 65    arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
Rule 66    arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA
Rule 67    arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
Rule 68    arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA
Rule 69    asociacion -> datos IGUAL MAYOR datos
Rule 70    asociacion -> datos IGUAL MAYOR datos COMA asociacion
Rule 71    elementos -> datos
Rule 72    elementos -> datos COMA elementos
Rule 73    operad_arit -> SUMA
Rule 74    operad_arit -> RESTA
Rule 75    operad_arit -> MULTIPLICACION
Rule 76    operad_arit -> DIVISION
Rule 77    operad_arit -> POTENCIA
Rule 78    operad_arit -> MODULO
Rule 79    operad_logico -> IGUALDAD
Rule 80    operad_logico -> IDENTIDAD
Rule 81    operad_logico -> DIFERENTE
Rule 82    operad_logico -> NO_IDENTIDAD
Rule 83    operad_logico -> MAYOR
Rule 84    operad_logico -> MAYOR_IGUAL
Rule 85    operad_logico -> MENOR
Rule 86    operad_logico -> MENOR_IGUAL
Rule 87    operad_logico -> AND
Rule 88    operad_logico -> OR
Rule 89    operad_logico -> XOR
Rule 90    operad_logico -> CONJUNCION
Rule 91    operad_logico -> DISYUNCION
Rule 92    operand_bits -> CONJUNCIONBITS
Rule 93    operand_bits -> DISYUNCIONBITS
Rule 94    operand_bits -> DISYUNCION_EXC
Rule 95    operand_bits -> DESPLAZAR_BITS_IZQ
Rule 96    operand_bits -> DESPLAZAR_BITS_DER
Rule 97    operaciones_arit -> salidas_posibles operad_arit salidas_posibles
Rule 98    operaciones_arit -> salidas_posibles operad_arit operaciones_arit
Rule 99    operaciones_bits -> salidas_posibles operand_bits salidas_posibles
Rule 100   operaciones_bits -> NEGACION salidas_posibles
Rule 101   operaciones_logicas -> ENTERO operad_logico ENTERO
Rule 102   operaciones_logicas -> FLOTANTE operad_logico FLOTANTE
Rule 103   operaciones_logicas -> BOOLEANO
Rule 104   operaciones_logicas -> decl_variable operad_logico decl_variable
Rule 105   operaciones_logicas -> decl_variable operad_logico ENTERO
Rule 106   operaciones_logicas -> decl_variable operad_logico FLOTANTE
Rule 107   operaciones_logicas -> operaciones_arit operad_logico ENTERO
Rule 108   operaciones_logicas -> operaciones_arit operad_logico FLOTANTE
Rule 109   operaciones_logicas -> funcionuso
Rule 110   operaciones_logicas -> funcionuso operad_logico funcionuso
Rule 111   operaciones_logicas -> funcionuso operad_logico operaciones_logicas
Rule 112   operaciones_logicas -> operaciones_logicas operad_logico funcionuso
Rule 113   operaciones -> operaciones_logicas
Rule 114   operaciones -> operaciones_arit
Rule 115   operaciones -> operaciones_bits
Rule 116   operaciones -> pushpila
Rule 117   operaciones -> poppila
Rule 118   paraCalculos -> ENTERO
Rule 119   paraCalculos -> FLOTANTE
Rule 120   paraCalculos -> decl_variable
Rule 121   combinarOp -> operad_arit paraCalculos
Rule 122   combinarOp -> operad_arit paraCalculos combinarOp
Rule 123   opAritVar -> paraCalculos combinarOp
Rule 124   estructuras_control -> for
Rule 125   estructuras_control -> foreach
Rule 126   estructuras_control -> if_else
Rule 127   estructuras_control -> while
Rule 128   bloque -> sentenciasAnidadas retorno
Rule 129   bloque -> sentenciasAnidadas
Rule 130   bloque -> retorno
Rule 131   for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 132   sentenciasAnidadas -> instrucciones
Rule 133   sentenciasAnidadas -> instrucciones sentenciasAnidadas
Rule 134   declaracionp -> decl_variable valorc
Rule 135   valorc -> menor
Rule 136   valorc -> mayor
Rule 137   menor -> MENOR_IGUAL ENTERO FIN_LINEA
Rule 138   menor -> MENOR_IGUAL decl_variable FIN_LINEA
Rule 139   menor -> MENOR ENTERO FIN_LINEA
Rule 140   menor -> MENOR decl_variable FIN_LINEA
Rule 141   mayor -> MAYOR_IGUAL ENTERO FIN_LINEA
Rule 142   mayor -> MENOR_IGUAL decl_variable FIN_LINEA
Rule 143   mayor -> MAYOR ENTERO FIN_LINEA
Rule 144   mayor -> MAYOR decl_variable FIN_LINEA
Rule 145   declaracion_s -> decl_variable crecimiento
Rule 146   declaracion_s -> crecimiento decl_variable
Rule 147   crecimiento -> INCREMENTO
Rule 148   crecimiento -> DECREMENTO
Rule 149   retorno -> RETURN salidas_posibles FIN_LINEA
Rule 150   retorno -> RETURN operaciones FIN_LINEA
Rule 151   foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 152   foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 153   while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 154   if_else -> if_else_inicio if_else_fin
Rule 155   if_else -> if_else_inicio if_else_cuerpo if_else_fin
Rule 156   if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 157   if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 158   if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
Rule 159   if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA

Terminals, with rules where they appear

AND                  : 87
ARRAY                : 63 65 67
AS                   : 151 152
BACKSLASH            : 
BOOLEANO             : 46 103
BREAK                : 16
CADENA               : 22 24 45 61 62
CLASS                : 5
COMA                 : 24 24 54 61 61 62 70 72
COMENTARIO_BLOQUE    : 13
COMENTARIO_LINEA     : 12
CONJUNCION           : 90
CONJUNCIONBITS       : 92
CONST                : 25
CORCHETE_ABRE        : 64 66 68
CORCHETE_CIERRA      : 64 66 68
DECREMENTO           : 148
DESPLAZAR_BITS_DER   : 96
DESPLAZAR_BITS_IZQ   : 95
DIFERENTE            : 81
DISYUNCION           : 91
DISYUNCIONBITS       : 93
DISYUNCION_EXC       : 94
DIVISION             : 76
ECHO                 : 19
ELSE                 : 159
ELSEIF               : 157 158
ENTERO               : 43 61 101 101 105 107 118 137 139 141 143
EXPLODE              : 61 62
FGETS                : 23
FIN_LINEA            : 14 15 16 19 20 21 22 23 24 33 35 36 37 55 56 137 138 139 140 141 142 143 144 149 150
FLOTANTE             : 44 102 102 106 108 119
FOR                  : 131
FOREACH              : 151 152
FSCANF               : 24
FUNCTION             : 47 48
IDENTIDAD            : 80
IDENTIFICADOR        : 5 24 31 32 47 48 51 52 53 54
IF                   : 156
IGUAL                : 33 34 35 36 37 69 70 152
IGUALDAD             : 79
INCREMENTO           : 147
LAMBDA               : 58 59 60
LLAVE_ABRE           : 5 47 48 131 151 152 153 156 157 158 159
LLAVE_CIERRA         : 5 47 48 131 151 152 153 156 157 158 159
MAYOR                : 69 70 83 143 144 152
MAYOR_IGUAL          : 84 141
MENOR                : 85 139 140
MENOR_IGUAL          : 86 137 138 142
MODULO               : 78
MULTIPLICACION       : 75
NEGACION             : 100
NEW                  : 57
NO_IDENTIDAD         : 82
NULO                 : 40
OR                   : 88
PARENTESIS_ABRE      : 20 22 23 24 47 48 51 52 57 58 59 60 61 62 63 65 67 131 151 152 153 156 157 158
PARENTESIS_CIERRA    : 20 22 23 24 47 48 51 52 57 58 59 60 61 62 63 65 67 131 151 152 153 156 157 158
POP                  : 58
POTENCIA             : 77
PRINT                : 20 21
PRIVATE              : 26
PROTECTED            : 28
PUBLIC               : 27
PUNTO                : 
PUSH                 : 59 60
READLINE             : 22
RESTA                : 74
RETURN               : 149 150
SIGNO_DOLAR          : 24 31 32 53 54
STACK                : 57
STATIC               : 29
STDIN                : 23 24
SUMA                 : 73
VAR                  : 30
WHILE                : 153
XOR                  : 89
error                : 

Nonterminals, with rules where they appear

arreglo              : 56
asignacion           : 6 131
asociacion           : 67 68 70
bloque               : 47 48 156 157 158 159
clase                : 3
combinarOp           : 122 123
crecimiento          : 145 146
datos                : 17 38 69 69 70 70 71 72
decl_variable        : 18 33 34 35 36 37 41 58 59 60 104 104 105 106 120 134 138 140 142 144 145 146 151 151 152 152 152 153
declaracion_s        : 15 131
declaracionp         : 131
elementos            : 52 65 66 72
estructuras_control  : 10
estructuras_datos    : 9 34
explode              : 35
for                  : 124
foreach              : 125
funcion              : 49 50
funcionglobal        : 11
funcionuso           : 36 109 110 110 111 112
if_else              : 126
if_else_cuerpo       : 155 158
if_else_fin          : 154 155
if_else_inicio       : 154 155
ingreso              : 8
instrucciones        : 4 132 133 153
mayor                : 136
menor                : 135
opAritVar            : 42
operaciones          : 14 37 150
operaciones_arit     : 60 98 107 108 114
operaciones_bits     : 115
operaciones_logicas  : 111 112 113 156 157 158
operad_arit          : 97 98 121 122
operad_logico        : 101 102 104 105 106 107 108 110 111 112 153
operand_bits         : 99
paraCalculos         : 121 122 123
parametros           : 48 51 54
pila                 : 39 55
poppila              : 117
programa             : 1 2
pushpila             : 116
retorno              : 128 130
salida               : 7
salidas_posibles     : 19 20 21 61 62 97 97 98 99 99 100 149
sentenciasAnidadas   : 5 128 129 131 133 151 152
valor                : 33 59 153
valorc               : 134
variable_tipo        : 32 50
variaslineas         : 2 0
while                : 127

Parsing method: LALR

state 0

    (0) S' -> . variaslineas
    (1) variaslineas -> . programa
    (2) variaslineas -> . programa variaslineas
    (3) programa -> . clase
    (4) programa -> . instrucciones
    (5) clase -> . CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    CLASS           shift and go to state 5
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    variaslineas                   shift and go to state 1
    programa                       shift and go to state 2
    clase                          shift and go to state 3
    instrucciones                  shift and go to state 4
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    decl_variable                  shift and go to state 18
    funcionuso                     shift and go to state 19
    salidas_posibles               shift and go to state 21
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 1

    (0) S' -> variaslineas .



state 2

    (1) variaslineas -> programa .
    (2) variaslineas -> programa . variaslineas
    (1) variaslineas -> . programa
    (2) variaslineas -> . programa variaslineas
    (3) programa -> . clase
    (4) programa -> . instrucciones
    (5) clase -> . CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    $end            reduce using rule 1 (variaslineas -> programa .)
    CLASS           shift and go to state 5
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    programa                       shift and go to state 2
    variaslineas                   shift and go to state 64
    clase                          shift and go to state 3
    instrucciones                  shift and go to state 4
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    decl_variable                  shift and go to state 18
    funcionuso                     shift and go to state 19
    salidas_posibles               shift and go to state 21
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 3

    (3) programa -> clase .

    CLASS           reduce using rule 3 (programa -> clase .)
    COMENTARIO_LINEA reduce using rule 3 (programa -> clase .)
    COMENTARIO_BLOQUE reduce using rule 3 (programa -> clase .)
    BREAK           reduce using rule 3 (programa -> clase .)
    ECHO            reduce using rule 3 (programa -> clase .)
    PRINT           reduce using rule 3 (programa -> clase .)
    READLINE        reduce using rule 3 (programa -> clase .)
    FGETS           reduce using rule 3 (programa -> clase .)
    FSCANF          reduce using rule 3 (programa -> clase .)
    SIGNO_DOLAR     reduce using rule 3 (programa -> clase .)
    NEW             reduce using rule 3 (programa -> clase .)
    ARRAY           reduce using rule 3 (programa -> clase .)
    CORCHETE_ABRE   reduce using rule 3 (programa -> clase .)
    FOR             reduce using rule 3 (programa -> clase .)
    FOREACH         reduce using rule 3 (programa -> clase .)
    WHILE           reduce using rule 3 (programa -> clase .)
    FUNCTION        reduce using rule 3 (programa -> clase .)
    CONST           reduce using rule 3 (programa -> clase .)
    PRIVATE         reduce using rule 3 (programa -> clase .)
    PUBLIC          reduce using rule 3 (programa -> clase .)
    PROTECTED       reduce using rule 3 (programa -> clase .)
    STATIC          reduce using rule 3 (programa -> clase .)
    VAR             reduce using rule 3 (programa -> clase .)
    ENTERO          reduce using rule 3 (programa -> clase .)
    FLOTANTE        reduce using rule 3 (programa -> clase .)
    BOOLEANO        reduce using rule 3 (programa -> clase .)
    NEGACION        reduce using rule 3 (programa -> clase .)
    INCREMENTO      reduce using rule 3 (programa -> clase .)
    DECREMENTO      reduce using rule 3 (programa -> clase .)
    IF              reduce using rule 3 (programa -> clase .)
    IDENTIFICADOR   reduce using rule 3 (programa -> clase .)
    CADENA          reduce using rule 3 (programa -> clase .)
    $end            reduce using rule 3 (programa -> clase .)


state 4

    (4) programa -> instrucciones .

    CLASS           reduce using rule 4 (programa -> instrucciones .)
    COMENTARIO_LINEA reduce using rule 4 (programa -> instrucciones .)
    COMENTARIO_BLOQUE reduce using rule 4 (programa -> instrucciones .)
    BREAK           reduce using rule 4 (programa -> instrucciones .)
    ECHO            reduce using rule 4 (programa -> instrucciones .)
    PRINT           reduce using rule 4 (programa -> instrucciones .)
    READLINE        reduce using rule 4 (programa -> instrucciones .)
    FGETS           reduce using rule 4 (programa -> instrucciones .)
    FSCANF          reduce using rule 4 (programa -> instrucciones .)
    SIGNO_DOLAR     reduce using rule 4 (programa -> instrucciones .)
    NEW             reduce using rule 4 (programa -> instrucciones .)
    ARRAY           reduce using rule 4 (programa -> instrucciones .)
    CORCHETE_ABRE   reduce using rule 4 (programa -> instrucciones .)
    FOR             reduce using rule 4 (programa -> instrucciones .)
    FOREACH         reduce using rule 4 (programa -> instrucciones .)
    WHILE           reduce using rule 4 (programa -> instrucciones .)
    FUNCTION        reduce using rule 4 (programa -> instrucciones .)
    CONST           reduce using rule 4 (programa -> instrucciones .)
    PRIVATE         reduce using rule 4 (programa -> instrucciones .)
    PUBLIC          reduce using rule 4 (programa -> instrucciones .)
    PROTECTED       reduce using rule 4 (programa -> instrucciones .)
    STATIC          reduce using rule 4 (programa -> instrucciones .)
    VAR             reduce using rule 4 (programa -> instrucciones .)
    ENTERO          reduce using rule 4 (programa -> instrucciones .)
    FLOTANTE        reduce using rule 4 (programa -> instrucciones .)
    BOOLEANO        reduce using rule 4 (programa -> instrucciones .)
    NEGACION        reduce using rule 4 (programa -> instrucciones .)
    INCREMENTO      reduce using rule 4 (programa -> instrucciones .)
    DECREMENTO      reduce using rule 4 (programa -> instrucciones .)
    IF              reduce using rule 4 (programa -> instrucciones .)
    IDENTIFICADOR   reduce using rule 4 (programa -> instrucciones .)
    CADENA          reduce using rule 4 (programa -> instrucciones .)
    $end            reduce using rule 4 (programa -> instrucciones .)


state 5

    (5) clase -> CLASS . IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 65


state 6

    (51) funcionuso -> IDENTIFICADOR . PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> IDENTIFICADOR . PARENTESIS_ABRE elementos PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 66


state 7

    (6) instrucciones -> asignacion .

    CLASS           reduce using rule 6 (instrucciones -> asignacion .)
    COMENTARIO_LINEA reduce using rule 6 (instrucciones -> asignacion .)
    COMENTARIO_BLOQUE reduce using rule 6 (instrucciones -> asignacion .)
    BREAK           reduce using rule 6 (instrucciones -> asignacion .)
    ECHO            reduce using rule 6 (instrucciones -> asignacion .)
    PRINT           reduce using rule 6 (instrucciones -> asignacion .)
    READLINE        reduce using rule 6 (instrucciones -> asignacion .)
    FGETS           reduce using rule 6 (instrucciones -> asignacion .)
    FSCANF          reduce using rule 6 (instrucciones -> asignacion .)
    SIGNO_DOLAR     reduce using rule 6 (instrucciones -> asignacion .)
    NEW             reduce using rule 6 (instrucciones -> asignacion .)
    ARRAY           reduce using rule 6 (instrucciones -> asignacion .)
    CORCHETE_ABRE   reduce using rule 6 (instrucciones -> asignacion .)
    FOR             reduce using rule 6 (instrucciones -> asignacion .)
    FOREACH         reduce using rule 6 (instrucciones -> asignacion .)
    WHILE           reduce using rule 6 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 6 (instrucciones -> asignacion .)
    CONST           reduce using rule 6 (instrucciones -> asignacion .)
    PRIVATE         reduce using rule 6 (instrucciones -> asignacion .)
    PUBLIC          reduce using rule 6 (instrucciones -> asignacion .)
    PROTECTED       reduce using rule 6 (instrucciones -> asignacion .)
    STATIC          reduce using rule 6 (instrucciones -> asignacion .)
    VAR             reduce using rule 6 (instrucciones -> asignacion .)
    ENTERO          reduce using rule 6 (instrucciones -> asignacion .)
    FLOTANTE        reduce using rule 6 (instrucciones -> asignacion .)
    BOOLEANO        reduce using rule 6 (instrucciones -> asignacion .)
    NEGACION        reduce using rule 6 (instrucciones -> asignacion .)
    INCREMENTO      reduce using rule 6 (instrucciones -> asignacion .)
    DECREMENTO      reduce using rule 6 (instrucciones -> asignacion .)
    IF              reduce using rule 6 (instrucciones -> asignacion .)
    IDENTIFICADOR   reduce using rule 6 (instrucciones -> asignacion .)
    CADENA          reduce using rule 6 (instrucciones -> asignacion .)
    $end            reduce using rule 6 (instrucciones -> asignacion .)
    LLAVE_CIERRA    reduce using rule 6 (instrucciones -> asignacion .)
    RETURN          reduce using rule 6 (instrucciones -> asignacion .)


state 8

    (7) instrucciones -> salida .

    CLASS           reduce using rule 7 (instrucciones -> salida .)
    COMENTARIO_LINEA reduce using rule 7 (instrucciones -> salida .)
    COMENTARIO_BLOQUE reduce using rule 7 (instrucciones -> salida .)
    BREAK           reduce using rule 7 (instrucciones -> salida .)
    ECHO            reduce using rule 7 (instrucciones -> salida .)
    PRINT           reduce using rule 7 (instrucciones -> salida .)
    READLINE        reduce using rule 7 (instrucciones -> salida .)
    FGETS           reduce using rule 7 (instrucciones -> salida .)
    FSCANF          reduce using rule 7 (instrucciones -> salida .)
    SIGNO_DOLAR     reduce using rule 7 (instrucciones -> salida .)
    NEW             reduce using rule 7 (instrucciones -> salida .)
    ARRAY           reduce using rule 7 (instrucciones -> salida .)
    CORCHETE_ABRE   reduce using rule 7 (instrucciones -> salida .)
    FOR             reduce using rule 7 (instrucciones -> salida .)
    FOREACH         reduce using rule 7 (instrucciones -> salida .)
    WHILE           reduce using rule 7 (instrucciones -> salida .)
    FUNCTION        reduce using rule 7 (instrucciones -> salida .)
    CONST           reduce using rule 7 (instrucciones -> salida .)
    PRIVATE         reduce using rule 7 (instrucciones -> salida .)
    PUBLIC          reduce using rule 7 (instrucciones -> salida .)
    PROTECTED       reduce using rule 7 (instrucciones -> salida .)
    STATIC          reduce using rule 7 (instrucciones -> salida .)
    VAR             reduce using rule 7 (instrucciones -> salida .)
    ENTERO          reduce using rule 7 (instrucciones -> salida .)
    FLOTANTE        reduce using rule 7 (instrucciones -> salida .)
    BOOLEANO        reduce using rule 7 (instrucciones -> salida .)
    NEGACION        reduce using rule 7 (instrucciones -> salida .)
    INCREMENTO      reduce using rule 7 (instrucciones -> salida .)
    DECREMENTO      reduce using rule 7 (instrucciones -> salida .)
    IF              reduce using rule 7 (instrucciones -> salida .)
    IDENTIFICADOR   reduce using rule 7 (instrucciones -> salida .)
    CADENA          reduce using rule 7 (instrucciones -> salida .)
    $end            reduce using rule 7 (instrucciones -> salida .)
    LLAVE_CIERRA    reduce using rule 7 (instrucciones -> salida .)
    RETURN          reduce using rule 7 (instrucciones -> salida .)


state 9

    (8) instrucciones -> ingreso .

    CLASS           reduce using rule 8 (instrucciones -> ingreso .)
    COMENTARIO_LINEA reduce using rule 8 (instrucciones -> ingreso .)
    COMENTARIO_BLOQUE reduce using rule 8 (instrucciones -> ingreso .)
    BREAK           reduce using rule 8 (instrucciones -> ingreso .)
    ECHO            reduce using rule 8 (instrucciones -> ingreso .)
    PRINT           reduce using rule 8 (instrucciones -> ingreso .)
    READLINE        reduce using rule 8 (instrucciones -> ingreso .)
    FGETS           reduce using rule 8 (instrucciones -> ingreso .)
    FSCANF          reduce using rule 8 (instrucciones -> ingreso .)
    SIGNO_DOLAR     reduce using rule 8 (instrucciones -> ingreso .)
    NEW             reduce using rule 8 (instrucciones -> ingreso .)
    ARRAY           reduce using rule 8 (instrucciones -> ingreso .)
    CORCHETE_ABRE   reduce using rule 8 (instrucciones -> ingreso .)
    FOR             reduce using rule 8 (instrucciones -> ingreso .)
    FOREACH         reduce using rule 8 (instrucciones -> ingreso .)
    WHILE           reduce using rule 8 (instrucciones -> ingreso .)
    FUNCTION        reduce using rule 8 (instrucciones -> ingreso .)
    CONST           reduce using rule 8 (instrucciones -> ingreso .)
    PRIVATE         reduce using rule 8 (instrucciones -> ingreso .)
    PUBLIC          reduce using rule 8 (instrucciones -> ingreso .)
    PROTECTED       reduce using rule 8 (instrucciones -> ingreso .)
    STATIC          reduce using rule 8 (instrucciones -> ingreso .)
    VAR             reduce using rule 8 (instrucciones -> ingreso .)
    ENTERO          reduce using rule 8 (instrucciones -> ingreso .)
    FLOTANTE        reduce using rule 8 (instrucciones -> ingreso .)
    BOOLEANO        reduce using rule 8 (instrucciones -> ingreso .)
    NEGACION        reduce using rule 8 (instrucciones -> ingreso .)
    INCREMENTO      reduce using rule 8 (instrucciones -> ingreso .)
    DECREMENTO      reduce using rule 8 (instrucciones -> ingreso .)
    IF              reduce using rule 8 (instrucciones -> ingreso .)
    IDENTIFICADOR   reduce using rule 8 (instrucciones -> ingreso .)
    CADENA          reduce using rule 8 (instrucciones -> ingreso .)
    $end            reduce using rule 8 (instrucciones -> ingreso .)
    LLAVE_CIERRA    reduce using rule 8 (instrucciones -> ingreso .)
    RETURN          reduce using rule 8 (instrucciones -> ingreso .)


state 10

    (9) instrucciones -> estructuras_datos .

    CLASS           reduce using rule 9 (instrucciones -> estructuras_datos .)
    COMENTARIO_LINEA reduce using rule 9 (instrucciones -> estructuras_datos .)
    COMENTARIO_BLOQUE reduce using rule 9 (instrucciones -> estructuras_datos .)
    BREAK           reduce using rule 9 (instrucciones -> estructuras_datos .)
    ECHO            reduce using rule 9 (instrucciones -> estructuras_datos .)
    PRINT           reduce using rule 9 (instrucciones -> estructuras_datos .)
    READLINE        reduce using rule 9 (instrucciones -> estructuras_datos .)
    FGETS           reduce using rule 9 (instrucciones -> estructuras_datos .)
    FSCANF          reduce using rule 9 (instrucciones -> estructuras_datos .)
    SIGNO_DOLAR     reduce using rule 9 (instrucciones -> estructuras_datos .)
    NEW             reduce using rule 9 (instrucciones -> estructuras_datos .)
    ARRAY           reduce using rule 9 (instrucciones -> estructuras_datos .)
    CORCHETE_ABRE   reduce using rule 9 (instrucciones -> estructuras_datos .)
    FOR             reduce using rule 9 (instrucciones -> estructuras_datos .)
    FOREACH         reduce using rule 9 (instrucciones -> estructuras_datos .)
    WHILE           reduce using rule 9 (instrucciones -> estructuras_datos .)
    FUNCTION        reduce using rule 9 (instrucciones -> estructuras_datos .)
    CONST           reduce using rule 9 (instrucciones -> estructuras_datos .)
    PRIVATE         reduce using rule 9 (instrucciones -> estructuras_datos .)
    PUBLIC          reduce using rule 9 (instrucciones -> estructuras_datos .)
    PROTECTED       reduce using rule 9 (instrucciones -> estructuras_datos .)
    STATIC          reduce using rule 9 (instrucciones -> estructuras_datos .)
    VAR             reduce using rule 9 (instrucciones -> estructuras_datos .)
    ENTERO          reduce using rule 9 (instrucciones -> estructuras_datos .)
    FLOTANTE        reduce using rule 9 (instrucciones -> estructuras_datos .)
    BOOLEANO        reduce using rule 9 (instrucciones -> estructuras_datos .)
    NEGACION        reduce using rule 9 (instrucciones -> estructuras_datos .)
    INCREMENTO      reduce using rule 9 (instrucciones -> estructuras_datos .)
    DECREMENTO      reduce using rule 9 (instrucciones -> estructuras_datos .)
    IF              reduce using rule 9 (instrucciones -> estructuras_datos .)
    IDENTIFICADOR   reduce using rule 9 (instrucciones -> estructuras_datos .)
    CADENA          reduce using rule 9 (instrucciones -> estructuras_datos .)
    $end            reduce using rule 9 (instrucciones -> estructuras_datos .)
    LLAVE_CIERRA    reduce using rule 9 (instrucciones -> estructuras_datos .)
    RETURN          reduce using rule 9 (instrucciones -> estructuras_datos .)


state 11

    (10) instrucciones -> estructuras_control .

    CLASS           reduce using rule 10 (instrucciones -> estructuras_control .)
    COMENTARIO_LINEA reduce using rule 10 (instrucciones -> estructuras_control .)
    COMENTARIO_BLOQUE reduce using rule 10 (instrucciones -> estructuras_control .)
    BREAK           reduce using rule 10 (instrucciones -> estructuras_control .)
    ECHO            reduce using rule 10 (instrucciones -> estructuras_control .)
    PRINT           reduce using rule 10 (instrucciones -> estructuras_control .)
    READLINE        reduce using rule 10 (instrucciones -> estructuras_control .)
    FGETS           reduce using rule 10 (instrucciones -> estructuras_control .)
    FSCANF          reduce using rule 10 (instrucciones -> estructuras_control .)
    SIGNO_DOLAR     reduce using rule 10 (instrucciones -> estructuras_control .)
    NEW             reduce using rule 10 (instrucciones -> estructuras_control .)
    ARRAY           reduce using rule 10 (instrucciones -> estructuras_control .)
    CORCHETE_ABRE   reduce using rule 10 (instrucciones -> estructuras_control .)
    FOR             reduce using rule 10 (instrucciones -> estructuras_control .)
    FOREACH         reduce using rule 10 (instrucciones -> estructuras_control .)
    WHILE           reduce using rule 10 (instrucciones -> estructuras_control .)
    FUNCTION        reduce using rule 10 (instrucciones -> estructuras_control .)
    CONST           reduce using rule 10 (instrucciones -> estructuras_control .)
    PRIVATE         reduce using rule 10 (instrucciones -> estructuras_control .)
    PUBLIC          reduce using rule 10 (instrucciones -> estructuras_control .)
    PROTECTED       reduce using rule 10 (instrucciones -> estructuras_control .)
    STATIC          reduce using rule 10 (instrucciones -> estructuras_control .)
    VAR             reduce using rule 10 (instrucciones -> estructuras_control .)
    ENTERO          reduce using rule 10 (instrucciones -> estructuras_control .)
    FLOTANTE        reduce using rule 10 (instrucciones -> estructuras_control .)
    BOOLEANO        reduce using rule 10 (instrucciones -> estructuras_control .)
    NEGACION        reduce using rule 10 (instrucciones -> estructuras_control .)
    INCREMENTO      reduce using rule 10 (instrucciones -> estructuras_control .)
    DECREMENTO      reduce using rule 10 (instrucciones -> estructuras_control .)
    IF              reduce using rule 10 (instrucciones -> estructuras_control .)
    IDENTIFICADOR   reduce using rule 10 (instrucciones -> estructuras_control .)
    CADENA          reduce using rule 10 (instrucciones -> estructuras_control .)
    $end            reduce using rule 10 (instrucciones -> estructuras_control .)
    LLAVE_CIERRA    reduce using rule 10 (instrucciones -> estructuras_control .)
    RETURN          reduce using rule 10 (instrucciones -> estructuras_control .)


state 12

    (11) instrucciones -> funcionglobal .

    CLASS           reduce using rule 11 (instrucciones -> funcionglobal .)
    COMENTARIO_LINEA reduce using rule 11 (instrucciones -> funcionglobal .)
    COMENTARIO_BLOQUE reduce using rule 11 (instrucciones -> funcionglobal .)
    BREAK           reduce using rule 11 (instrucciones -> funcionglobal .)
    ECHO            reduce using rule 11 (instrucciones -> funcionglobal .)
    PRINT           reduce using rule 11 (instrucciones -> funcionglobal .)
    READLINE        reduce using rule 11 (instrucciones -> funcionglobal .)
    FGETS           reduce using rule 11 (instrucciones -> funcionglobal .)
    FSCANF          reduce using rule 11 (instrucciones -> funcionglobal .)
    SIGNO_DOLAR     reduce using rule 11 (instrucciones -> funcionglobal .)
    NEW             reduce using rule 11 (instrucciones -> funcionglobal .)
    ARRAY           reduce using rule 11 (instrucciones -> funcionglobal .)
    CORCHETE_ABRE   reduce using rule 11 (instrucciones -> funcionglobal .)
    FOR             reduce using rule 11 (instrucciones -> funcionglobal .)
    FOREACH         reduce using rule 11 (instrucciones -> funcionglobal .)
    WHILE           reduce using rule 11 (instrucciones -> funcionglobal .)
    FUNCTION        reduce using rule 11 (instrucciones -> funcionglobal .)
    CONST           reduce using rule 11 (instrucciones -> funcionglobal .)
    PRIVATE         reduce using rule 11 (instrucciones -> funcionglobal .)
    PUBLIC          reduce using rule 11 (instrucciones -> funcionglobal .)
    PROTECTED       reduce using rule 11 (instrucciones -> funcionglobal .)
    STATIC          reduce using rule 11 (instrucciones -> funcionglobal .)
    VAR             reduce using rule 11 (instrucciones -> funcionglobal .)
    ENTERO          reduce using rule 11 (instrucciones -> funcionglobal .)
    FLOTANTE        reduce using rule 11 (instrucciones -> funcionglobal .)
    BOOLEANO        reduce using rule 11 (instrucciones -> funcionglobal .)
    NEGACION        reduce using rule 11 (instrucciones -> funcionglobal .)
    INCREMENTO      reduce using rule 11 (instrucciones -> funcionglobal .)
    DECREMENTO      reduce using rule 11 (instrucciones -> funcionglobal .)
    IF              reduce using rule 11 (instrucciones -> funcionglobal .)
    IDENTIFICADOR   reduce using rule 11 (instrucciones -> funcionglobal .)
    CADENA          reduce using rule 11 (instrucciones -> funcionglobal .)
    $end            reduce using rule 11 (instrucciones -> funcionglobal .)
    LLAVE_CIERRA    reduce using rule 11 (instrucciones -> funcionglobal .)
    RETURN          reduce using rule 11 (instrucciones -> funcionglobal .)


state 13

    (12) instrucciones -> COMENTARIO_LINEA .

    CLASS           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    COMENTARIO_LINEA reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    BREAK           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    ECHO            reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PRINT           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    READLINE        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FGETS           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FSCANF          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    SIGNO_DOLAR     reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    NEW             reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    ARRAY           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    CORCHETE_ABRE   reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FOR             reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FOREACH         reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    WHILE           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FUNCTION        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    CONST           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PRIVATE         reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PUBLIC          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PROTECTED       reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    STATIC          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    VAR             reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    ENTERO          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FLOTANTE        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    BOOLEANO        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    NEGACION        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    INCREMENTO      reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    DECREMENTO      reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    IF              reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    IDENTIFICADOR   reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    CADENA          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    $end            reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    LLAVE_CIERRA    reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    RETURN          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)


state 14

    (13) instrucciones -> COMENTARIO_BLOQUE .

    CLASS           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    COMENTARIO_LINEA reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    COMENTARIO_BLOQUE reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    BREAK           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    ECHO            reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PRINT           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    READLINE        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FGETS           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FSCANF          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    SIGNO_DOLAR     reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    NEW             reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    ARRAY           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    CORCHETE_ABRE   reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FOR             reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FOREACH         reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    WHILE           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FUNCTION        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    CONST           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PRIVATE         reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PUBLIC          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PROTECTED       reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    STATIC          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    VAR             reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    ENTERO          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FLOTANTE        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    BOOLEANO        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    NEGACION        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    INCREMENTO      reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    DECREMENTO      reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    IF              reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    IDENTIFICADOR   reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    CADENA          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    $end            reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    LLAVE_CIERRA    reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    RETURN          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)


state 15

    (14) instrucciones -> operaciones . FIN_LINEA

    FIN_LINEA       shift and go to state 67


state 16

    (15) instrucciones -> declaracion_s . FIN_LINEA

    FIN_LINEA       shift and go to state 68


state 17

    (16) instrucciones -> BREAK . FIN_LINEA

    FIN_LINEA       shift and go to state 69


state 18

    (33) asignacion -> decl_variable . IGUAL valor FIN_LINEA
    (34) asignacion -> decl_variable . IGUAL estructuras_datos
    (35) asignacion -> decl_variable . IGUAL explode FIN_LINEA
    (36) asignacion -> decl_variable . IGUAL funcionuso FIN_LINEA
    (37) asignacion -> decl_variable . IGUAL operaciones FIN_LINEA
    (145) declaracion_s -> decl_variable . crecimiento
    (104) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (105) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (106) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (59) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (18) salidas_posibles -> decl_variable .
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    IGUAL           shift and go to state 70
    LAMBDA          shift and go to state 73
    SUMA            reduce using rule 18 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 18 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 18 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 18 (salidas_posibles -> decl_variable .)
    CONJUNCIONBITS  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DISYUNCIONBITS  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DISYUNCION_EXC  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_IZQ reduce using rule 18 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_DER reduce using rule 18 (salidas_posibles -> decl_variable .)
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    crecimiento                    shift and go to state 71
    operad_logico                  shift and go to state 72

state 19

    (109) operaciones_logicas -> funcionuso .
    (110) operaciones_logicas -> funcionuso . operad_logico funcionuso
    (111) operaciones_logicas -> funcionuso . operad_logico operaciones_logicas
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for IDENTIDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for NO_IDENTIDAD resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for CONJUNCION resolved as shift
  ! shift/reduce conflict for DISYUNCION resolved as shift
    FIN_LINEA       reduce using rule 109 (operaciones_logicas -> funcionuso .)
    PARENTESIS_CIERRA reduce using rule 109 (operaciones_logicas -> funcionuso .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

  ! IGUALDAD        [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! IDENTIDAD       [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! DIFERENTE       [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! NO_IDENTIDAD    [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR           [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR_IGUAL     [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MENOR           [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MENOR_IGUAL     [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! AND             [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! OR              [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! XOR             [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! CONJUNCION      [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! DISYUNCION      [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]

    operad_logico                  shift and go to state 87

state 20

    (19) salida -> ECHO . salidas_posibles FIN_LINEA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    salidas_posibles               shift and go to state 88
    datos                          shift and go to state 63
    decl_variable                  shift and go to state 89
    variable_tipo                  shift and go to state 93

state 21

    (97) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (98) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (99) operaciones_bits -> salidas_posibles . operand_bits salidas_posibles
    (73) operad_arit -> . SUMA
    (74) operad_arit -> . RESTA
    (75) operad_arit -> . MULTIPLICACION
    (76) operad_arit -> . DIVISION
    (77) operad_arit -> . POTENCIA
    (78) operad_arit -> . MODULO
    (92) operand_bits -> . CONJUNCIONBITS
    (93) operand_bits -> . DISYUNCIONBITS
    (94) operand_bits -> . DISYUNCION_EXC
    (95) operand_bits -> . DESPLAZAR_BITS_IZQ
    (96) operand_bits -> . DESPLAZAR_BITS_DER

    SUMA            shift and go to state 96
    RESTA           shift and go to state 97
    MULTIPLICACION  shift and go to state 98
    DIVISION        shift and go to state 99
    POTENCIA        shift and go to state 100
    MODULO          shift and go to state 101
    CONJUNCIONBITS  shift and go to state 102
    DISYUNCIONBITS  shift and go to state 103
    DISYUNCION_EXC  shift and go to state 104
    DESPLAZAR_BITS_IZQ shift and go to state 105
    DESPLAZAR_BITS_DER shift and go to state 106

    operad_arit                    shift and go to state 94
    operand_bits                   shift and go to state 95

state 22

    (20) salida -> PRINT . PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> PRINT . salidas_posibles FIN_LINEA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    PARENTESIS_ABRE shift and go to state 107
    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    salidas_posibles               shift and go to state 108
    datos                          shift and go to state 63
    decl_variable                  shift and go to state 89
    variable_tipo                  shift and go to state 93

state 23

    (22) ingreso -> READLINE . PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 109


state 24

    (45) datos -> CADENA .

    SUMA            reduce using rule 45 (datos -> CADENA .)
    RESTA           reduce using rule 45 (datos -> CADENA .)
    MULTIPLICACION  reduce using rule 45 (datos -> CADENA .)
    DIVISION        reduce using rule 45 (datos -> CADENA .)
    POTENCIA        reduce using rule 45 (datos -> CADENA .)
    MODULO          reduce using rule 45 (datos -> CADENA .)
    CONJUNCIONBITS  reduce using rule 45 (datos -> CADENA .)
    DISYUNCIONBITS  reduce using rule 45 (datos -> CADENA .)
    DISYUNCION_EXC  reduce using rule 45 (datos -> CADENA .)
    DESPLAZAR_BITS_IZQ reduce using rule 45 (datos -> CADENA .)
    DESPLAZAR_BITS_DER reduce using rule 45 (datos -> CADENA .)
    FIN_LINEA       reduce using rule 45 (datos -> CADENA .)
    COMA            reduce using rule 45 (datos -> CADENA .)
    IGUAL           reduce using rule 45 (datos -> CADENA .)
    CORCHETE_CIERRA reduce using rule 45 (datos -> CADENA .)
    PARENTESIS_CIERRA reduce using rule 45 (datos -> CADENA .)
    IGUALDAD        reduce using rule 45 (datos -> CADENA .)
    IDENTIDAD       reduce using rule 45 (datos -> CADENA .)
    DIFERENTE       reduce using rule 45 (datos -> CADENA .)
    NO_IDENTIDAD    reduce using rule 45 (datos -> CADENA .)
    MAYOR           reduce using rule 45 (datos -> CADENA .)
    MAYOR_IGUAL     reduce using rule 45 (datos -> CADENA .)
    MENOR           reduce using rule 45 (datos -> CADENA .)
    MENOR_IGUAL     reduce using rule 45 (datos -> CADENA .)
    AND             reduce using rule 45 (datos -> CADENA .)
    OR              reduce using rule 45 (datos -> CADENA .)
    XOR             reduce using rule 45 (datos -> CADENA .)
    CONJUNCION      reduce using rule 45 (datos -> CADENA .)
    DISYUNCION      reduce using rule 45 (datos -> CADENA .)


state 25

    (23) ingreso -> FGETS . PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 110


state 26

    (24) ingreso -> FSCANF . PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 111


state 27

    (31) decl_variable -> SIGNO_DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 112


state 28

    (55) estructuras_datos -> pila . FIN_LINEA

    FIN_LINEA       shift and go to state 113


state 29

    (56) estructuras_datos -> arreglo . FIN_LINEA

    FIN_LINEA       shift and go to state 114


state 30

    (124) estructuras_control -> for .

    CLASS           reduce using rule 124 (estructuras_control -> for .)
    COMENTARIO_LINEA reduce using rule 124 (estructuras_control -> for .)
    COMENTARIO_BLOQUE reduce using rule 124 (estructuras_control -> for .)
    BREAK           reduce using rule 124 (estructuras_control -> for .)
    ECHO            reduce using rule 124 (estructuras_control -> for .)
    PRINT           reduce using rule 124 (estructuras_control -> for .)
    READLINE        reduce using rule 124 (estructuras_control -> for .)
    FGETS           reduce using rule 124 (estructuras_control -> for .)
    FSCANF          reduce using rule 124 (estructuras_control -> for .)
    SIGNO_DOLAR     reduce using rule 124 (estructuras_control -> for .)
    NEW             reduce using rule 124 (estructuras_control -> for .)
    ARRAY           reduce using rule 124 (estructuras_control -> for .)
    CORCHETE_ABRE   reduce using rule 124 (estructuras_control -> for .)
    FOR             reduce using rule 124 (estructuras_control -> for .)
    FOREACH         reduce using rule 124 (estructuras_control -> for .)
    WHILE           reduce using rule 124 (estructuras_control -> for .)
    FUNCTION        reduce using rule 124 (estructuras_control -> for .)
    CONST           reduce using rule 124 (estructuras_control -> for .)
    PRIVATE         reduce using rule 124 (estructuras_control -> for .)
    PUBLIC          reduce using rule 124 (estructuras_control -> for .)
    PROTECTED       reduce using rule 124 (estructuras_control -> for .)
    STATIC          reduce using rule 124 (estructuras_control -> for .)
    VAR             reduce using rule 124 (estructuras_control -> for .)
    ENTERO          reduce using rule 124 (estructuras_control -> for .)
    FLOTANTE        reduce using rule 124 (estructuras_control -> for .)
    BOOLEANO        reduce using rule 124 (estructuras_control -> for .)
    NEGACION        reduce using rule 124 (estructuras_control -> for .)
    INCREMENTO      reduce using rule 124 (estructuras_control -> for .)
    DECREMENTO      reduce using rule 124 (estructuras_control -> for .)
    IF              reduce using rule 124 (estructuras_control -> for .)
    IDENTIFICADOR   reduce using rule 124 (estructuras_control -> for .)
    CADENA          reduce using rule 124 (estructuras_control -> for .)
    $end            reduce using rule 124 (estructuras_control -> for .)
    LLAVE_CIERRA    reduce using rule 124 (estructuras_control -> for .)
    RETURN          reduce using rule 124 (estructuras_control -> for .)


state 31

    (125) estructuras_control -> foreach .

    CLASS           reduce using rule 125 (estructuras_control -> foreach .)
    COMENTARIO_LINEA reduce using rule 125 (estructuras_control -> foreach .)
    COMENTARIO_BLOQUE reduce using rule 125 (estructuras_control -> foreach .)
    BREAK           reduce using rule 125 (estructuras_control -> foreach .)
    ECHO            reduce using rule 125 (estructuras_control -> foreach .)
    PRINT           reduce using rule 125 (estructuras_control -> foreach .)
    READLINE        reduce using rule 125 (estructuras_control -> foreach .)
    FGETS           reduce using rule 125 (estructuras_control -> foreach .)
    FSCANF          reduce using rule 125 (estructuras_control -> foreach .)
    SIGNO_DOLAR     reduce using rule 125 (estructuras_control -> foreach .)
    NEW             reduce using rule 125 (estructuras_control -> foreach .)
    ARRAY           reduce using rule 125 (estructuras_control -> foreach .)
    CORCHETE_ABRE   reduce using rule 125 (estructuras_control -> foreach .)
    FOR             reduce using rule 125 (estructuras_control -> foreach .)
    FOREACH         reduce using rule 125 (estructuras_control -> foreach .)
    WHILE           reduce using rule 125 (estructuras_control -> foreach .)
    FUNCTION        reduce using rule 125 (estructuras_control -> foreach .)
    CONST           reduce using rule 125 (estructuras_control -> foreach .)
    PRIVATE         reduce using rule 125 (estructuras_control -> foreach .)
    PUBLIC          reduce using rule 125 (estructuras_control -> foreach .)
    PROTECTED       reduce using rule 125 (estructuras_control -> foreach .)
    STATIC          reduce using rule 125 (estructuras_control -> foreach .)
    VAR             reduce using rule 125 (estructuras_control -> foreach .)
    ENTERO          reduce using rule 125 (estructuras_control -> foreach .)
    FLOTANTE        reduce using rule 125 (estructuras_control -> foreach .)
    BOOLEANO        reduce using rule 125 (estructuras_control -> foreach .)
    NEGACION        reduce using rule 125 (estructuras_control -> foreach .)
    INCREMENTO      reduce using rule 125 (estructuras_control -> foreach .)
    DECREMENTO      reduce using rule 125 (estructuras_control -> foreach .)
    IF              reduce using rule 125 (estructuras_control -> foreach .)
    IDENTIFICADOR   reduce using rule 125 (estructuras_control -> foreach .)
    CADENA          reduce using rule 125 (estructuras_control -> foreach .)
    $end            reduce using rule 125 (estructuras_control -> foreach .)
    LLAVE_CIERRA    reduce using rule 125 (estructuras_control -> foreach .)
    RETURN          reduce using rule 125 (estructuras_control -> foreach .)


state 32

    (126) estructuras_control -> if_else .

    CLASS           reduce using rule 126 (estructuras_control -> if_else .)
    COMENTARIO_LINEA reduce using rule 126 (estructuras_control -> if_else .)
    COMENTARIO_BLOQUE reduce using rule 126 (estructuras_control -> if_else .)
    BREAK           reduce using rule 126 (estructuras_control -> if_else .)
    ECHO            reduce using rule 126 (estructuras_control -> if_else .)
    PRINT           reduce using rule 126 (estructuras_control -> if_else .)
    READLINE        reduce using rule 126 (estructuras_control -> if_else .)
    FGETS           reduce using rule 126 (estructuras_control -> if_else .)
    FSCANF          reduce using rule 126 (estructuras_control -> if_else .)
    SIGNO_DOLAR     reduce using rule 126 (estructuras_control -> if_else .)
    NEW             reduce using rule 126 (estructuras_control -> if_else .)
    ARRAY           reduce using rule 126 (estructuras_control -> if_else .)
    CORCHETE_ABRE   reduce using rule 126 (estructuras_control -> if_else .)
    FOR             reduce using rule 126 (estructuras_control -> if_else .)
    FOREACH         reduce using rule 126 (estructuras_control -> if_else .)
    WHILE           reduce using rule 126 (estructuras_control -> if_else .)
    FUNCTION        reduce using rule 126 (estructuras_control -> if_else .)
    CONST           reduce using rule 126 (estructuras_control -> if_else .)
    PRIVATE         reduce using rule 126 (estructuras_control -> if_else .)
    PUBLIC          reduce using rule 126 (estructuras_control -> if_else .)
    PROTECTED       reduce using rule 126 (estructuras_control -> if_else .)
    STATIC          reduce using rule 126 (estructuras_control -> if_else .)
    VAR             reduce using rule 126 (estructuras_control -> if_else .)
    ENTERO          reduce using rule 126 (estructuras_control -> if_else .)
    FLOTANTE        reduce using rule 126 (estructuras_control -> if_else .)
    BOOLEANO        reduce using rule 126 (estructuras_control -> if_else .)
    NEGACION        reduce using rule 126 (estructuras_control -> if_else .)
    INCREMENTO      reduce using rule 126 (estructuras_control -> if_else .)
    DECREMENTO      reduce using rule 126 (estructuras_control -> if_else .)
    IF              reduce using rule 126 (estructuras_control -> if_else .)
    IDENTIFICADOR   reduce using rule 126 (estructuras_control -> if_else .)
    CADENA          reduce using rule 126 (estructuras_control -> if_else .)
    $end            reduce using rule 126 (estructuras_control -> if_else .)
    LLAVE_CIERRA    reduce using rule 126 (estructuras_control -> if_else .)
    RETURN          reduce using rule 126 (estructuras_control -> if_else .)


state 33

    (127) estructuras_control -> while .

    CLASS           reduce using rule 127 (estructuras_control -> while .)
    COMENTARIO_LINEA reduce using rule 127 (estructuras_control -> while .)
    COMENTARIO_BLOQUE reduce using rule 127 (estructuras_control -> while .)
    BREAK           reduce using rule 127 (estructuras_control -> while .)
    ECHO            reduce using rule 127 (estructuras_control -> while .)
    PRINT           reduce using rule 127 (estructuras_control -> while .)
    READLINE        reduce using rule 127 (estructuras_control -> while .)
    FGETS           reduce using rule 127 (estructuras_control -> while .)
    FSCANF          reduce using rule 127 (estructuras_control -> while .)
    SIGNO_DOLAR     reduce using rule 127 (estructuras_control -> while .)
    NEW             reduce using rule 127 (estructuras_control -> while .)
    ARRAY           reduce using rule 127 (estructuras_control -> while .)
    CORCHETE_ABRE   reduce using rule 127 (estructuras_control -> while .)
    FOR             reduce using rule 127 (estructuras_control -> while .)
    FOREACH         reduce using rule 127 (estructuras_control -> while .)
    WHILE           reduce using rule 127 (estructuras_control -> while .)
    FUNCTION        reduce using rule 127 (estructuras_control -> while .)
    CONST           reduce using rule 127 (estructuras_control -> while .)
    PRIVATE         reduce using rule 127 (estructuras_control -> while .)
    PUBLIC          reduce using rule 127 (estructuras_control -> while .)
    PROTECTED       reduce using rule 127 (estructuras_control -> while .)
    STATIC          reduce using rule 127 (estructuras_control -> while .)
    VAR             reduce using rule 127 (estructuras_control -> while .)
    ENTERO          reduce using rule 127 (estructuras_control -> while .)
    FLOTANTE        reduce using rule 127 (estructuras_control -> while .)
    BOOLEANO        reduce using rule 127 (estructuras_control -> while .)
    NEGACION        reduce using rule 127 (estructuras_control -> while .)
    INCREMENTO      reduce using rule 127 (estructuras_control -> while .)
    DECREMENTO      reduce using rule 127 (estructuras_control -> while .)
    IF              reduce using rule 127 (estructuras_control -> while .)
    IDENTIFICADOR   reduce using rule 127 (estructuras_control -> while .)
    CADENA          reduce using rule 127 (estructuras_control -> while .)
    $end            reduce using rule 127 (estructuras_control -> while .)
    LLAVE_CIERRA    reduce using rule 127 (estructuras_control -> while .)
    RETURN          reduce using rule 127 (estructuras_control -> while .)


state 34

    (49) funcionglobal -> funcion .

    CLASS           reduce using rule 49 (funcionglobal -> funcion .)
    COMENTARIO_LINEA reduce using rule 49 (funcionglobal -> funcion .)
    COMENTARIO_BLOQUE reduce using rule 49 (funcionglobal -> funcion .)
    BREAK           reduce using rule 49 (funcionglobal -> funcion .)
    ECHO            reduce using rule 49 (funcionglobal -> funcion .)
    PRINT           reduce using rule 49 (funcionglobal -> funcion .)
    READLINE        reduce using rule 49 (funcionglobal -> funcion .)
    FGETS           reduce using rule 49 (funcionglobal -> funcion .)
    FSCANF          reduce using rule 49 (funcionglobal -> funcion .)
    SIGNO_DOLAR     reduce using rule 49 (funcionglobal -> funcion .)
    NEW             reduce using rule 49 (funcionglobal -> funcion .)
    ARRAY           reduce using rule 49 (funcionglobal -> funcion .)
    CORCHETE_ABRE   reduce using rule 49 (funcionglobal -> funcion .)
    FOR             reduce using rule 49 (funcionglobal -> funcion .)
    FOREACH         reduce using rule 49 (funcionglobal -> funcion .)
    WHILE           reduce using rule 49 (funcionglobal -> funcion .)
    FUNCTION        reduce using rule 49 (funcionglobal -> funcion .)
    CONST           reduce using rule 49 (funcionglobal -> funcion .)
    PRIVATE         reduce using rule 49 (funcionglobal -> funcion .)
    PUBLIC          reduce using rule 49 (funcionglobal -> funcion .)
    PROTECTED       reduce using rule 49 (funcionglobal -> funcion .)
    STATIC          reduce using rule 49 (funcionglobal -> funcion .)
    VAR             reduce using rule 49 (funcionglobal -> funcion .)
    ENTERO          reduce using rule 49 (funcionglobal -> funcion .)
    FLOTANTE        reduce using rule 49 (funcionglobal -> funcion .)
    BOOLEANO        reduce using rule 49 (funcionglobal -> funcion .)
    NEGACION        reduce using rule 49 (funcionglobal -> funcion .)
    INCREMENTO      reduce using rule 49 (funcionglobal -> funcion .)
    DECREMENTO      reduce using rule 49 (funcionglobal -> funcion .)
    IF              reduce using rule 49 (funcionglobal -> funcion .)
    IDENTIFICADOR   reduce using rule 49 (funcionglobal -> funcion .)
    CADENA          reduce using rule 49 (funcionglobal -> funcion .)
    $end            reduce using rule 49 (funcionglobal -> funcion .)
    LLAVE_CIERRA    reduce using rule 49 (funcionglobal -> funcion .)
    RETURN          reduce using rule 49 (funcionglobal -> funcion .)


state 35

    (50) funcionglobal -> variable_tipo . funcion
    (32) decl_variable -> variable_tipo . SIGNO_DOLAR IDENTIFICADOR
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    SIGNO_DOLAR     shift and go to state 116
    FUNCTION        shift and go to state 49

    funcion                        shift and go to state 115

state 36

    (113) operaciones -> operaciones_logicas .
    (112) operaciones_logicas -> operaciones_logicas . operad_logico funcionuso
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    FIN_LINEA       reduce using rule 113 (operaciones -> operaciones_logicas .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 117

state 37

    (114) operaciones -> operaciones_arit .
    (107) operaciones_logicas -> operaciones_arit . operad_logico ENTERO
    (108) operaciones_logicas -> operaciones_arit . operad_logico FLOTANTE
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    FIN_LINEA       reduce using rule 114 (operaciones -> operaciones_arit .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 118

state 38

    (115) operaciones -> operaciones_bits .

    FIN_LINEA       reduce using rule 115 (operaciones -> operaciones_bits .)


state 39

    (116) operaciones -> pushpila .

    FIN_LINEA       reduce using rule 116 (operaciones -> pushpila .)


state 40

    (117) operaciones -> poppila .

    FIN_LINEA       reduce using rule 117 (operaciones -> poppila .)


state 41

    (146) declaracion_s -> crecimiento . decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 119
    variable_tipo                  shift and go to state 93

state 42

    (57) pila -> NEW . STACK PARENTESIS_ABRE PARENTESIS_CIERRA

    STACK           shift and go to state 120


state 43

    (63) arreglo -> ARRAY . PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> ARRAY . PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (67) arreglo -> ARRAY . PARENTESIS_ABRE asociacion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 121


state 44

    (64) arreglo -> CORCHETE_ABRE . CORCHETE_CIERRA
    (66) arreglo -> CORCHETE_ABRE . elementos CORCHETE_CIERRA
    (68) arreglo -> CORCHETE_ABRE . asociacion CORCHETE_CIERRA
    (71) elementos -> . datos
    (72) elementos -> . datos COMA elementos
    (69) asociacion -> . datos IGUAL MAYOR datos
    (70) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    CORCHETE_CIERRA shift and go to state 122
    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92

    elementos                      shift and go to state 123
    asociacion                     shift and go to state 124
    datos                          shift and go to state 125

state 45

    (131) for -> FOR . PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 126


state 46

    (151) foreach -> FOREACH . PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> FOREACH . PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 127


state 47

    (154) if_else -> if_else_inicio . if_else_fin
    (155) if_else -> if_else_inicio . if_else_cuerpo if_else_fin
    (159) if_else_fin -> . ELSE LLAVE_ABRE bloque LLAVE_CIERRA
    (157) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (158) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    ELSE            shift and go to state 130
    ELSEIF          shift and go to state 131

    if_else_fin                    shift and go to state 128
    if_else_cuerpo                 shift and go to state 129

state 48

    (153) while -> WHILE . PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 132


state 49

    (47) funcion -> FUNCTION . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> FUNCTION . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 133


state 50

    (25) variable_tipo -> CONST .

    SIGNO_DOLAR     reduce using rule 25 (variable_tipo -> CONST .)
    FUNCTION        reduce using rule 25 (variable_tipo -> CONST .)


state 51

    (26) variable_tipo -> PRIVATE .

    SIGNO_DOLAR     reduce using rule 26 (variable_tipo -> PRIVATE .)
    FUNCTION        reduce using rule 26 (variable_tipo -> PRIVATE .)


state 52

    (27) variable_tipo -> PUBLIC .

    SIGNO_DOLAR     reduce using rule 27 (variable_tipo -> PUBLIC .)
    FUNCTION        reduce using rule 27 (variable_tipo -> PUBLIC .)


state 53

    (28) variable_tipo -> PROTECTED .

    SIGNO_DOLAR     reduce using rule 28 (variable_tipo -> PROTECTED .)
    FUNCTION        reduce using rule 28 (variable_tipo -> PROTECTED .)


state 54

    (29) variable_tipo -> STATIC .

    SIGNO_DOLAR     reduce using rule 29 (variable_tipo -> STATIC .)
    FUNCTION        reduce using rule 29 (variable_tipo -> STATIC .)


state 55

    (30) variable_tipo -> VAR .

    SIGNO_DOLAR     reduce using rule 30 (variable_tipo -> VAR .)
    FUNCTION        reduce using rule 30 (variable_tipo -> VAR .)


state 56

    (101) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (43) datos -> ENTERO .
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    SUMA            reduce using rule 43 (datos -> ENTERO .)
    RESTA           reduce using rule 43 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 43 (datos -> ENTERO .)
    DIVISION        reduce using rule 43 (datos -> ENTERO .)
    POTENCIA        reduce using rule 43 (datos -> ENTERO .)
    MODULO          reduce using rule 43 (datos -> ENTERO .)
    CONJUNCIONBITS  reduce using rule 43 (datos -> ENTERO .)
    DISYUNCIONBITS  reduce using rule 43 (datos -> ENTERO .)
    DISYUNCION_EXC  reduce using rule 43 (datos -> ENTERO .)
    DESPLAZAR_BITS_IZQ reduce using rule 43 (datos -> ENTERO .)
    DESPLAZAR_BITS_DER reduce using rule 43 (datos -> ENTERO .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 134

state 57

    (102) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (44) datos -> FLOTANTE .
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    SUMA            reduce using rule 44 (datos -> FLOTANTE .)
    RESTA           reduce using rule 44 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 44 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 44 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 44 (datos -> FLOTANTE .)
    MODULO          reduce using rule 44 (datos -> FLOTANTE .)
    CONJUNCIONBITS  reduce using rule 44 (datos -> FLOTANTE .)
    DISYUNCIONBITS  reduce using rule 44 (datos -> FLOTANTE .)
    DISYUNCION_EXC  reduce using rule 44 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_IZQ reduce using rule 44 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_DER reduce using rule 44 (datos -> FLOTANTE .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 135

state 58

    (103) operaciones_logicas -> BOOLEANO .
    (46) datos -> BOOLEANO .

    IGUALDAD        reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    IDENTIDAD       reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    DIFERENTE       reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    NO_IDENTIDAD    reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    MAYOR           reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    MAYOR_IGUAL     reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    MENOR           reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    MENOR_IGUAL     reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    AND             reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    OR              reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    XOR             reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    CONJUNCION      reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    DISYUNCION      reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    FIN_LINEA       reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    PARENTESIS_CIERRA reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    SUMA            reduce using rule 46 (datos -> BOOLEANO .)
    RESTA           reduce using rule 46 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 46 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 46 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 46 (datos -> BOOLEANO .)
    MODULO          reduce using rule 46 (datos -> BOOLEANO .)
    CONJUNCIONBITS  reduce using rule 46 (datos -> BOOLEANO .)
    DISYUNCIONBITS  reduce using rule 46 (datos -> BOOLEANO .)
    DISYUNCION_EXC  reduce using rule 46 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_IZQ reduce using rule 46 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_DER reduce using rule 46 (datos -> BOOLEANO .)


state 59

    (100) operaciones_bits -> NEGACION . salidas_posibles
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    salidas_posibles               shift and go to state 136
    datos                          shift and go to state 63
    decl_variable                  shift and go to state 89
    variable_tipo                  shift and go to state 93

state 60

    (147) crecimiento -> INCREMENTO .

    SIGNO_DOLAR     reduce using rule 147 (crecimiento -> INCREMENTO .)
    CONST           reduce using rule 147 (crecimiento -> INCREMENTO .)
    PRIVATE         reduce using rule 147 (crecimiento -> INCREMENTO .)
    PUBLIC          reduce using rule 147 (crecimiento -> INCREMENTO .)
    PROTECTED       reduce using rule 147 (crecimiento -> INCREMENTO .)
    STATIC          reduce using rule 147 (crecimiento -> INCREMENTO .)
    VAR             reduce using rule 147 (crecimiento -> INCREMENTO .)
    FIN_LINEA       reduce using rule 147 (crecimiento -> INCREMENTO .)
    PARENTESIS_CIERRA reduce using rule 147 (crecimiento -> INCREMENTO .)


state 61

    (148) crecimiento -> DECREMENTO .

    SIGNO_DOLAR     reduce using rule 148 (crecimiento -> DECREMENTO .)
    CONST           reduce using rule 148 (crecimiento -> DECREMENTO .)
    PRIVATE         reduce using rule 148 (crecimiento -> DECREMENTO .)
    PUBLIC          reduce using rule 148 (crecimiento -> DECREMENTO .)
    PROTECTED       reduce using rule 148 (crecimiento -> DECREMENTO .)
    STATIC          reduce using rule 148 (crecimiento -> DECREMENTO .)
    VAR             reduce using rule 148 (crecimiento -> DECREMENTO .)
    FIN_LINEA       reduce using rule 148 (crecimiento -> DECREMENTO .)
    PARENTESIS_CIERRA reduce using rule 148 (crecimiento -> DECREMENTO .)


state 62

    (156) if_else_inicio -> IF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 137


state 63

    (17) salidas_posibles -> datos .

    SUMA            reduce using rule 17 (salidas_posibles -> datos .)
    RESTA           reduce using rule 17 (salidas_posibles -> datos .)
    MULTIPLICACION  reduce using rule 17 (salidas_posibles -> datos .)
    DIVISION        reduce using rule 17 (salidas_posibles -> datos .)
    POTENCIA        reduce using rule 17 (salidas_posibles -> datos .)
    MODULO          reduce using rule 17 (salidas_posibles -> datos .)
    CONJUNCIONBITS  reduce using rule 17 (salidas_posibles -> datos .)
    DISYUNCIONBITS  reduce using rule 17 (salidas_posibles -> datos .)
    DISYUNCION_EXC  reduce using rule 17 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_IZQ reduce using rule 17 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_DER reduce using rule 17 (salidas_posibles -> datos .)
    FIN_LINEA       reduce using rule 17 (salidas_posibles -> datos .)
    IGUALDAD        reduce using rule 17 (salidas_posibles -> datos .)
    IDENTIDAD       reduce using rule 17 (salidas_posibles -> datos .)
    DIFERENTE       reduce using rule 17 (salidas_posibles -> datos .)
    NO_IDENTIDAD    reduce using rule 17 (salidas_posibles -> datos .)
    MAYOR           reduce using rule 17 (salidas_posibles -> datos .)
    MAYOR_IGUAL     reduce using rule 17 (salidas_posibles -> datos .)
    MENOR           reduce using rule 17 (salidas_posibles -> datos .)
    MENOR_IGUAL     reduce using rule 17 (salidas_posibles -> datos .)
    AND             reduce using rule 17 (salidas_posibles -> datos .)
    OR              reduce using rule 17 (salidas_posibles -> datos .)
    XOR             reduce using rule 17 (salidas_posibles -> datos .)
    CONJUNCION      reduce using rule 17 (salidas_posibles -> datos .)
    DISYUNCION      reduce using rule 17 (salidas_posibles -> datos .)
    PARENTESIS_CIERRA reduce using rule 17 (salidas_posibles -> datos .)
    COMA            reduce using rule 17 (salidas_posibles -> datos .)


state 64

    (2) variaslineas -> programa variaslineas .

    $end            reduce using rule 2 (variaslineas -> programa variaslineas .)


state 65

    (5) clase -> CLASS IDENTIFICADOR . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 138


state 66

    (51) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE . parametros PARENTESIS_CIERRA
    (52) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE . elementos PARENTESIS_CIERRA
    (53) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (54) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros
    (71) elementos -> . datos
    (72) elementos -> . datos COMA elementos
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    SIGNO_DOLAR     shift and go to state 141
    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92

    parametros                     shift and go to state 139
    elementos                      shift and go to state 140
    datos                          shift and go to state 142

state 67

    (14) instrucciones -> operaciones FIN_LINEA .

    CLASS           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    BREAK           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    ECHO            reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PRINT           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    READLINE        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FGETS           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FSCANF          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    NEW             reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    ARRAY           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FOR             reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FOREACH         reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    WHILE           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FUNCTION        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    CONST           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PRIVATE         reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PUBLIC          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PROTECTED       reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    STATIC          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    VAR             reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    ENTERO          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FLOTANTE        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    BOOLEANO        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    NEGACION        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    INCREMENTO      reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    DECREMENTO      reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    IF              reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    CADENA          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    $end            reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    RETURN          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)


state 68

    (15) instrucciones -> declaracion_s FIN_LINEA .

    CLASS           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    BREAK           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    ECHO            reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PRINT           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    READLINE        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FGETS           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FSCANF          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    NEW             reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    ARRAY           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FOR             reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FOREACH         reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    WHILE           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FUNCTION        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    CONST           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PRIVATE         reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PUBLIC          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PROTECTED       reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    STATIC          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    VAR             reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    ENTERO          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FLOTANTE        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    BOOLEANO        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    NEGACION        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    INCREMENTO      reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    DECREMENTO      reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    IF              reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    CADENA          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    $end            reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    RETURN          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)


state 69

    (16) instrucciones -> BREAK FIN_LINEA .

    CLASS           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    BREAK           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    ECHO            reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PRINT           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    READLINE        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FGETS           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FSCANF          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    NEW             reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    ARRAY           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FOR             reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FOREACH         reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    WHILE           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FUNCTION        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    CONST           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PRIVATE         reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PUBLIC          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PROTECTED       reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    STATIC          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    VAR             reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    ENTERO          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FLOTANTE        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    BOOLEANO        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    NEGACION        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    INCREMENTO      reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    DECREMENTO      reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    IF              reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    CADENA          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    $end            reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    RETURN          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)


state 70

    (33) asignacion -> decl_variable IGUAL . valor FIN_LINEA
    (34) asignacion -> decl_variable IGUAL . estructuras_datos
    (35) asignacion -> decl_variable IGUAL . explode FIN_LINEA
    (36) asignacion -> decl_variable IGUAL . funcionuso FIN_LINEA
    (37) asignacion -> decl_variable IGUAL . operaciones FIN_LINEA
    (38) valor -> . datos
    (39) valor -> . pila
    (40) valor -> . NULO
    (41) valor -> . decl_variable
    (42) valor -> . opAritVar
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (61) explode -> . EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA
    (62) explode -> . EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (123) opAritVar -> . paraCalculos combinarOp
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (118) paraCalculos -> . ENTERO
    (119) paraCalculos -> . FLOTANTE
    (120) paraCalculos -> . decl_variable
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable

    NULO            shift and go to state 151
    EXPLODE         shift and go to state 153
    IDENTIFICADOR   shift and go to state 6
    ENTERO          shift and go to state 154
    FLOTANTE        shift and go to state 155
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 156
    NEW             shift and go to state 42
    SIGNO_DOLAR     shift and go to state 27
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    NEGACION        shift and go to state 59
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 143
    valor                          shift and go to state 144
    estructuras_datos              shift and go to state 145
    explode                        shift and go to state 146
    funcionuso                     shift and go to state 147
    operaciones                    shift and go to state 148
    datos                          shift and go to state 149
    pila                           shift and go to state 150
    opAritVar                      shift and go to state 152
    arreglo                        shift and go to state 29
    salidas_posibles               shift and go to state 21
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    variable_tipo                  shift and go to state 93
    paraCalculos                   shift and go to state 157

state 71

    (145) declaracion_s -> decl_variable crecimiento .

    FIN_LINEA       reduce using rule 145 (declaracion_s -> decl_variable crecimiento .)
    PARENTESIS_CIERRA reduce using rule 145 (declaracion_s -> decl_variable crecimiento .)


state 72

    (104) operaciones_logicas -> decl_variable operad_logico . decl_variable
    (105) operaciones_logicas -> decl_variable operad_logico . ENTERO
    (106) operaciones_logicas -> decl_variable operad_logico . FLOTANTE
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 159
    FLOTANTE        shift and go to state 160
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 158
    variable_tipo                  shift and go to state 93

state 73

    (59) pushpila -> decl_variable LAMBDA . PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> decl_variable LAMBDA . PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> decl_variable LAMBDA . POP PARENTESIS_ABRE PARENTESIS_CIERRA

    PUSH            shift and go to state 161
    POP             shift and go to state 162


state 74

    (79) operad_logico -> IGUALDAD .

    ENTERO          reduce using rule 79 (operad_logico -> IGUALDAD .)
    FLOTANTE        reduce using rule 79 (operad_logico -> IGUALDAD .)
    SIGNO_DOLAR     reduce using rule 79 (operad_logico -> IGUALDAD .)
    CONST           reduce using rule 79 (operad_logico -> IGUALDAD .)
    PRIVATE         reduce using rule 79 (operad_logico -> IGUALDAD .)
    PUBLIC          reduce using rule 79 (operad_logico -> IGUALDAD .)
    PROTECTED       reduce using rule 79 (operad_logico -> IGUALDAD .)
    STATIC          reduce using rule 79 (operad_logico -> IGUALDAD .)
    VAR             reduce using rule 79 (operad_logico -> IGUALDAD .)
    IDENTIFICADOR   reduce using rule 79 (operad_logico -> IGUALDAD .)
    BOOLEANO        reduce using rule 79 (operad_logico -> IGUALDAD .)
    CADENA          reduce using rule 79 (operad_logico -> IGUALDAD .)
    NULO            reduce using rule 79 (operad_logico -> IGUALDAD .)
    NEW             reduce using rule 79 (operad_logico -> IGUALDAD .)


state 75

    (80) operad_logico -> IDENTIDAD .

    ENTERO          reduce using rule 80 (operad_logico -> IDENTIDAD .)
    FLOTANTE        reduce using rule 80 (operad_logico -> IDENTIDAD .)
    SIGNO_DOLAR     reduce using rule 80 (operad_logico -> IDENTIDAD .)
    CONST           reduce using rule 80 (operad_logico -> IDENTIDAD .)
    PRIVATE         reduce using rule 80 (operad_logico -> IDENTIDAD .)
    PUBLIC          reduce using rule 80 (operad_logico -> IDENTIDAD .)
    PROTECTED       reduce using rule 80 (operad_logico -> IDENTIDAD .)
    STATIC          reduce using rule 80 (operad_logico -> IDENTIDAD .)
    VAR             reduce using rule 80 (operad_logico -> IDENTIDAD .)
    IDENTIFICADOR   reduce using rule 80 (operad_logico -> IDENTIDAD .)
    BOOLEANO        reduce using rule 80 (operad_logico -> IDENTIDAD .)
    CADENA          reduce using rule 80 (operad_logico -> IDENTIDAD .)
    NULO            reduce using rule 80 (operad_logico -> IDENTIDAD .)
    NEW             reduce using rule 80 (operad_logico -> IDENTIDAD .)


state 76

    (81) operad_logico -> DIFERENTE .

    ENTERO          reduce using rule 81 (operad_logico -> DIFERENTE .)
    FLOTANTE        reduce using rule 81 (operad_logico -> DIFERENTE .)
    SIGNO_DOLAR     reduce using rule 81 (operad_logico -> DIFERENTE .)
    CONST           reduce using rule 81 (operad_logico -> DIFERENTE .)
    PRIVATE         reduce using rule 81 (operad_logico -> DIFERENTE .)
    PUBLIC          reduce using rule 81 (operad_logico -> DIFERENTE .)
    PROTECTED       reduce using rule 81 (operad_logico -> DIFERENTE .)
    STATIC          reduce using rule 81 (operad_logico -> DIFERENTE .)
    VAR             reduce using rule 81 (operad_logico -> DIFERENTE .)
    IDENTIFICADOR   reduce using rule 81 (operad_logico -> DIFERENTE .)
    BOOLEANO        reduce using rule 81 (operad_logico -> DIFERENTE .)
    CADENA          reduce using rule 81 (operad_logico -> DIFERENTE .)
    NULO            reduce using rule 81 (operad_logico -> DIFERENTE .)
    NEW             reduce using rule 81 (operad_logico -> DIFERENTE .)


state 77

    (82) operad_logico -> NO_IDENTIDAD .

    ENTERO          reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    FLOTANTE        reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    SIGNO_DOLAR     reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    CONST           reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    PRIVATE         reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    PUBLIC          reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    PROTECTED       reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    STATIC          reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    VAR             reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    IDENTIFICADOR   reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    BOOLEANO        reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    CADENA          reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    NULO            reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)
    NEW             reduce using rule 82 (operad_logico -> NO_IDENTIDAD .)


state 78

    (83) operad_logico -> MAYOR .

    ENTERO          reduce using rule 83 (operad_logico -> MAYOR .)
    FLOTANTE        reduce using rule 83 (operad_logico -> MAYOR .)
    SIGNO_DOLAR     reduce using rule 83 (operad_logico -> MAYOR .)
    CONST           reduce using rule 83 (operad_logico -> MAYOR .)
    PRIVATE         reduce using rule 83 (operad_logico -> MAYOR .)
    PUBLIC          reduce using rule 83 (operad_logico -> MAYOR .)
    PROTECTED       reduce using rule 83 (operad_logico -> MAYOR .)
    STATIC          reduce using rule 83 (operad_logico -> MAYOR .)
    VAR             reduce using rule 83 (operad_logico -> MAYOR .)
    IDENTIFICADOR   reduce using rule 83 (operad_logico -> MAYOR .)
    BOOLEANO        reduce using rule 83 (operad_logico -> MAYOR .)
    CADENA          reduce using rule 83 (operad_logico -> MAYOR .)
    NULO            reduce using rule 83 (operad_logico -> MAYOR .)
    NEW             reduce using rule 83 (operad_logico -> MAYOR .)


state 79

    (84) operad_logico -> MAYOR_IGUAL .

    ENTERO          reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    SIGNO_DOLAR     reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    CONST           reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    PRIVATE         reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    PUBLIC          reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    PROTECTED       reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    STATIC          reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    VAR             reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    IDENTIFICADOR   reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    BOOLEANO        reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    CADENA          reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    NULO            reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)
    NEW             reduce using rule 84 (operad_logico -> MAYOR_IGUAL .)


state 80

    (85) operad_logico -> MENOR .

    ENTERO          reduce using rule 85 (operad_logico -> MENOR .)
    FLOTANTE        reduce using rule 85 (operad_logico -> MENOR .)
    SIGNO_DOLAR     reduce using rule 85 (operad_logico -> MENOR .)
    CONST           reduce using rule 85 (operad_logico -> MENOR .)
    PRIVATE         reduce using rule 85 (operad_logico -> MENOR .)
    PUBLIC          reduce using rule 85 (operad_logico -> MENOR .)
    PROTECTED       reduce using rule 85 (operad_logico -> MENOR .)
    STATIC          reduce using rule 85 (operad_logico -> MENOR .)
    VAR             reduce using rule 85 (operad_logico -> MENOR .)
    IDENTIFICADOR   reduce using rule 85 (operad_logico -> MENOR .)
    BOOLEANO        reduce using rule 85 (operad_logico -> MENOR .)
    CADENA          reduce using rule 85 (operad_logico -> MENOR .)
    NULO            reduce using rule 85 (operad_logico -> MENOR .)
    NEW             reduce using rule 85 (operad_logico -> MENOR .)


state 81

    (86) operad_logico -> MENOR_IGUAL .

    ENTERO          reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    SIGNO_DOLAR     reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    CONST           reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    PRIVATE         reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    PUBLIC          reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    PROTECTED       reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    STATIC          reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    VAR             reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    IDENTIFICADOR   reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    BOOLEANO        reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    CADENA          reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    NULO            reduce using rule 86 (operad_logico -> MENOR_IGUAL .)
    NEW             reduce using rule 86 (operad_logico -> MENOR_IGUAL .)


state 82

    (87) operad_logico -> AND .

    ENTERO          reduce using rule 87 (operad_logico -> AND .)
    FLOTANTE        reduce using rule 87 (operad_logico -> AND .)
    SIGNO_DOLAR     reduce using rule 87 (operad_logico -> AND .)
    CONST           reduce using rule 87 (operad_logico -> AND .)
    PRIVATE         reduce using rule 87 (operad_logico -> AND .)
    PUBLIC          reduce using rule 87 (operad_logico -> AND .)
    PROTECTED       reduce using rule 87 (operad_logico -> AND .)
    STATIC          reduce using rule 87 (operad_logico -> AND .)
    VAR             reduce using rule 87 (operad_logico -> AND .)
    IDENTIFICADOR   reduce using rule 87 (operad_logico -> AND .)
    BOOLEANO        reduce using rule 87 (operad_logico -> AND .)
    CADENA          reduce using rule 87 (operad_logico -> AND .)
    NULO            reduce using rule 87 (operad_logico -> AND .)
    NEW             reduce using rule 87 (operad_logico -> AND .)


state 83

    (88) operad_logico -> OR .

    ENTERO          reduce using rule 88 (operad_logico -> OR .)
    FLOTANTE        reduce using rule 88 (operad_logico -> OR .)
    SIGNO_DOLAR     reduce using rule 88 (operad_logico -> OR .)
    CONST           reduce using rule 88 (operad_logico -> OR .)
    PRIVATE         reduce using rule 88 (operad_logico -> OR .)
    PUBLIC          reduce using rule 88 (operad_logico -> OR .)
    PROTECTED       reduce using rule 88 (operad_logico -> OR .)
    STATIC          reduce using rule 88 (operad_logico -> OR .)
    VAR             reduce using rule 88 (operad_logico -> OR .)
    IDENTIFICADOR   reduce using rule 88 (operad_logico -> OR .)
    BOOLEANO        reduce using rule 88 (operad_logico -> OR .)
    CADENA          reduce using rule 88 (operad_logico -> OR .)
    NULO            reduce using rule 88 (operad_logico -> OR .)
    NEW             reduce using rule 88 (operad_logico -> OR .)


state 84

    (89) operad_logico -> XOR .

    ENTERO          reduce using rule 89 (operad_logico -> XOR .)
    FLOTANTE        reduce using rule 89 (operad_logico -> XOR .)
    SIGNO_DOLAR     reduce using rule 89 (operad_logico -> XOR .)
    CONST           reduce using rule 89 (operad_logico -> XOR .)
    PRIVATE         reduce using rule 89 (operad_logico -> XOR .)
    PUBLIC          reduce using rule 89 (operad_logico -> XOR .)
    PROTECTED       reduce using rule 89 (operad_logico -> XOR .)
    STATIC          reduce using rule 89 (operad_logico -> XOR .)
    VAR             reduce using rule 89 (operad_logico -> XOR .)
    IDENTIFICADOR   reduce using rule 89 (operad_logico -> XOR .)
    BOOLEANO        reduce using rule 89 (operad_logico -> XOR .)
    CADENA          reduce using rule 89 (operad_logico -> XOR .)
    NULO            reduce using rule 89 (operad_logico -> XOR .)
    NEW             reduce using rule 89 (operad_logico -> XOR .)


state 85

    (90) operad_logico -> CONJUNCION .

    ENTERO          reduce using rule 90 (operad_logico -> CONJUNCION .)
    FLOTANTE        reduce using rule 90 (operad_logico -> CONJUNCION .)
    SIGNO_DOLAR     reduce using rule 90 (operad_logico -> CONJUNCION .)
    CONST           reduce using rule 90 (operad_logico -> CONJUNCION .)
    PRIVATE         reduce using rule 90 (operad_logico -> CONJUNCION .)
    PUBLIC          reduce using rule 90 (operad_logico -> CONJUNCION .)
    PROTECTED       reduce using rule 90 (operad_logico -> CONJUNCION .)
    STATIC          reduce using rule 90 (operad_logico -> CONJUNCION .)
    VAR             reduce using rule 90 (operad_logico -> CONJUNCION .)
    IDENTIFICADOR   reduce using rule 90 (operad_logico -> CONJUNCION .)
    BOOLEANO        reduce using rule 90 (operad_logico -> CONJUNCION .)
    CADENA          reduce using rule 90 (operad_logico -> CONJUNCION .)
    NULO            reduce using rule 90 (operad_logico -> CONJUNCION .)
    NEW             reduce using rule 90 (operad_logico -> CONJUNCION .)


state 86

    (91) operad_logico -> DISYUNCION .

    ENTERO          reduce using rule 91 (operad_logico -> DISYUNCION .)
    FLOTANTE        reduce using rule 91 (operad_logico -> DISYUNCION .)
    SIGNO_DOLAR     reduce using rule 91 (operad_logico -> DISYUNCION .)
    CONST           reduce using rule 91 (operad_logico -> DISYUNCION .)
    PRIVATE         reduce using rule 91 (operad_logico -> DISYUNCION .)
    PUBLIC          reduce using rule 91 (operad_logico -> DISYUNCION .)
    PROTECTED       reduce using rule 91 (operad_logico -> DISYUNCION .)
    STATIC          reduce using rule 91 (operad_logico -> DISYUNCION .)
    VAR             reduce using rule 91 (operad_logico -> DISYUNCION .)
    IDENTIFICADOR   reduce using rule 91 (operad_logico -> DISYUNCION .)
    BOOLEANO        reduce using rule 91 (operad_logico -> DISYUNCION .)
    CADENA          reduce using rule 91 (operad_logico -> DISYUNCION .)
    NULO            reduce using rule 91 (operad_logico -> DISYUNCION .)
    NEW             reduce using rule 91 (operad_logico -> DISYUNCION .)


state 87

    (110) operaciones_logicas -> funcionuso operad_logico . funcionuso
    (111) operaciones_logicas -> funcionuso operad_logico . operaciones_logicas
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    IDENTIFICADOR   shift and go to state 6
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    CADENA          shift and go to state 24

    funcionuso                     shift and go to state 163
    operaciones_logicas            shift and go to state 164
    decl_variable                  shift and go to state 165
    operaciones_arit               shift and go to state 166
    variable_tipo                  shift and go to state 93
    salidas_posibles               shift and go to state 167
    datos                          shift and go to state 63

state 88

    (19) salida -> ECHO salidas_posibles . FIN_LINEA

    FIN_LINEA       shift and go to state 168


state 89

    (18) salidas_posibles -> decl_variable .

    FIN_LINEA       reduce using rule 18 (salidas_posibles -> decl_variable .)
    SUMA            reduce using rule 18 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 18 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 18 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 18 (salidas_posibles -> decl_variable .)
    IGUALDAD        reduce using rule 18 (salidas_posibles -> decl_variable .)
    IDENTIDAD       reduce using rule 18 (salidas_posibles -> decl_variable .)
    DIFERENTE       reduce using rule 18 (salidas_posibles -> decl_variable .)
    NO_IDENTIDAD    reduce using rule 18 (salidas_posibles -> decl_variable .)
    MAYOR           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MAYOR_IGUAL     reduce using rule 18 (salidas_posibles -> decl_variable .)
    MENOR           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MENOR_IGUAL     reduce using rule 18 (salidas_posibles -> decl_variable .)
    AND             reduce using rule 18 (salidas_posibles -> decl_variable .)
    OR              reduce using rule 18 (salidas_posibles -> decl_variable .)
    XOR             reduce using rule 18 (salidas_posibles -> decl_variable .)
    CONJUNCION      reduce using rule 18 (salidas_posibles -> decl_variable .)
    DISYUNCION      reduce using rule 18 (salidas_posibles -> decl_variable .)
    PARENTESIS_CIERRA reduce using rule 18 (salidas_posibles -> decl_variable .)
    COMA            reduce using rule 18 (salidas_posibles -> decl_variable .)


state 90

    (43) datos -> ENTERO .

    FIN_LINEA       reduce using rule 43 (datos -> ENTERO .)
    COMA            reduce using rule 43 (datos -> ENTERO .)
    IGUAL           reduce using rule 43 (datos -> ENTERO .)
    CORCHETE_CIERRA reduce using rule 43 (datos -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 43 (datos -> ENTERO .)
    SUMA            reduce using rule 43 (datos -> ENTERO .)
    RESTA           reduce using rule 43 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 43 (datos -> ENTERO .)
    DIVISION        reduce using rule 43 (datos -> ENTERO .)
    POTENCIA        reduce using rule 43 (datos -> ENTERO .)
    MODULO          reduce using rule 43 (datos -> ENTERO .)
    IGUALDAD        reduce using rule 43 (datos -> ENTERO .)
    IDENTIDAD       reduce using rule 43 (datos -> ENTERO .)
    DIFERENTE       reduce using rule 43 (datos -> ENTERO .)
    NO_IDENTIDAD    reduce using rule 43 (datos -> ENTERO .)
    MAYOR           reduce using rule 43 (datos -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 43 (datos -> ENTERO .)
    MENOR           reduce using rule 43 (datos -> ENTERO .)
    MENOR_IGUAL     reduce using rule 43 (datos -> ENTERO .)
    AND             reduce using rule 43 (datos -> ENTERO .)
    OR              reduce using rule 43 (datos -> ENTERO .)
    XOR             reduce using rule 43 (datos -> ENTERO .)
    CONJUNCION      reduce using rule 43 (datos -> ENTERO .)
    DISYUNCION      reduce using rule 43 (datos -> ENTERO .)


state 91

    (44) datos -> FLOTANTE .

    FIN_LINEA       reduce using rule 44 (datos -> FLOTANTE .)
    COMA            reduce using rule 44 (datos -> FLOTANTE .)
    IGUAL           reduce using rule 44 (datos -> FLOTANTE .)
    CORCHETE_CIERRA reduce using rule 44 (datos -> FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 44 (datos -> FLOTANTE .)
    SUMA            reduce using rule 44 (datos -> FLOTANTE .)
    RESTA           reduce using rule 44 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 44 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 44 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 44 (datos -> FLOTANTE .)
    MODULO          reduce using rule 44 (datos -> FLOTANTE .)
    IGUALDAD        reduce using rule 44 (datos -> FLOTANTE .)
    IDENTIDAD       reduce using rule 44 (datos -> FLOTANTE .)
    DIFERENTE       reduce using rule 44 (datos -> FLOTANTE .)
    NO_IDENTIDAD    reduce using rule 44 (datos -> FLOTANTE .)
    MAYOR           reduce using rule 44 (datos -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 44 (datos -> FLOTANTE .)
    MENOR           reduce using rule 44 (datos -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 44 (datos -> FLOTANTE .)
    AND             reduce using rule 44 (datos -> FLOTANTE .)
    OR              reduce using rule 44 (datos -> FLOTANTE .)
    XOR             reduce using rule 44 (datos -> FLOTANTE .)
    CONJUNCION      reduce using rule 44 (datos -> FLOTANTE .)
    DISYUNCION      reduce using rule 44 (datos -> FLOTANTE .)


state 92

    (46) datos -> BOOLEANO .

    FIN_LINEA       reduce using rule 46 (datos -> BOOLEANO .)
    COMA            reduce using rule 46 (datos -> BOOLEANO .)
    IGUAL           reduce using rule 46 (datos -> BOOLEANO .)
    CORCHETE_CIERRA reduce using rule 46 (datos -> BOOLEANO .)
    PARENTESIS_CIERRA reduce using rule 46 (datos -> BOOLEANO .)
    SUMA            reduce using rule 46 (datos -> BOOLEANO .)
    RESTA           reduce using rule 46 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 46 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 46 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 46 (datos -> BOOLEANO .)
    MODULO          reduce using rule 46 (datos -> BOOLEANO .)
    IGUALDAD        reduce using rule 46 (datos -> BOOLEANO .)
    IDENTIDAD       reduce using rule 46 (datos -> BOOLEANO .)
    DIFERENTE       reduce using rule 46 (datos -> BOOLEANO .)
    NO_IDENTIDAD    reduce using rule 46 (datos -> BOOLEANO .)
    MAYOR           reduce using rule 46 (datos -> BOOLEANO .)
    MAYOR_IGUAL     reduce using rule 46 (datos -> BOOLEANO .)
    MENOR           reduce using rule 46 (datos -> BOOLEANO .)
    MENOR_IGUAL     reduce using rule 46 (datos -> BOOLEANO .)
    AND             reduce using rule 46 (datos -> BOOLEANO .)
    OR              reduce using rule 46 (datos -> BOOLEANO .)
    XOR             reduce using rule 46 (datos -> BOOLEANO .)
    CONJUNCION      reduce using rule 46 (datos -> BOOLEANO .)
    DISYUNCION      reduce using rule 46 (datos -> BOOLEANO .)


state 93

    (32) decl_variable -> variable_tipo . SIGNO_DOLAR IDENTIFICADOR

    SIGNO_DOLAR     shift and go to state 116


state 94

    (97) operaciones_arit -> salidas_posibles operad_arit . salidas_posibles
    (98) operaciones_arit -> salidas_posibles operad_arit . operaciones_arit
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    salidas_posibles               shift and go to state 169
    operaciones_arit               shift and go to state 170
    datos                          shift and go to state 63
    decl_variable                  shift and go to state 89
    variable_tipo                  shift and go to state 93

state 95

    (99) operaciones_bits -> salidas_posibles operand_bits . salidas_posibles
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    salidas_posibles               shift and go to state 171
    datos                          shift and go to state 63
    decl_variable                  shift and go to state 89
    variable_tipo                  shift and go to state 93

state 96

    (73) operad_arit -> SUMA .

    ENTERO          reduce using rule 73 (operad_arit -> SUMA .)
    FLOTANTE        reduce using rule 73 (operad_arit -> SUMA .)
    CADENA          reduce using rule 73 (operad_arit -> SUMA .)
    BOOLEANO        reduce using rule 73 (operad_arit -> SUMA .)
    SIGNO_DOLAR     reduce using rule 73 (operad_arit -> SUMA .)
    CONST           reduce using rule 73 (operad_arit -> SUMA .)
    PRIVATE         reduce using rule 73 (operad_arit -> SUMA .)
    PUBLIC          reduce using rule 73 (operad_arit -> SUMA .)
    PROTECTED       reduce using rule 73 (operad_arit -> SUMA .)
    STATIC          reduce using rule 73 (operad_arit -> SUMA .)
    VAR             reduce using rule 73 (operad_arit -> SUMA .)


state 97

    (74) operad_arit -> RESTA .

    ENTERO          reduce using rule 74 (operad_arit -> RESTA .)
    FLOTANTE        reduce using rule 74 (operad_arit -> RESTA .)
    CADENA          reduce using rule 74 (operad_arit -> RESTA .)
    BOOLEANO        reduce using rule 74 (operad_arit -> RESTA .)
    SIGNO_DOLAR     reduce using rule 74 (operad_arit -> RESTA .)
    CONST           reduce using rule 74 (operad_arit -> RESTA .)
    PRIVATE         reduce using rule 74 (operad_arit -> RESTA .)
    PUBLIC          reduce using rule 74 (operad_arit -> RESTA .)
    PROTECTED       reduce using rule 74 (operad_arit -> RESTA .)
    STATIC          reduce using rule 74 (operad_arit -> RESTA .)
    VAR             reduce using rule 74 (operad_arit -> RESTA .)


state 98

    (75) operad_arit -> MULTIPLICACION .

    ENTERO          reduce using rule 75 (operad_arit -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 75 (operad_arit -> MULTIPLICACION .)
    CADENA          reduce using rule 75 (operad_arit -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 75 (operad_arit -> MULTIPLICACION .)
    SIGNO_DOLAR     reduce using rule 75 (operad_arit -> MULTIPLICACION .)
    CONST           reduce using rule 75 (operad_arit -> MULTIPLICACION .)
    PRIVATE         reduce using rule 75 (operad_arit -> MULTIPLICACION .)
    PUBLIC          reduce using rule 75 (operad_arit -> MULTIPLICACION .)
    PROTECTED       reduce using rule 75 (operad_arit -> MULTIPLICACION .)
    STATIC          reduce using rule 75 (operad_arit -> MULTIPLICACION .)
    VAR             reduce using rule 75 (operad_arit -> MULTIPLICACION .)


state 99

    (76) operad_arit -> DIVISION .

    ENTERO          reduce using rule 76 (operad_arit -> DIVISION .)
    FLOTANTE        reduce using rule 76 (operad_arit -> DIVISION .)
    CADENA          reduce using rule 76 (operad_arit -> DIVISION .)
    BOOLEANO        reduce using rule 76 (operad_arit -> DIVISION .)
    SIGNO_DOLAR     reduce using rule 76 (operad_arit -> DIVISION .)
    CONST           reduce using rule 76 (operad_arit -> DIVISION .)
    PRIVATE         reduce using rule 76 (operad_arit -> DIVISION .)
    PUBLIC          reduce using rule 76 (operad_arit -> DIVISION .)
    PROTECTED       reduce using rule 76 (operad_arit -> DIVISION .)
    STATIC          reduce using rule 76 (operad_arit -> DIVISION .)
    VAR             reduce using rule 76 (operad_arit -> DIVISION .)


state 100

    (77) operad_arit -> POTENCIA .

    ENTERO          reduce using rule 77 (operad_arit -> POTENCIA .)
    FLOTANTE        reduce using rule 77 (operad_arit -> POTENCIA .)
    CADENA          reduce using rule 77 (operad_arit -> POTENCIA .)
    BOOLEANO        reduce using rule 77 (operad_arit -> POTENCIA .)
    SIGNO_DOLAR     reduce using rule 77 (operad_arit -> POTENCIA .)
    CONST           reduce using rule 77 (operad_arit -> POTENCIA .)
    PRIVATE         reduce using rule 77 (operad_arit -> POTENCIA .)
    PUBLIC          reduce using rule 77 (operad_arit -> POTENCIA .)
    PROTECTED       reduce using rule 77 (operad_arit -> POTENCIA .)
    STATIC          reduce using rule 77 (operad_arit -> POTENCIA .)
    VAR             reduce using rule 77 (operad_arit -> POTENCIA .)


state 101

    (78) operad_arit -> MODULO .

    ENTERO          reduce using rule 78 (operad_arit -> MODULO .)
    FLOTANTE        reduce using rule 78 (operad_arit -> MODULO .)
    CADENA          reduce using rule 78 (operad_arit -> MODULO .)
    BOOLEANO        reduce using rule 78 (operad_arit -> MODULO .)
    SIGNO_DOLAR     reduce using rule 78 (operad_arit -> MODULO .)
    CONST           reduce using rule 78 (operad_arit -> MODULO .)
    PRIVATE         reduce using rule 78 (operad_arit -> MODULO .)
    PUBLIC          reduce using rule 78 (operad_arit -> MODULO .)
    PROTECTED       reduce using rule 78 (operad_arit -> MODULO .)
    STATIC          reduce using rule 78 (operad_arit -> MODULO .)
    VAR             reduce using rule 78 (operad_arit -> MODULO .)


state 102

    (92) operand_bits -> CONJUNCIONBITS .

    ENTERO          reduce using rule 92 (operand_bits -> CONJUNCIONBITS .)
    FLOTANTE        reduce using rule 92 (operand_bits -> CONJUNCIONBITS .)
    CADENA          reduce using rule 92 (operand_bits -> CONJUNCIONBITS .)
    BOOLEANO        reduce using rule 92 (operand_bits -> CONJUNCIONBITS .)
    SIGNO_DOLAR     reduce using rule 92 (operand_bits -> CONJUNCIONBITS .)
    CONST           reduce using rule 92 (operand_bits -> CONJUNCIONBITS .)
    PRIVATE         reduce using rule 92 (operand_bits -> CONJUNCIONBITS .)
    PUBLIC          reduce using rule 92 (operand_bits -> CONJUNCIONBITS .)
    PROTECTED       reduce using rule 92 (operand_bits -> CONJUNCIONBITS .)
    STATIC          reduce using rule 92 (operand_bits -> CONJUNCIONBITS .)
    VAR             reduce using rule 92 (operand_bits -> CONJUNCIONBITS .)


state 103

    (93) operand_bits -> DISYUNCIONBITS .

    ENTERO          reduce using rule 93 (operand_bits -> DISYUNCIONBITS .)
    FLOTANTE        reduce using rule 93 (operand_bits -> DISYUNCIONBITS .)
    CADENA          reduce using rule 93 (operand_bits -> DISYUNCIONBITS .)
    BOOLEANO        reduce using rule 93 (operand_bits -> DISYUNCIONBITS .)
    SIGNO_DOLAR     reduce using rule 93 (operand_bits -> DISYUNCIONBITS .)
    CONST           reduce using rule 93 (operand_bits -> DISYUNCIONBITS .)
    PRIVATE         reduce using rule 93 (operand_bits -> DISYUNCIONBITS .)
    PUBLIC          reduce using rule 93 (operand_bits -> DISYUNCIONBITS .)
    PROTECTED       reduce using rule 93 (operand_bits -> DISYUNCIONBITS .)
    STATIC          reduce using rule 93 (operand_bits -> DISYUNCIONBITS .)
    VAR             reduce using rule 93 (operand_bits -> DISYUNCIONBITS .)


state 104

    (94) operand_bits -> DISYUNCION_EXC .

    ENTERO          reduce using rule 94 (operand_bits -> DISYUNCION_EXC .)
    FLOTANTE        reduce using rule 94 (operand_bits -> DISYUNCION_EXC .)
    CADENA          reduce using rule 94 (operand_bits -> DISYUNCION_EXC .)
    BOOLEANO        reduce using rule 94 (operand_bits -> DISYUNCION_EXC .)
    SIGNO_DOLAR     reduce using rule 94 (operand_bits -> DISYUNCION_EXC .)
    CONST           reduce using rule 94 (operand_bits -> DISYUNCION_EXC .)
    PRIVATE         reduce using rule 94 (operand_bits -> DISYUNCION_EXC .)
    PUBLIC          reduce using rule 94 (operand_bits -> DISYUNCION_EXC .)
    PROTECTED       reduce using rule 94 (operand_bits -> DISYUNCION_EXC .)
    STATIC          reduce using rule 94 (operand_bits -> DISYUNCION_EXC .)
    VAR             reduce using rule 94 (operand_bits -> DISYUNCION_EXC .)


state 105

    (95) operand_bits -> DESPLAZAR_BITS_IZQ .

    ENTERO          reduce using rule 95 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    FLOTANTE        reduce using rule 95 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    CADENA          reduce using rule 95 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    BOOLEANO        reduce using rule 95 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    SIGNO_DOLAR     reduce using rule 95 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    CONST           reduce using rule 95 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PRIVATE         reduce using rule 95 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PUBLIC          reduce using rule 95 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PROTECTED       reduce using rule 95 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    STATIC          reduce using rule 95 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    VAR             reduce using rule 95 (operand_bits -> DESPLAZAR_BITS_IZQ .)


state 106

    (96) operand_bits -> DESPLAZAR_BITS_DER .

    ENTERO          reduce using rule 96 (operand_bits -> DESPLAZAR_BITS_DER .)
    FLOTANTE        reduce using rule 96 (operand_bits -> DESPLAZAR_BITS_DER .)
    CADENA          reduce using rule 96 (operand_bits -> DESPLAZAR_BITS_DER .)
    BOOLEANO        reduce using rule 96 (operand_bits -> DESPLAZAR_BITS_DER .)
    SIGNO_DOLAR     reduce using rule 96 (operand_bits -> DESPLAZAR_BITS_DER .)
    CONST           reduce using rule 96 (operand_bits -> DESPLAZAR_BITS_DER .)
    PRIVATE         reduce using rule 96 (operand_bits -> DESPLAZAR_BITS_DER .)
    PUBLIC          reduce using rule 96 (operand_bits -> DESPLAZAR_BITS_DER .)
    PROTECTED       reduce using rule 96 (operand_bits -> DESPLAZAR_BITS_DER .)
    STATIC          reduce using rule 96 (operand_bits -> DESPLAZAR_BITS_DER .)
    VAR             reduce using rule 96 (operand_bits -> DESPLAZAR_BITS_DER .)


state 107

    (20) salida -> PRINT PARENTESIS_ABRE . salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    salidas_posibles               shift and go to state 172
    datos                          shift and go to state 63
    decl_variable                  shift and go to state 89
    variable_tipo                  shift and go to state 93

state 108

    (21) salida -> PRINT salidas_posibles . FIN_LINEA

    FIN_LINEA       shift and go to state 173


state 109

    (22) ingreso -> READLINE PARENTESIS_ABRE . CADENA PARENTESIS_CIERRA FIN_LINEA

    CADENA          shift and go to state 174


state 110

    (23) ingreso -> FGETS PARENTESIS_ABRE . STDIN PARENTESIS_CIERRA FIN_LINEA

    STDIN           shift and go to state 175


state 111

    (24) ingreso -> FSCANF PARENTESIS_ABRE . STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    STDIN           shift and go to state 176


state 112

    (31) decl_variable -> SIGNO_DOLAR IDENTIFICADOR .

    IGUAL           reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    LAMBDA          reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    INCREMENTO      reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DECREMENTO      reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    IGUALDAD        reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    IDENTIDAD       reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    NO_IDENTIDAD    reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR           reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MENOR           reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    AND             reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    OR              reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    XOR             reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCION      reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION      reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    SUMA            reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    RESTA           reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DIVISION        reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    POTENCIA        reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MODULO          reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCIONBITS  reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCIONBITS  reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION_EXC  reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_IZQ reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_DER reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    FIN_LINEA       reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    AS              reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    COMA            reduce using rule 31 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)


state 113

    (55) estructuras_datos -> pila FIN_LINEA .

    CLASS           reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    BREAK           reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    ECHO            reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    PRINT           reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    READLINE        reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    FGETS           reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    FSCANF          reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    NEW             reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    ARRAY           reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    FOR             reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    FOREACH         reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    WHILE           reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    FUNCTION        reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    CONST           reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    PRIVATE         reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    PUBLIC          reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    PROTECTED       reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    STATIC          reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    VAR             reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    ENTERO          reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    FLOTANTE        reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    BOOLEANO        reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    NEGACION        reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    INCREMENTO      reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    DECREMENTO      reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    IF              reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    CADENA          reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    $end            reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)
    RETURN          reduce using rule 55 (estructuras_datos -> pila FIN_LINEA .)


state 114

    (56) estructuras_datos -> arreglo FIN_LINEA .

    CLASS           reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    BREAK           reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    ECHO            reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    PRINT           reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    READLINE        reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    FGETS           reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    FSCANF          reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    NEW             reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    ARRAY           reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    FOR             reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    FOREACH         reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    WHILE           reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    FUNCTION        reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    CONST           reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    PRIVATE         reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    PUBLIC          reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    PROTECTED       reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    STATIC          reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    VAR             reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    ENTERO          reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    FLOTANTE        reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    BOOLEANO        reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    NEGACION        reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    INCREMENTO      reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    DECREMENTO      reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    IF              reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    CADENA          reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    $end            reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)
    RETURN          reduce using rule 56 (estructuras_datos -> arreglo FIN_LINEA .)


state 115

    (50) funcionglobal -> variable_tipo funcion .

    CLASS           reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    COMENTARIO_LINEA reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    COMENTARIO_BLOQUE reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    BREAK           reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    ECHO            reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    PRINT           reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    READLINE        reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    FGETS           reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    FSCANF          reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    SIGNO_DOLAR     reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    NEW             reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    ARRAY           reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    CORCHETE_ABRE   reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    FOR             reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    FOREACH         reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    WHILE           reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    FUNCTION        reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    CONST           reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    PRIVATE         reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    PUBLIC          reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    PROTECTED       reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    STATIC          reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    VAR             reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    ENTERO          reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    FLOTANTE        reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    BOOLEANO        reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    NEGACION        reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    INCREMENTO      reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    DECREMENTO      reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    IF              reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    IDENTIFICADOR   reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    CADENA          reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    $end            reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    LLAVE_CIERRA    reduce using rule 50 (funcionglobal -> variable_tipo funcion .)
    RETURN          reduce using rule 50 (funcionglobal -> variable_tipo funcion .)


state 116

    (32) decl_variable -> variable_tipo SIGNO_DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 177


state 117

    (112) operaciones_logicas -> operaciones_logicas operad_logico . funcionuso
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA

    IDENTIFICADOR   shift and go to state 6

    funcionuso                     shift and go to state 178

state 118

    (107) operaciones_logicas -> operaciones_arit operad_logico . ENTERO
    (108) operaciones_logicas -> operaciones_arit operad_logico . FLOTANTE

    ENTERO          shift and go to state 179
    FLOTANTE        shift and go to state 180


state 119

    (146) declaracion_s -> crecimiento decl_variable .

    FIN_LINEA       reduce using rule 146 (declaracion_s -> crecimiento decl_variable .)
    PARENTESIS_CIERRA reduce using rule 146 (declaracion_s -> crecimiento decl_variable .)


state 120

    (57) pila -> NEW STACK . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 181


state 121

    (63) arreglo -> ARRAY PARENTESIS_ABRE . PARENTESIS_CIERRA
    (65) arreglo -> ARRAY PARENTESIS_ABRE . elementos PARENTESIS_CIERRA
    (67) arreglo -> ARRAY PARENTESIS_ABRE . asociacion PARENTESIS_CIERRA
    (71) elementos -> . datos
    (72) elementos -> . datos COMA elementos
    (69) asociacion -> . datos IGUAL MAYOR datos
    (70) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    PARENTESIS_CIERRA shift and go to state 182
    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92

    elementos                      shift and go to state 183
    asociacion                     shift and go to state 184
    datos                          shift and go to state 125

state 122

    (64) arreglo -> CORCHETE_ABRE CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 64 (arreglo -> CORCHETE_ABRE CORCHETE_CIERRA .)


state 123

    (66) arreglo -> CORCHETE_ABRE elementos . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 185


state 124

    (68) arreglo -> CORCHETE_ABRE asociacion . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 186


state 125

    (71) elementos -> datos .
    (72) elementos -> datos . COMA elementos
    (69) asociacion -> datos . IGUAL MAYOR datos
    (70) asociacion -> datos . IGUAL MAYOR datos COMA asociacion

    CORCHETE_CIERRA reduce using rule 71 (elementos -> datos .)
    PARENTESIS_CIERRA reduce using rule 71 (elementos -> datos .)
    COMA            shift and go to state 187
    IGUAL           shift and go to state 188


state 126

    (131) for -> FOR PARENTESIS_ABRE . asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    asignacion                     shift and go to state 189
    decl_variable                  shift and go to state 190
    variable_tipo                  shift and go to state 93

state 127

    (151) foreach -> FOREACH PARENTESIS_ABRE . decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> FOREACH PARENTESIS_ABRE . decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 191
    variable_tipo                  shift and go to state 93

state 128

    (154) if_else -> if_else_inicio if_else_fin .

    CLASS           reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    COMENTARIO_LINEA reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    COMENTARIO_BLOQUE reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    BREAK           reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    ECHO            reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    PRINT           reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    READLINE        reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    FGETS           reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    FSCANF          reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    SIGNO_DOLAR     reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    NEW             reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    ARRAY           reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    CORCHETE_ABRE   reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    FOR             reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    FOREACH         reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    WHILE           reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    FUNCTION        reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    CONST           reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    PRIVATE         reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    PUBLIC          reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    PROTECTED       reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    STATIC          reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    VAR             reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    ENTERO          reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    FLOTANTE        reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    BOOLEANO        reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    NEGACION        reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    INCREMENTO      reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    DECREMENTO      reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    IF              reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    IDENTIFICADOR   reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    CADENA          reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    $end            reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    LLAVE_CIERRA    reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)
    RETURN          reduce using rule 154 (if_else -> if_else_inicio if_else_fin .)


state 129

    (155) if_else -> if_else_inicio if_else_cuerpo . if_else_fin
    (159) if_else_fin -> . ELSE LLAVE_ABRE bloque LLAVE_CIERRA

    ELSE            shift and go to state 130

    if_else_fin                    shift and go to state 192

state 130

    (159) if_else_fin -> ELSE . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 193


state 131

    (157) if_else_cuerpo -> ELSEIF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (158) if_else_cuerpo -> ELSEIF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    PARENTESIS_ABRE shift and go to state 194


state 132

    (153) while -> WHILE PARENTESIS_ABRE . decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 195
    variable_tipo                  shift and go to state 93

state 133

    (47) funcion -> FUNCTION IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> FUNCTION IDENTIFICADOR . PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 196


state 134

    (101) operaciones_logicas -> ENTERO operad_logico . ENTERO

    ENTERO          shift and go to state 197


state 135

    (102) operaciones_logicas -> FLOTANTE operad_logico . FLOTANTE

    FLOTANTE        shift and go to state 198


state 136

    (100) operaciones_bits -> NEGACION salidas_posibles .

    FIN_LINEA       reduce using rule 100 (operaciones_bits -> NEGACION salidas_posibles .)


state 137

    (156) if_else_inicio -> IF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    SIGNO_DOLAR     shift and go to state 27
    IDENTIFICADOR   shift and go to state 6
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    CADENA          shift and go to state 24

    operaciones_logicas            shift and go to state 199
    decl_variable                  shift and go to state 165
    operaciones_arit               shift and go to state 166
    funcionuso                     shift and go to state 19
    variable_tipo                  shift and go to state 93
    salidas_posibles               shift and go to state 167
    datos                          shift and go to state 63

state 138

    (5) clase -> CLASS IDENTIFICADOR LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (132) sentenciasAnidadas -> . instrucciones
    (133) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    sentenciasAnidadas             shift and go to state 200
    instrucciones                  shift and go to state 201
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    decl_variable                  shift and go to state 18
    funcionuso                     shift and go to state 19
    salidas_posibles               shift and go to state 21
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 139

    (51) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 202


state 140

    (52) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 203


state 141

    (53) parametros -> SIGNO_DOLAR . IDENTIFICADOR
    (54) parametros -> SIGNO_DOLAR . IDENTIFICADOR COMA parametros

    IDENTIFICADOR   shift and go to state 204


state 142

    (71) elementos -> datos .
    (72) elementos -> datos . COMA elementos

    PARENTESIS_CIERRA reduce using rule 71 (elementos -> datos .)
    CORCHETE_CIERRA reduce using rule 71 (elementos -> datos .)
    COMA            shift and go to state 187


state 143

    (41) valor -> decl_variable .
    (104) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (105) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (106) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (59) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (120) paraCalculos -> decl_variable .
    (18) salidas_posibles -> decl_variable .
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

  ! reduce/reduce conflict for SUMA resolved using rule 18 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for RESTA resolved using rule 18 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 18 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for DIVISION resolved using rule 18 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 18 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for MODULO resolved using rule 18 (salidas_posibles -> decl_variable .)
    FIN_LINEA       reduce using rule 41 (valor -> decl_variable .)
    LAMBDA          shift and go to state 73
    SUMA            reduce using rule 18 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 18 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 18 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 18 (salidas_posibles -> decl_variable .)
    CONJUNCIONBITS  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DISYUNCIONBITS  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DISYUNCION_EXC  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_IZQ reduce using rule 18 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_DER reduce using rule 18 (salidas_posibles -> decl_variable .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

  ! SUMA            [ reduce using rule 120 (paraCalculos -> decl_variable .) ]
  ! RESTA           [ reduce using rule 120 (paraCalculos -> decl_variable .) ]
  ! MULTIPLICACION  [ reduce using rule 120 (paraCalculos -> decl_variable .) ]
  ! DIVISION        [ reduce using rule 120 (paraCalculos -> decl_variable .) ]
  ! POTENCIA        [ reduce using rule 120 (paraCalculos -> decl_variable .) ]
  ! MODULO          [ reduce using rule 120 (paraCalculos -> decl_variable .) ]

    operad_logico                  shift and go to state 72

state 144

    (33) asignacion -> decl_variable IGUAL valor . FIN_LINEA

    FIN_LINEA       shift and go to state 205


state 145

    (34) asignacion -> decl_variable IGUAL estructuras_datos .

    CLASS           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    COMENTARIO_LINEA reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    COMENTARIO_BLOQUE reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    BREAK           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ECHO            reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PRINT           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    READLINE        reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FGETS           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FSCANF          reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    SIGNO_DOLAR     reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    NEW             reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ARRAY           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CORCHETE_ABRE   reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FOR             reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FOREACH         reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    WHILE           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FUNCTION        reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CONST           reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PRIVATE         reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PUBLIC          reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PROTECTED       reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    STATIC          reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    VAR             reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ENTERO          reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FLOTANTE        reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    BOOLEANO        reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    NEGACION        reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    INCREMENTO      reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    DECREMENTO      reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    IF              reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    IDENTIFICADOR   reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CADENA          reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    $end            reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    LLAVE_CIERRA    reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)
    RETURN          reduce using rule 34 (asignacion -> decl_variable IGUAL estructuras_datos .)


state 146

    (35) asignacion -> decl_variable IGUAL explode . FIN_LINEA

    FIN_LINEA       shift and go to state 206


state 147

    (36) asignacion -> decl_variable IGUAL funcionuso . FIN_LINEA
    (109) operaciones_logicas -> funcionuso .
    (110) operaciones_logicas -> funcionuso . operad_logico funcionuso
    (111) operaciones_logicas -> funcionuso . operad_logico operaciones_logicas
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

  ! shift/reduce conflict for FIN_LINEA resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for IDENTIDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for NO_IDENTIDAD resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for CONJUNCION resolved as shift
  ! shift/reduce conflict for DISYUNCION resolved as shift
    FIN_LINEA       shift and go to state 207
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

  ! IGUALDAD        [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! IDENTIDAD       [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! DIFERENTE       [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! NO_IDENTIDAD    [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR           [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR_IGUAL     [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MENOR           [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MENOR_IGUAL     [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! AND             [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! OR              [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! XOR             [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! CONJUNCION      [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! DISYUNCION      [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! FIN_LINEA       [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]

    operad_logico                  shift and go to state 87

state 148

    (37) asignacion -> decl_variable IGUAL operaciones . FIN_LINEA

    FIN_LINEA       shift and go to state 208


state 149

    (38) valor -> datos .
    (17) salidas_posibles -> datos .

    FIN_LINEA       reduce using rule 38 (valor -> datos .)
    PARENTESIS_CIERRA reduce using rule 38 (valor -> datos .)
    SUMA            reduce using rule 17 (salidas_posibles -> datos .)
    RESTA           reduce using rule 17 (salidas_posibles -> datos .)
    MULTIPLICACION  reduce using rule 17 (salidas_posibles -> datos .)
    DIVISION        reduce using rule 17 (salidas_posibles -> datos .)
    POTENCIA        reduce using rule 17 (salidas_posibles -> datos .)
    MODULO          reduce using rule 17 (salidas_posibles -> datos .)
    CONJUNCIONBITS  reduce using rule 17 (salidas_posibles -> datos .)
    DISYUNCIONBITS  reduce using rule 17 (salidas_posibles -> datos .)
    DISYUNCION_EXC  reduce using rule 17 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_IZQ reduce using rule 17 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_DER reduce using rule 17 (salidas_posibles -> datos .)


state 150

    (39) valor -> pila .
    (55) estructuras_datos -> pila . FIN_LINEA

  ! shift/reduce conflict for FIN_LINEA resolved as shift
    FIN_LINEA       shift and go to state 113

  ! FIN_LINEA       [ reduce using rule 39 (valor -> pila .) ]


state 151

    (40) valor -> NULO .

    FIN_LINEA       reduce using rule 40 (valor -> NULO .)
    PARENTESIS_CIERRA reduce using rule 40 (valor -> NULO .)


state 152

    (42) valor -> opAritVar .

    FIN_LINEA       reduce using rule 42 (valor -> opAritVar .)
    PARENTESIS_CIERRA reduce using rule 42 (valor -> opAritVar .)


state 153

    (61) explode -> EXPLODE . PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA
    (62) explode -> EXPLODE . PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 209


state 154

    (43) datos -> ENTERO .
    (101) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (118) paraCalculos -> ENTERO .
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

  ! reduce/reduce conflict for SUMA resolved using rule 43 (datos -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 43 (datos -> ENTERO .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 43 (datos -> ENTERO .)
  ! reduce/reduce conflict for DIVISION resolved using rule 43 (datos -> ENTERO .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 43 (datos -> ENTERO .)
  ! reduce/reduce conflict for MODULO resolved using rule 43 (datos -> ENTERO .)
    FIN_LINEA       reduce using rule 43 (datos -> ENTERO .)
    SUMA            reduce using rule 43 (datos -> ENTERO .)
    RESTA           reduce using rule 43 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 43 (datos -> ENTERO .)
    DIVISION        reduce using rule 43 (datos -> ENTERO .)
    POTENCIA        reduce using rule 43 (datos -> ENTERO .)
    MODULO          reduce using rule 43 (datos -> ENTERO .)
    CONJUNCIONBITS  reduce using rule 43 (datos -> ENTERO .)
    DISYUNCIONBITS  reduce using rule 43 (datos -> ENTERO .)
    DISYUNCION_EXC  reduce using rule 43 (datos -> ENTERO .)
    DESPLAZAR_BITS_IZQ reduce using rule 43 (datos -> ENTERO .)
    DESPLAZAR_BITS_DER reduce using rule 43 (datos -> ENTERO .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

  ! SUMA            [ reduce using rule 118 (paraCalculos -> ENTERO .) ]
  ! RESTA           [ reduce using rule 118 (paraCalculos -> ENTERO .) ]
  ! MULTIPLICACION  [ reduce using rule 118 (paraCalculos -> ENTERO .) ]
  ! DIVISION        [ reduce using rule 118 (paraCalculos -> ENTERO .) ]
  ! POTENCIA        [ reduce using rule 118 (paraCalculos -> ENTERO .) ]
  ! MODULO          [ reduce using rule 118 (paraCalculos -> ENTERO .) ]

    operad_logico                  shift and go to state 134

state 155

    (44) datos -> FLOTANTE .
    (102) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (119) paraCalculos -> FLOTANTE .
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

  ! reduce/reduce conflict for SUMA resolved using rule 44 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for RESTA resolved using rule 44 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 44 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for DIVISION resolved using rule 44 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 44 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for MODULO resolved using rule 44 (datos -> FLOTANTE .)
    FIN_LINEA       reduce using rule 44 (datos -> FLOTANTE .)
    SUMA            reduce using rule 44 (datos -> FLOTANTE .)
    RESTA           reduce using rule 44 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 44 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 44 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 44 (datos -> FLOTANTE .)
    MODULO          reduce using rule 44 (datos -> FLOTANTE .)
    CONJUNCIONBITS  reduce using rule 44 (datos -> FLOTANTE .)
    DISYUNCIONBITS  reduce using rule 44 (datos -> FLOTANTE .)
    DISYUNCION_EXC  reduce using rule 44 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_IZQ reduce using rule 44 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_DER reduce using rule 44 (datos -> FLOTANTE .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

  ! SUMA            [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]
  ! RESTA           [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]
  ! MULTIPLICACION  [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]
  ! DIVISION        [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]
  ! POTENCIA        [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]
  ! MODULO          [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]

    operad_logico                  shift and go to state 135

state 156

    (46) datos -> BOOLEANO .
    (103) operaciones_logicas -> BOOLEANO .

  ! reduce/reduce conflict for FIN_LINEA resolved using rule 46 (datos -> BOOLEANO .)
    FIN_LINEA       reduce using rule 46 (datos -> BOOLEANO .)
    SUMA            reduce using rule 46 (datos -> BOOLEANO .)
    RESTA           reduce using rule 46 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 46 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 46 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 46 (datos -> BOOLEANO .)
    MODULO          reduce using rule 46 (datos -> BOOLEANO .)
    CONJUNCIONBITS  reduce using rule 46 (datos -> BOOLEANO .)
    DISYUNCIONBITS  reduce using rule 46 (datos -> BOOLEANO .)
    DISYUNCION_EXC  reduce using rule 46 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_IZQ reduce using rule 46 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_DER reduce using rule 46 (datos -> BOOLEANO .)
    IGUALDAD        reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    IDENTIDAD       reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    DIFERENTE       reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    NO_IDENTIDAD    reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    MAYOR           reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    MAYOR_IGUAL     reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    MENOR           reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    MENOR_IGUAL     reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    AND             reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    OR              reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    XOR             reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    CONJUNCION      reduce using rule 103 (operaciones_logicas -> BOOLEANO .)
    DISYUNCION      reduce using rule 103 (operaciones_logicas -> BOOLEANO .)

  ! FIN_LINEA       [ reduce using rule 103 (operaciones_logicas -> BOOLEANO .) ]


state 157

    (123) opAritVar -> paraCalculos . combinarOp
    (121) combinarOp -> . operad_arit paraCalculos
    (122) combinarOp -> . operad_arit paraCalculos combinarOp
    (73) operad_arit -> . SUMA
    (74) operad_arit -> . RESTA
    (75) operad_arit -> . MULTIPLICACION
    (76) operad_arit -> . DIVISION
    (77) operad_arit -> . POTENCIA
    (78) operad_arit -> . MODULO

    SUMA            shift and go to state 96
    RESTA           shift and go to state 97
    MULTIPLICACION  shift and go to state 98
    DIVISION        shift and go to state 99
    POTENCIA        shift and go to state 100
    MODULO          shift and go to state 101

    combinarOp                     shift and go to state 210
    operad_arit                    shift and go to state 211

state 158

    (104) operaciones_logicas -> decl_variable operad_logico decl_variable .

    IGUALDAD        reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    IDENTIDAD       reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    DIFERENTE       reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    NO_IDENTIDAD    reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    MAYOR           reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    MAYOR_IGUAL     reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    MENOR           reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    MENOR_IGUAL     reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    AND             reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    OR              reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    XOR             reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    CONJUNCION      reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    DISYUNCION      reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    FIN_LINEA       reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    PARENTESIS_CIERRA reduce using rule 104 (operaciones_logicas -> decl_variable operad_logico decl_variable .)


state 159

    (105) operaciones_logicas -> decl_variable operad_logico ENTERO .

    IGUALDAD        reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    IDENTIDAD       reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    DIFERENTE       reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    NO_IDENTIDAD    reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    MAYOR           reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    MAYOR_IGUAL     reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    MENOR           reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    MENOR_IGUAL     reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    AND             reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    OR              reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    XOR             reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    CONJUNCION      reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    DISYUNCION      reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    FIN_LINEA       reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    PARENTESIS_CIERRA reduce using rule 105 (operaciones_logicas -> decl_variable operad_logico ENTERO .)


state 160

    (106) operaciones_logicas -> decl_variable operad_logico FLOTANTE .

    IGUALDAD        reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    IDENTIDAD       reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    DIFERENTE       reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    NO_IDENTIDAD    reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    MAYOR           reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    MENOR           reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    MENOR_IGUAL     reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    AND             reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    OR              reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    XOR             reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    CONJUNCION      reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    DISYUNCION      reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    FIN_LINEA       reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)


state 161

    (59) pushpila -> decl_variable LAMBDA PUSH . PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> decl_variable LAMBDA PUSH . PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 212


state 162

    (58) poppila -> decl_variable LAMBDA POP . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 213


state 163

    (110) operaciones_logicas -> funcionuso operad_logico funcionuso .
    (109) operaciones_logicas -> funcionuso .
    (110) operaciones_logicas -> funcionuso . operad_logico funcionuso
    (111) operaciones_logicas -> funcionuso . operad_logico operaciones_logicas
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

  ! reduce/reduce conflict for IGUALDAD resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for IDENTIDAD resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for NO_IDENTIDAD resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for MAYOR resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for MAYOR_IGUAL resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for MENOR resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for MENOR_IGUAL resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for AND resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for OR resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for XOR resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for CONJUNCION resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for DISYUNCION resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for FIN_LINEA resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for PARENTESIS_CIERRA resolved using rule 109 (operaciones_logicas -> funcionuso .)
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for IDENTIDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for NO_IDENTIDAD resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for CONJUNCION resolved as shift
  ! shift/reduce conflict for DISYUNCION resolved as shift
    FIN_LINEA       reduce using rule 109 (operaciones_logicas -> funcionuso .)
    PARENTESIS_CIERRA reduce using rule 109 (operaciones_logicas -> funcionuso .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

  ! IGUALDAD        [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! IDENTIDAD       [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! DIFERENTE       [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! NO_IDENTIDAD    [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! MAYOR           [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! MAYOR_IGUAL     [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! MENOR           [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! MENOR_IGUAL     [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! AND             [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! OR              [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! XOR             [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! CONJUNCION      [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! DISYUNCION      [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! FIN_LINEA       [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! PARENTESIS_CIERRA [ reduce using rule 110 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! IGUALDAD        [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! IDENTIDAD       [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! DIFERENTE       [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! NO_IDENTIDAD    [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR           [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR_IGUAL     [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MENOR           [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! MENOR_IGUAL     [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! AND             [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! OR              [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! XOR             [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! CONJUNCION      [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]
  ! DISYUNCION      [ reduce using rule 109 (operaciones_logicas -> funcionuso .) ]

    operad_logico                  shift and go to state 87

state 164

    (111) operaciones_logicas -> funcionuso operad_logico operaciones_logicas .
    (112) operaciones_logicas -> operaciones_logicas . operad_logico funcionuso
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for IDENTIDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for NO_IDENTIDAD resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for CONJUNCION resolved as shift
  ! shift/reduce conflict for DISYUNCION resolved as shift
    FIN_LINEA       reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .)
    PARENTESIS_CIERRA reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

  ! IGUALDAD        [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! IDENTIDAD       [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! DIFERENTE       [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! NO_IDENTIDAD    [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! MAYOR           [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! MAYOR_IGUAL     [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! MENOR           [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! MENOR_IGUAL     [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! AND             [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! OR              [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! XOR             [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! CONJUNCION      [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! DISYUNCION      [ reduce using rule 111 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]

    operad_logico                  shift and go to state 117

state 165

    (104) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (105) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (106) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (18) salidas_posibles -> decl_variable .
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    SUMA            reduce using rule 18 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 18 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 18 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 18 (salidas_posibles -> decl_variable .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 72

state 166

    (107) operaciones_logicas -> operaciones_arit . operad_logico ENTERO
    (108) operaciones_logicas -> operaciones_arit . operad_logico FLOTANTE
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 118

state 167

    (97) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (98) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (73) operad_arit -> . SUMA
    (74) operad_arit -> . RESTA
    (75) operad_arit -> . MULTIPLICACION
    (76) operad_arit -> . DIVISION
    (77) operad_arit -> . POTENCIA
    (78) operad_arit -> . MODULO

    SUMA            shift and go to state 96
    RESTA           shift and go to state 97
    MULTIPLICACION  shift and go to state 98
    DIVISION        shift and go to state 99
    POTENCIA        shift and go to state 100
    MODULO          shift and go to state 101

    operad_arit                    shift and go to state 94

state 168

    (19) salida -> ECHO salidas_posibles FIN_LINEA .

    CLASS           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    BREAK           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ECHO            reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PRINT           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    READLINE        reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FGETS           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FSCANF          reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    NEW             reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ARRAY           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FOR             reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FOREACH         reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    WHILE           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FUNCTION        reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CONST           reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PRIVATE         reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PUBLIC          reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PROTECTED       reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    STATIC          reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    VAR             reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ENTERO          reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FLOTANTE        reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    BOOLEANO        reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    NEGACION        reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    INCREMENTO      reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    DECREMENTO      reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    IF              reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CADENA          reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    $end            reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)
    RETURN          reduce using rule 19 (salida -> ECHO salidas_posibles FIN_LINEA .)


state 169

    (97) operaciones_arit -> salidas_posibles operad_arit salidas_posibles .
    (97) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (98) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (73) operad_arit -> . SUMA
    (74) operad_arit -> . RESTA
    (75) operad_arit -> . MULTIPLICACION
    (76) operad_arit -> . DIVISION
    (77) operad_arit -> . POTENCIA
    (78) operad_arit -> . MODULO

    IGUALDAD        reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    IDENTIDAD       reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    DIFERENTE       reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    NO_IDENTIDAD    reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    MAYOR           reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    MAYOR_IGUAL     reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    MENOR           reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    MENOR_IGUAL     reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    AND             reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    OR              reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    XOR             reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    CONJUNCION      reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    DISYUNCION      reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    FIN_LINEA       reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    PARENTESIS_CIERRA reduce using rule 97 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    SUMA            shift and go to state 96
    RESTA           shift and go to state 97
    MULTIPLICACION  shift and go to state 98
    DIVISION        shift and go to state 99
    POTENCIA        shift and go to state 100
    MODULO          shift and go to state 101

    operad_arit                    shift and go to state 94

state 170

    (98) operaciones_arit -> salidas_posibles operad_arit operaciones_arit .

    IGUALDAD        reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    IDENTIDAD       reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    DIFERENTE       reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    NO_IDENTIDAD    reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    MAYOR           reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    MAYOR_IGUAL     reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    MENOR           reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    MENOR_IGUAL     reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    AND             reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    OR              reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    XOR             reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    CONJUNCION      reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    DISYUNCION      reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    FIN_LINEA       reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    PARENTESIS_CIERRA reduce using rule 98 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)


state 171

    (99) operaciones_bits -> salidas_posibles operand_bits salidas_posibles .

    FIN_LINEA       reduce using rule 99 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)


state 172

    (20) salida -> PRINT PARENTESIS_ABRE salidas_posibles . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 214


state 173

    (21) salida -> PRINT salidas_posibles FIN_LINEA .

    CLASS           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    BREAK           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ECHO            reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PRINT           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    READLINE        reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FGETS           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FSCANF          reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    NEW             reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ARRAY           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FOR             reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FOREACH         reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    WHILE           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FUNCTION        reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CONST           reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PRIVATE         reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PUBLIC          reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PROTECTED       reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    STATIC          reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    VAR             reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ENTERO          reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FLOTANTE        reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    BOOLEANO        reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    NEGACION        reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    INCREMENTO      reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    DECREMENTO      reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    IF              reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CADENA          reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    $end            reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)
    RETURN          reduce using rule 21 (salida -> PRINT salidas_posibles FIN_LINEA .)


state 174

    (22) ingreso -> READLINE PARENTESIS_ABRE CADENA . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 215


state 175

    (23) ingreso -> FGETS PARENTESIS_ABRE STDIN . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 216


state 176

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN . COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    COMA            shift and go to state 217


state 177

    (32) decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .

    IGUAL           reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    LAMBDA          reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    INCREMENTO      reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DECREMENTO      reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    IGUALDAD        reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    IDENTIDAD       reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    NO_IDENTIDAD    reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR           reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MENOR           reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    AND             reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    OR              reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    XOR             reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCION      reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION      reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    SUMA            reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    RESTA           reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DIVISION        reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    POTENCIA        reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MODULO          reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCIONBITS  reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCIONBITS  reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION_EXC  reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_IZQ reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_DER reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    FIN_LINEA       reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    AS              reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    COMA            reduce using rule 32 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)


state 178

    (112) operaciones_logicas -> operaciones_logicas operad_logico funcionuso .

    IGUALDAD        reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    IDENTIDAD       reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    DIFERENTE       reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    NO_IDENTIDAD    reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    MAYOR           reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    MAYOR_IGUAL     reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    MENOR           reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    MENOR_IGUAL     reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    AND             reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    OR              reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    XOR             reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    CONJUNCION      reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    DISYUNCION      reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    FIN_LINEA       reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    PARENTESIS_CIERRA reduce using rule 112 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)


state 179

    (107) operaciones_logicas -> operaciones_arit operad_logico ENTERO .

    IGUALDAD        reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    IDENTIDAD       reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    DIFERENTE       reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    NO_IDENTIDAD    reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    MAYOR           reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    MAYOR_IGUAL     reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    MENOR           reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    MENOR_IGUAL     reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    AND             reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    OR              reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    XOR             reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    CONJUNCION      reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    DISYUNCION      reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    FIN_LINEA       reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    PARENTESIS_CIERRA reduce using rule 107 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)


state 180

    (108) operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .

    IGUALDAD        reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    IDENTIDAD       reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    DIFERENTE       reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    NO_IDENTIDAD    reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    MAYOR           reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    MENOR           reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    MENOR_IGUAL     reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    AND             reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    OR              reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    XOR             reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    CONJUNCION      reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    DISYUNCION      reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    FIN_LINEA       reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 108 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)


state 181

    (57) pila -> NEW STACK PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 218


state 182

    (63) arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 63 (arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 183

    (65) arreglo -> ARRAY PARENTESIS_ABRE elementos . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 219


state 184

    (67) arreglo -> ARRAY PARENTESIS_ABRE asociacion . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 220


state 185

    (66) arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 66 (arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA .)


state 186

    (68) arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 68 (arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA .)


state 187

    (72) elementos -> datos COMA . elementos
    (71) elementos -> . datos
    (72) elementos -> . datos COMA elementos
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92

    datos                          shift and go to state 142
    elementos                      shift and go to state 221

state 188

    (69) asociacion -> datos IGUAL . MAYOR datos
    (70) asociacion -> datos IGUAL . MAYOR datos COMA asociacion

    MAYOR           shift and go to state 222


state 189

    (131) for -> FOR PARENTESIS_ABRE asignacion . declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (134) declaracionp -> . decl_variable valorc
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    declaracionp                   shift and go to state 223
    decl_variable                  shift and go to state 224
    variable_tipo                  shift and go to state 93

state 190

    (33) asignacion -> decl_variable . IGUAL valor FIN_LINEA
    (34) asignacion -> decl_variable . IGUAL estructuras_datos
    (35) asignacion -> decl_variable . IGUAL explode FIN_LINEA
    (36) asignacion -> decl_variable . IGUAL funcionuso FIN_LINEA
    (37) asignacion -> decl_variable . IGUAL operaciones FIN_LINEA

    IGUAL           shift and go to state 70


state 191

    (151) foreach -> FOREACH PARENTESIS_ABRE decl_variable . AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> FOREACH PARENTESIS_ABRE decl_variable . AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    AS              shift and go to state 225


state 192

    (155) if_else -> if_else_inicio if_else_cuerpo if_else_fin .

    CLASS           reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    COMENTARIO_LINEA reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    COMENTARIO_BLOQUE reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    BREAK           reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ECHO            reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PRINT           reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    READLINE        reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FGETS           reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FSCANF          reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    SIGNO_DOLAR     reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    NEW             reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ARRAY           reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CORCHETE_ABRE   reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FOR             reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FOREACH         reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    WHILE           reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FUNCTION        reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CONST           reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PRIVATE         reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PUBLIC          reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PROTECTED       reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    STATIC          reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    VAR             reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ENTERO          reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FLOTANTE        reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    BOOLEANO        reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    NEGACION        reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    INCREMENTO      reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    DECREMENTO      reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    IF              reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    IDENTIFICADOR   reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CADENA          reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    $end            reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    LLAVE_CIERRA    reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    RETURN          reduce using rule 155 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)


state 193

    (159) if_else_fin -> ELSE LLAVE_ABRE . bloque LLAVE_CIERRA
    (128) bloque -> . sentenciasAnidadas retorno
    (129) bloque -> . sentenciasAnidadas
    (130) bloque -> . retorno
    (132) sentenciasAnidadas -> . instrucciones
    (133) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (149) retorno -> . RETURN salidas_posibles FIN_LINEA
    (150) retorno -> . RETURN operaciones FIN_LINEA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    RETURN          shift and go to state 229
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    bloque                         shift and go to state 226
    sentenciasAnidadas             shift and go to state 227
    retorno                        shift and go to state 228
    instrucciones                  shift and go to state 201
    salidas_posibles               shift and go to state 21
    operaciones                    shift and go to state 15
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    declaracion_s                  shift and go to state 16
    decl_variable                  shift and go to state 18
    funcionuso                     shift and go to state 19
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 194

    (157) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (158) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    SIGNO_DOLAR     shift and go to state 27
    IDENTIFICADOR   shift and go to state 6
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    CADENA          shift and go to state 24

    operaciones_logicas            shift and go to state 230
    decl_variable                  shift and go to state 165
    operaciones_arit               shift and go to state 166
    funcionuso                     shift and go to state 19
    variable_tipo                  shift and go to state 93
    salidas_posibles               shift and go to state 167
    datos                          shift and go to state 63

state 195

    (153) while -> WHILE PARENTESIS_ABRE decl_variable . operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 231

state 196

    (47) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE . parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (54) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros

    PARENTESIS_CIERRA shift and go to state 232
    SIGNO_DOLAR     shift and go to state 141

    parametros                     shift and go to state 233

state 197

    (101) operaciones_logicas -> ENTERO operad_logico ENTERO .

    IGUALDAD        reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    IDENTIDAD       reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    DIFERENTE       reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    NO_IDENTIDAD    reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    MAYOR           reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    MAYOR_IGUAL     reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    MENOR           reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    MENOR_IGUAL     reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    AND             reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    OR              reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    XOR             reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    CONJUNCION      reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    DISYUNCION      reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    FIN_LINEA       reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    PARENTESIS_CIERRA reduce using rule 101 (operaciones_logicas -> ENTERO operad_logico ENTERO .)


state 198

    (102) operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .

    IGUALDAD        reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    IDENTIDAD       reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    DIFERENTE       reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    NO_IDENTIDAD    reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    MAYOR           reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    MENOR           reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    MENOR_IGUAL     reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    AND             reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    OR              reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    XOR             reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    CONJUNCION      reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    DISYUNCION      reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    FIN_LINEA       reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 102 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)


state 199

    (156) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (112) operaciones_logicas -> operaciones_logicas . operad_logico funcionuso
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    PARENTESIS_CIERRA shift and go to state 234
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 117

state 200

    (5) clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 235


state 201

    (132) sentenciasAnidadas -> instrucciones .
    (133) sentenciasAnidadas -> instrucciones . sentenciasAnidadas
    (132) sentenciasAnidadas -> . instrucciones
    (133) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    LLAVE_CIERRA    reduce using rule 132 (sentenciasAnidadas -> instrucciones .)
    RETURN          reduce using rule 132 (sentenciasAnidadas -> instrucciones .)
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    instrucciones                  shift and go to state 201
    sentenciasAnidadas             shift and go to state 236
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    decl_variable                  shift and go to state 18
    funcionuso                     shift and go to state 19
    salidas_posibles               shift and go to state 21
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 202

    (51) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .

    IGUALDAD        reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    IDENTIDAD       reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    DIFERENTE       reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    NO_IDENTIDAD    reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    MAYOR           reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    MAYOR_IGUAL     reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    MENOR           reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    MENOR_IGUAL     reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    AND             reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    OR              reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    XOR             reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    CONJUNCION      reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    DISYUNCION      reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    FIN_LINEA       reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 51 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)


state 203

    (52) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .

    IGUALDAD        reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    IDENTIDAD       reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    DIFERENTE       reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    NO_IDENTIDAD    reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    MAYOR           reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    MAYOR_IGUAL     reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    MENOR           reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    MENOR_IGUAL     reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    AND             reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    OR              reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    XOR             reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    CONJUNCION      reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    DISYUNCION      reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    FIN_LINEA       reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 52 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)


state 204

    (53) parametros -> SIGNO_DOLAR IDENTIFICADOR .
    (54) parametros -> SIGNO_DOLAR IDENTIFICADOR . COMA parametros

    PARENTESIS_CIERRA reduce using rule 53 (parametros -> SIGNO_DOLAR IDENTIFICADOR .)
    COMA            shift and go to state 237


state 205

    (33) asignacion -> decl_variable IGUAL valor FIN_LINEA .

    CLASS           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    BREAK           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ECHO            reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PRINT           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    READLINE        reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FGETS           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FSCANF          reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    NEW             reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ARRAY           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FOR             reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FOREACH         reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    WHILE           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FUNCTION        reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CONST           reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PRIVATE         reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PUBLIC          reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PROTECTED       reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    STATIC          reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    VAR             reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ENTERO          reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FLOTANTE        reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    BOOLEANO        reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    NEGACION        reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    INCREMENTO      reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    DECREMENTO      reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    IF              reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CADENA          reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    $end            reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    RETURN          reduce using rule 33 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)


state 206

    (35) asignacion -> decl_variable IGUAL explode FIN_LINEA .

    CLASS           reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    BREAK           reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    ECHO            reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    PRINT           reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    READLINE        reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FGETS           reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FSCANF          reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    NEW             reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    ARRAY           reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FOR             reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FOREACH         reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    WHILE           reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FUNCTION        reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    CONST           reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    PRIVATE         reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    PUBLIC          reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    PROTECTED       reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    STATIC          reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    VAR             reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    ENTERO          reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FLOTANTE        reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    BOOLEANO        reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    NEGACION        reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    INCREMENTO      reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    DECREMENTO      reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    IF              reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    CADENA          reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    $end            reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    RETURN          reduce using rule 35 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)


state 207

    (36) asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .

    CLASS           reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    BREAK           reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    ECHO            reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    PRINT           reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    READLINE        reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FGETS           reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FSCANF          reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    NEW             reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    ARRAY           reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FOR             reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FOREACH         reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    WHILE           reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FUNCTION        reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    CONST           reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    PRIVATE         reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    PUBLIC          reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    PROTECTED       reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    STATIC          reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    VAR             reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    ENTERO          reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FLOTANTE        reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    BOOLEANO        reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    NEGACION        reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    INCREMENTO      reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    DECREMENTO      reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    IF              reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    CADENA          reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    $end            reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    RETURN          reduce using rule 36 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)


state 208

    (37) asignacion -> decl_variable IGUAL operaciones FIN_LINEA .

    CLASS           reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    BREAK           reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    ECHO            reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    PRINT           reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    READLINE        reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FGETS           reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FSCANF          reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    NEW             reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    ARRAY           reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FOR             reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FOREACH         reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    WHILE           reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FUNCTION        reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    CONST           reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    PRIVATE         reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    PUBLIC          reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    PROTECTED       reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    STATIC          reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    VAR             reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    ENTERO          reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FLOTANTE        reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    BOOLEANO        reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    NEGACION        reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    INCREMENTO      reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    DECREMENTO      reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    IF              reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    CADENA          reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    $end            reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    RETURN          reduce using rule 37 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)


state 209

    (61) explode -> EXPLODE PARENTESIS_ABRE . CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA
    (62) explode -> EXPLODE PARENTESIS_ABRE . CADENA COMA salidas_posibles PARENTESIS_CIERRA

    CADENA          shift and go to state 238


state 210

    (123) opAritVar -> paraCalculos combinarOp .

    FIN_LINEA       reduce using rule 123 (opAritVar -> paraCalculos combinarOp .)
    PARENTESIS_CIERRA reduce using rule 123 (opAritVar -> paraCalculos combinarOp .)


state 211

    (121) combinarOp -> operad_arit . paraCalculos
    (122) combinarOp -> operad_arit . paraCalculos combinarOp
    (118) paraCalculos -> . ENTERO
    (119) paraCalculos -> . FLOTANTE
    (120) paraCalculos -> . decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 240
    FLOTANTE        shift and go to state 241
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    paraCalculos                   shift and go to state 239
    decl_variable                  shift and go to state 242
    variable_tipo                  shift and go to state 93

state 212

    (59) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE . valor PARENTESIS_CIERRA
    (60) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE . operaciones_arit PARENTESIS_CIERRA
    (38) valor -> . datos
    (39) valor -> . pila
    (40) valor -> . NULO
    (41) valor -> . decl_variable
    (42) valor -> . opAritVar
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (123) opAritVar -> . paraCalculos combinarOp
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (118) paraCalculos -> . ENTERO
    (119) paraCalculos -> . FLOTANTE
    (120) paraCalculos -> . decl_variable

    NULO            shift and go to state 151
    ENTERO          shift and go to state 247
    FLOTANTE        shift and go to state 248
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92
    NEW             shift and go to state 42
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 243
    valor                          shift and go to state 244
    operaciones_arit               shift and go to state 245
    datos                          shift and go to state 149
    pila                           shift and go to state 246
    opAritVar                      shift and go to state 152
    salidas_posibles               shift and go to state 167
    variable_tipo                  shift and go to state 93
    paraCalculos                   shift and go to state 157

state 213

    (58) poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 249


state 214

    (20) salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 250


state 215

    (22) ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 251


state 216

    (23) ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 252


state 217

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA . CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    CADENA          shift and go to state 253


state 218

    (57) pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 57 (pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 57 (pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 219

    (65) arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 65 (arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)


state 220

    (67) arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 67 (arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA .)


state 221

    (72) elementos -> datos COMA elementos .

    CORCHETE_CIERRA reduce using rule 72 (elementos -> datos COMA elementos .)
    PARENTESIS_CIERRA reduce using rule 72 (elementos -> datos COMA elementos .)


state 222

    (69) asociacion -> datos IGUAL MAYOR . datos
    (70) asociacion -> datos IGUAL MAYOR . datos COMA asociacion
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92

    datos                          shift and go to state 254

state 223

    (131) for -> FOR PARENTESIS_ABRE asignacion declaracionp . declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 27
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    declaracion_s                  shift and go to state 255
    decl_variable                  shift and go to state 256
    crecimiento                    shift and go to state 41
    variable_tipo                  shift and go to state 93

state 224

    (134) declaracionp -> decl_variable . valorc
    (135) valorc -> . menor
    (136) valorc -> . mayor
    (137) menor -> . MENOR_IGUAL ENTERO FIN_LINEA
    (138) menor -> . MENOR_IGUAL decl_variable FIN_LINEA
    (139) menor -> . MENOR ENTERO FIN_LINEA
    (140) menor -> . MENOR decl_variable FIN_LINEA
    (141) mayor -> . MAYOR_IGUAL ENTERO FIN_LINEA
    (142) mayor -> . MENOR_IGUAL decl_variable FIN_LINEA
    (143) mayor -> . MAYOR ENTERO FIN_LINEA
    (144) mayor -> . MAYOR decl_variable FIN_LINEA

    MENOR_IGUAL     shift and go to state 260
    MENOR           shift and go to state 261
    MAYOR_IGUAL     shift and go to state 262
    MAYOR           shift and go to state 263

    valorc                         shift and go to state 257
    menor                          shift and go to state 258
    mayor                          shift and go to state 259

state 225

    (151) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS . decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS . decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 264
    variable_tipo                  shift and go to state 93

state 226

    (159) if_else_fin -> ELSE LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 265


state 227

    (128) bloque -> sentenciasAnidadas . retorno
    (129) bloque -> sentenciasAnidadas .
    (149) retorno -> . RETURN salidas_posibles FIN_LINEA
    (150) retorno -> . RETURN operaciones FIN_LINEA

    LLAVE_CIERRA    reduce using rule 129 (bloque -> sentenciasAnidadas .)
    RETURN          shift and go to state 229

    retorno                        shift and go to state 266

state 228

    (130) bloque -> retorno .

    LLAVE_CIERRA    reduce using rule 130 (bloque -> retorno .)


state 229

    (149) retorno -> RETURN . salidas_posibles FIN_LINEA
    (150) retorno -> RETURN . operaciones FIN_LINEA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA

    ENTERO          shift and go to state 270
    FLOTANTE        shift and go to state 271
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 156
    SIGNO_DOLAR     shift and go to state 27
    NEGACION        shift and go to state 59
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    IDENTIFICADOR   shift and go to state 6

    salidas_posibles               shift and go to state 267
    operaciones                    shift and go to state 268
    datos                          shift and go to state 63
    decl_variable                  shift and go to state 269
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    variable_tipo                  shift and go to state 93
    funcionuso                     shift and go to state 19

state 230

    (157) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (158) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
    (112) operaciones_logicas -> operaciones_logicas . operad_logico funcionuso
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    PARENTESIS_CIERRA shift and go to state 272
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 117

state 231

    (153) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico . valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) valor -> . datos
    (39) valor -> . pila
    (40) valor -> . NULO
    (41) valor -> . decl_variable
    (42) valor -> . opAritVar
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (123) opAritVar -> . paraCalculos combinarOp
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (118) paraCalculos -> . ENTERO
    (119) paraCalculos -> . FLOTANTE
    (120) paraCalculos -> . decl_variable

    NULO            shift and go to state 151
    ENTERO          shift and go to state 247
    FLOTANTE        shift and go to state 248
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92
    NEW             shift and go to state 42
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 273
    valor                          shift and go to state 274
    datos                          shift and go to state 275
    pila                           shift and go to state 246
    opAritVar                      shift and go to state 152
    variable_tipo                  shift and go to state 93
    paraCalculos                   shift and go to state 157

state 232

    (47) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 276


state 233

    (48) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 277


state 234

    (156) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 278


state 235

    (5) clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    CLASS           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    $end            reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 236

    (133) sentenciasAnidadas -> instrucciones sentenciasAnidadas .

    LLAVE_CIERRA    reduce using rule 133 (sentenciasAnidadas -> instrucciones sentenciasAnidadas .)
    RETURN          reduce using rule 133 (sentenciasAnidadas -> instrucciones sentenciasAnidadas .)


state 237

    (54) parametros -> SIGNO_DOLAR IDENTIFICADOR COMA . parametros
    (53) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (54) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros

    SIGNO_DOLAR     shift and go to state 141

    parametros                     shift and go to state 279

state 238

    (61) explode -> EXPLODE PARENTESIS_ABRE CADENA . COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA
    (62) explode -> EXPLODE PARENTESIS_ABRE CADENA . COMA salidas_posibles PARENTESIS_CIERRA

    COMA            shift and go to state 280


state 239

    (121) combinarOp -> operad_arit paraCalculos .
    (122) combinarOp -> operad_arit paraCalculos . combinarOp
    (121) combinarOp -> . operad_arit paraCalculos
    (122) combinarOp -> . operad_arit paraCalculos combinarOp
    (73) operad_arit -> . SUMA
    (74) operad_arit -> . RESTA
    (75) operad_arit -> . MULTIPLICACION
    (76) operad_arit -> . DIVISION
    (77) operad_arit -> . POTENCIA
    (78) operad_arit -> . MODULO

    FIN_LINEA       reduce using rule 121 (combinarOp -> operad_arit paraCalculos .)
    PARENTESIS_CIERRA reduce using rule 121 (combinarOp -> operad_arit paraCalculos .)
    SUMA            shift and go to state 96
    RESTA           shift and go to state 97
    MULTIPLICACION  shift and go to state 98
    DIVISION        shift and go to state 99
    POTENCIA        shift and go to state 100
    MODULO          shift and go to state 101

    operad_arit                    shift and go to state 211
    combinarOp                     shift and go to state 281

state 240

    (118) paraCalculos -> ENTERO .

    SUMA            reduce using rule 118 (paraCalculos -> ENTERO .)
    RESTA           reduce using rule 118 (paraCalculos -> ENTERO .)
    MULTIPLICACION  reduce using rule 118 (paraCalculos -> ENTERO .)
    DIVISION        reduce using rule 118 (paraCalculos -> ENTERO .)
    POTENCIA        reduce using rule 118 (paraCalculos -> ENTERO .)
    MODULO          reduce using rule 118 (paraCalculos -> ENTERO .)
    FIN_LINEA       reduce using rule 118 (paraCalculos -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 118 (paraCalculos -> ENTERO .)


state 241

    (119) paraCalculos -> FLOTANTE .

    SUMA            reduce using rule 119 (paraCalculos -> FLOTANTE .)
    RESTA           reduce using rule 119 (paraCalculos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 119 (paraCalculos -> FLOTANTE .)
    DIVISION        reduce using rule 119 (paraCalculos -> FLOTANTE .)
    POTENCIA        reduce using rule 119 (paraCalculos -> FLOTANTE .)
    MODULO          reduce using rule 119 (paraCalculos -> FLOTANTE .)
    FIN_LINEA       reduce using rule 119 (paraCalculos -> FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 119 (paraCalculos -> FLOTANTE .)


state 242

    (120) paraCalculos -> decl_variable .

    SUMA            reduce using rule 120 (paraCalculos -> decl_variable .)
    RESTA           reduce using rule 120 (paraCalculos -> decl_variable .)
    MULTIPLICACION  reduce using rule 120 (paraCalculos -> decl_variable .)
    DIVISION        reduce using rule 120 (paraCalculos -> decl_variable .)
    POTENCIA        reduce using rule 120 (paraCalculos -> decl_variable .)
    MODULO          reduce using rule 120 (paraCalculos -> decl_variable .)
    FIN_LINEA       reduce using rule 120 (paraCalculos -> decl_variable .)
    PARENTESIS_CIERRA reduce using rule 120 (paraCalculos -> decl_variable .)


state 243

    (41) valor -> decl_variable .
    (18) salidas_posibles -> decl_variable .
    (120) paraCalculos -> decl_variable .

  ! reduce/reduce conflict for SUMA resolved using rule 18 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for RESTA resolved using rule 18 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 18 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for DIVISION resolved using rule 18 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 18 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for MODULO resolved using rule 18 (salidas_posibles -> decl_variable .)
    PARENTESIS_CIERRA reduce using rule 41 (valor -> decl_variable .)
    SUMA            reduce using rule 18 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 18 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 18 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 18 (salidas_posibles -> decl_variable .)

  ! SUMA            [ reduce using rule 120 (paraCalculos -> decl_variable .) ]
  ! RESTA           [ reduce using rule 120 (paraCalculos -> decl_variable .) ]
  ! MULTIPLICACION  [ reduce using rule 120 (paraCalculos -> decl_variable .) ]
  ! DIVISION        [ reduce using rule 120 (paraCalculos -> decl_variable .) ]
  ! POTENCIA        [ reduce using rule 120 (paraCalculos -> decl_variable .) ]
  ! MODULO          [ reduce using rule 120 (paraCalculos -> decl_variable .) ]


state 244

    (59) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 282


state 245

    (60) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 283


state 246

    (39) valor -> pila .

    PARENTESIS_CIERRA reduce using rule 39 (valor -> pila .)


state 247

    (43) datos -> ENTERO .
    (118) paraCalculos -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 43 (datos -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 43 (datos -> ENTERO .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 43 (datos -> ENTERO .)
  ! reduce/reduce conflict for DIVISION resolved using rule 43 (datos -> ENTERO .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 43 (datos -> ENTERO .)
  ! reduce/reduce conflict for MODULO resolved using rule 43 (datos -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 43 (datos -> ENTERO .)
    SUMA            reduce using rule 43 (datos -> ENTERO .)
    RESTA           reduce using rule 43 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 43 (datos -> ENTERO .)
    DIVISION        reduce using rule 43 (datos -> ENTERO .)
    POTENCIA        reduce using rule 43 (datos -> ENTERO .)
    MODULO          reduce using rule 43 (datos -> ENTERO .)

  ! SUMA            [ reduce using rule 118 (paraCalculos -> ENTERO .) ]
  ! RESTA           [ reduce using rule 118 (paraCalculos -> ENTERO .) ]
  ! MULTIPLICACION  [ reduce using rule 118 (paraCalculos -> ENTERO .) ]
  ! DIVISION        [ reduce using rule 118 (paraCalculos -> ENTERO .) ]
  ! POTENCIA        [ reduce using rule 118 (paraCalculos -> ENTERO .) ]
  ! MODULO          [ reduce using rule 118 (paraCalculos -> ENTERO .) ]


state 248

    (44) datos -> FLOTANTE .
    (119) paraCalculos -> FLOTANTE .

  ! reduce/reduce conflict for SUMA resolved using rule 44 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for RESTA resolved using rule 44 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 44 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for DIVISION resolved using rule 44 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 44 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for MODULO resolved using rule 44 (datos -> FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 44 (datos -> FLOTANTE .)
    SUMA            reduce using rule 44 (datos -> FLOTANTE .)
    RESTA           reduce using rule 44 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 44 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 44 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 44 (datos -> FLOTANTE .)
    MODULO          reduce using rule 44 (datos -> FLOTANTE .)

  ! SUMA            [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]
  ! RESTA           [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]
  ! MULTIPLICACION  [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]
  ! DIVISION        [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]
  ! POTENCIA        [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]
  ! MODULO          [ reduce using rule 119 (paraCalculos -> FLOTANTE .) ]


state 249

    (58) poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 58 (poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 250

    (20) salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    RETURN          reduce using rule 20 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)


state 251

    (22) ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    RETURN          reduce using rule 22 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)


state 252

    (23) ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    RETURN          reduce using rule 23 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)


state 253

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA . COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    COMA            shift and go to state 284


state 254

    (69) asociacion -> datos IGUAL MAYOR datos .
    (70) asociacion -> datos IGUAL MAYOR datos . COMA asociacion

    CORCHETE_CIERRA reduce using rule 69 (asociacion -> datos IGUAL MAYOR datos .)
    PARENTESIS_CIERRA reduce using rule 69 (asociacion -> datos IGUAL MAYOR datos .)
    COMA            shift and go to state 285


state 255

    (131) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 286


state 256

    (145) declaracion_s -> decl_variable . crecimiento
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO

    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61

    crecimiento                    shift and go to state 71

state 257

    (134) declaracionp -> decl_variable valorc .

    SIGNO_DOLAR     reduce using rule 134 (declaracionp -> decl_variable valorc .)
    INCREMENTO      reduce using rule 134 (declaracionp -> decl_variable valorc .)
    DECREMENTO      reduce using rule 134 (declaracionp -> decl_variable valorc .)
    CONST           reduce using rule 134 (declaracionp -> decl_variable valorc .)
    PRIVATE         reduce using rule 134 (declaracionp -> decl_variable valorc .)
    PUBLIC          reduce using rule 134 (declaracionp -> decl_variable valorc .)
    PROTECTED       reduce using rule 134 (declaracionp -> decl_variable valorc .)
    STATIC          reduce using rule 134 (declaracionp -> decl_variable valorc .)
    VAR             reduce using rule 134 (declaracionp -> decl_variable valorc .)


state 258

    (135) valorc -> menor .

    SIGNO_DOLAR     reduce using rule 135 (valorc -> menor .)
    INCREMENTO      reduce using rule 135 (valorc -> menor .)
    DECREMENTO      reduce using rule 135 (valorc -> menor .)
    CONST           reduce using rule 135 (valorc -> menor .)
    PRIVATE         reduce using rule 135 (valorc -> menor .)
    PUBLIC          reduce using rule 135 (valorc -> menor .)
    PROTECTED       reduce using rule 135 (valorc -> menor .)
    STATIC          reduce using rule 135 (valorc -> menor .)
    VAR             reduce using rule 135 (valorc -> menor .)


state 259

    (136) valorc -> mayor .

    SIGNO_DOLAR     reduce using rule 136 (valorc -> mayor .)
    INCREMENTO      reduce using rule 136 (valorc -> mayor .)
    DECREMENTO      reduce using rule 136 (valorc -> mayor .)
    CONST           reduce using rule 136 (valorc -> mayor .)
    PRIVATE         reduce using rule 136 (valorc -> mayor .)
    PUBLIC          reduce using rule 136 (valorc -> mayor .)
    PROTECTED       reduce using rule 136 (valorc -> mayor .)
    STATIC          reduce using rule 136 (valorc -> mayor .)
    VAR             reduce using rule 136 (valorc -> mayor .)


state 260

    (137) menor -> MENOR_IGUAL . ENTERO FIN_LINEA
    (138) menor -> MENOR_IGUAL . decl_variable FIN_LINEA
    (142) mayor -> MENOR_IGUAL . decl_variable FIN_LINEA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 287
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 288
    variable_tipo                  shift and go to state 93

state 261

    (139) menor -> MENOR . ENTERO FIN_LINEA
    (140) menor -> MENOR . decl_variable FIN_LINEA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 289
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 290
    variable_tipo                  shift and go to state 93

state 262

    (141) mayor -> MAYOR_IGUAL . ENTERO FIN_LINEA

    ENTERO          shift and go to state 291


state 263

    (143) mayor -> MAYOR . ENTERO FIN_LINEA
    (144) mayor -> MAYOR . decl_variable FIN_LINEA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 292
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 293
    variable_tipo                  shift and go to state 93

state 264

    (151) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable . IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 294
    IGUAL           shift and go to state 295


state 265

    (159) if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .

    CLASS           reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    $end            reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    RETURN          reduce using rule 159 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)


state 266

    (128) bloque -> sentenciasAnidadas retorno .

    LLAVE_CIERRA    reduce using rule 128 (bloque -> sentenciasAnidadas retorno .)


state 267

    (149) retorno -> RETURN salidas_posibles . FIN_LINEA
    (97) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (98) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (99) operaciones_bits -> salidas_posibles . operand_bits salidas_posibles
    (73) operad_arit -> . SUMA
    (74) operad_arit -> . RESTA
    (75) operad_arit -> . MULTIPLICACION
    (76) operad_arit -> . DIVISION
    (77) operad_arit -> . POTENCIA
    (78) operad_arit -> . MODULO
    (92) operand_bits -> . CONJUNCIONBITS
    (93) operand_bits -> . DISYUNCIONBITS
    (94) operand_bits -> . DISYUNCION_EXC
    (95) operand_bits -> . DESPLAZAR_BITS_IZQ
    (96) operand_bits -> . DESPLAZAR_BITS_DER

    FIN_LINEA       shift and go to state 296
    SUMA            shift and go to state 96
    RESTA           shift and go to state 97
    MULTIPLICACION  shift and go to state 98
    DIVISION        shift and go to state 99
    POTENCIA        shift and go to state 100
    MODULO          shift and go to state 101
    CONJUNCIONBITS  shift and go to state 102
    DISYUNCIONBITS  shift and go to state 103
    DISYUNCION_EXC  shift and go to state 104
    DESPLAZAR_BITS_IZQ shift and go to state 105
    DESPLAZAR_BITS_DER shift and go to state 106

    operad_arit                    shift and go to state 94
    operand_bits                   shift and go to state 95

state 268

    (150) retorno -> RETURN operaciones . FIN_LINEA

    FIN_LINEA       shift and go to state 297


state 269

    (18) salidas_posibles -> decl_variable .
    (104) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (105) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (106) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (59) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    FIN_LINEA       reduce using rule 18 (salidas_posibles -> decl_variable .)
    SUMA            reduce using rule 18 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 18 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 18 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 18 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 18 (salidas_posibles -> decl_variable .)
    CONJUNCIONBITS  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DISYUNCIONBITS  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DISYUNCION_EXC  reduce using rule 18 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_IZQ reduce using rule 18 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_DER reduce using rule 18 (salidas_posibles -> decl_variable .)
    LAMBDA          shift and go to state 73
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 72

state 270

    (43) datos -> ENTERO .
    (101) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    FIN_LINEA       reduce using rule 43 (datos -> ENTERO .)
    SUMA            reduce using rule 43 (datos -> ENTERO .)
    RESTA           reduce using rule 43 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 43 (datos -> ENTERO .)
    DIVISION        reduce using rule 43 (datos -> ENTERO .)
    POTENCIA        reduce using rule 43 (datos -> ENTERO .)
    MODULO          reduce using rule 43 (datos -> ENTERO .)
    CONJUNCIONBITS  reduce using rule 43 (datos -> ENTERO .)
    DISYUNCIONBITS  reduce using rule 43 (datos -> ENTERO .)
    DISYUNCION_EXC  reduce using rule 43 (datos -> ENTERO .)
    DESPLAZAR_BITS_IZQ reduce using rule 43 (datos -> ENTERO .)
    DESPLAZAR_BITS_DER reduce using rule 43 (datos -> ENTERO .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 134

state 271

    (44) datos -> FLOTANTE .
    (102) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (79) operad_logico -> . IGUALDAD
    (80) operad_logico -> . IDENTIDAD
    (81) operad_logico -> . DIFERENTE
    (82) operad_logico -> . NO_IDENTIDAD
    (83) operad_logico -> . MAYOR
    (84) operad_logico -> . MAYOR_IGUAL
    (85) operad_logico -> . MENOR
    (86) operad_logico -> . MENOR_IGUAL
    (87) operad_logico -> . AND
    (88) operad_logico -> . OR
    (89) operad_logico -> . XOR
    (90) operad_logico -> . CONJUNCION
    (91) operad_logico -> . DISYUNCION

    FIN_LINEA       reduce using rule 44 (datos -> FLOTANTE .)
    SUMA            reduce using rule 44 (datos -> FLOTANTE .)
    RESTA           reduce using rule 44 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 44 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 44 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 44 (datos -> FLOTANTE .)
    MODULO          reduce using rule 44 (datos -> FLOTANTE .)
    CONJUNCIONBITS  reduce using rule 44 (datos -> FLOTANTE .)
    DISYUNCIONBITS  reduce using rule 44 (datos -> FLOTANTE .)
    DISYUNCION_EXC  reduce using rule 44 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_IZQ reduce using rule 44 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_DER reduce using rule 44 (datos -> FLOTANTE .)
    IGUALDAD        shift and go to state 74
    IDENTIDAD       shift and go to state 75
    DIFERENTE       shift and go to state 76
    NO_IDENTIDAD    shift and go to state 77
    MAYOR           shift and go to state 78
    MAYOR_IGUAL     shift and go to state 79
    MENOR           shift and go to state 80
    MENOR_IGUAL     shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    CONJUNCION      shift and go to state 85
    DISYUNCION      shift and go to state 86

    operad_logico                  shift and go to state 135

state 272

    (157) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA
    (158) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    LLAVE_ABRE      shift and go to state 298


state 273

    (41) valor -> decl_variable .
    (120) paraCalculos -> decl_variable .

    PARENTESIS_CIERRA reduce using rule 41 (valor -> decl_variable .)
    SUMA            reduce using rule 120 (paraCalculos -> decl_variable .)
    RESTA           reduce using rule 120 (paraCalculos -> decl_variable .)
    MULTIPLICACION  reduce using rule 120 (paraCalculos -> decl_variable .)
    DIVISION        reduce using rule 120 (paraCalculos -> decl_variable .)
    POTENCIA        reduce using rule 120 (paraCalculos -> decl_variable .)
    MODULO          reduce using rule 120 (paraCalculos -> decl_variable .)


state 274

    (153) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 299


state 275

    (38) valor -> datos .

    PARENTESIS_CIERRA reduce using rule 38 (valor -> datos .)


state 276

    (47) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (128) bloque -> . sentenciasAnidadas retorno
    (129) bloque -> . sentenciasAnidadas
    (130) bloque -> . retorno
    (132) sentenciasAnidadas -> . instrucciones
    (133) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (149) retorno -> . RETURN salidas_posibles FIN_LINEA
    (150) retorno -> . RETURN operaciones FIN_LINEA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    RETURN          shift and go to state 229
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    bloque                         shift and go to state 300
    sentenciasAnidadas             shift and go to state 227
    retorno                        shift and go to state 228
    instrucciones                  shift and go to state 201
    salidas_posibles               shift and go to state 21
    operaciones                    shift and go to state 15
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    declaracion_s                  shift and go to state 16
    decl_variable                  shift and go to state 18
    funcionuso                     shift and go to state 19
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 277

    (48) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 301


state 278

    (156) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (128) bloque -> . sentenciasAnidadas retorno
    (129) bloque -> . sentenciasAnidadas
    (130) bloque -> . retorno
    (132) sentenciasAnidadas -> . instrucciones
    (133) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (149) retorno -> . RETURN salidas_posibles FIN_LINEA
    (150) retorno -> . RETURN operaciones FIN_LINEA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    RETURN          shift and go to state 229
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    operaciones_logicas            shift and go to state 36
    bloque                         shift and go to state 302
    sentenciasAnidadas             shift and go to state 227
    retorno                        shift and go to state 228
    instrucciones                  shift and go to state 201
    salidas_posibles               shift and go to state 21
    operaciones                    shift and go to state 15
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    declaracion_s                  shift and go to state 16
    decl_variable                  shift and go to state 18
    funcionuso                     shift and go to state 19
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 279

    (54) parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros .

    PARENTESIS_CIERRA reduce using rule 54 (parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros .)


state 280

    (61) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA . salidas_posibles COMA ENTERO PARENTESIS_CIERRA
    (62) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA . salidas_posibles PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92
    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    salidas_posibles               shift and go to state 303
    datos                          shift and go to state 63
    decl_variable                  shift and go to state 89
    variable_tipo                  shift and go to state 93

state 281

    (122) combinarOp -> operad_arit paraCalculos combinarOp .

    FIN_LINEA       reduce using rule 122 (combinarOp -> operad_arit paraCalculos combinarOp .)
    PARENTESIS_CIERRA reduce using rule 122 (combinarOp -> operad_arit paraCalculos combinarOp .)


state 282

    (59) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 59 (pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA .)


state 283

    (60) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 60 (pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA .)


state 284

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA . SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    SIGNO_DOLAR     shift and go to state 304


state 285

    (70) asociacion -> datos IGUAL MAYOR datos COMA . asociacion
    (69) asociacion -> . datos IGUAL MAYOR datos
    (70) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    ENTERO          shift and go to state 90
    FLOTANTE        shift and go to state 91
    CADENA          shift and go to state 24
    BOOLEANO        shift and go to state 92

    datos                          shift and go to state 305
    asociacion                     shift and go to state 306

state 286

    (131) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 307


state 287

    (137) menor -> MENOR_IGUAL ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 308


state 288

    (138) menor -> MENOR_IGUAL decl_variable . FIN_LINEA
    (142) mayor -> MENOR_IGUAL decl_variable . FIN_LINEA

    FIN_LINEA       shift and go to state 309


state 289

    (139) menor -> MENOR ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 310


state 290

    (140) menor -> MENOR decl_variable . FIN_LINEA

    FIN_LINEA       shift and go to state 311


state 291

    (141) mayor -> MAYOR_IGUAL ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 312


state 292

    (143) mayor -> MAYOR ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 313


state 293

    (144) mayor -> MAYOR decl_variable . FIN_LINEA

    FIN_LINEA       shift and go to state 314


state 294

    (151) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 315


state 295

    (152) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL . MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    MAYOR           shift and go to state 316


state 296

    (149) retorno -> RETURN salidas_posibles FIN_LINEA .

    LLAVE_CIERRA    reduce using rule 149 (retorno -> RETURN salidas_posibles FIN_LINEA .)


state 297

    (150) retorno -> RETURN operaciones FIN_LINEA .

    LLAVE_CIERRA    reduce using rule 150 (retorno -> RETURN operaciones FIN_LINEA .)


state 298

    (157) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (158) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA if_else_cuerpo
    (128) bloque -> . sentenciasAnidadas retorno
    (129) bloque -> . sentenciasAnidadas
    (130) bloque -> . retorno
    (132) sentenciasAnidadas -> . instrucciones
    (133) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (149) retorno -> . RETURN salidas_posibles FIN_LINEA
    (150) retorno -> . RETURN operaciones FIN_LINEA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    RETURN          shift and go to state 229
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    operaciones_logicas            shift and go to state 36
    bloque                         shift and go to state 317
    sentenciasAnidadas             shift and go to state 227
    retorno                        shift and go to state 228
    instrucciones                  shift and go to state 201
    salidas_posibles               shift and go to state 21
    operaciones                    shift and go to state 15
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    declaracion_s                  shift and go to state 16
    decl_variable                  shift and go to state 18
    funcionuso                     shift and go to state 19
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 299

    (153) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 318


state 300

    (47) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 319


state 301

    (48) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (128) bloque -> . sentenciasAnidadas retorno
    (129) bloque -> . sentenciasAnidadas
    (130) bloque -> . retorno
    (132) sentenciasAnidadas -> . instrucciones
    (133) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (149) retorno -> . RETURN salidas_posibles FIN_LINEA
    (150) retorno -> . RETURN operaciones FIN_LINEA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    RETURN          shift and go to state 229
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    bloque                         shift and go to state 320
    sentenciasAnidadas             shift and go to state 227
    retorno                        shift and go to state 228
    instrucciones                  shift and go to state 201
    salidas_posibles               shift and go to state 21
    operaciones                    shift and go to state 15
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    declaracion_s                  shift and go to state 16
    decl_variable                  shift and go to state 18
    funcionuso                     shift and go to state 19
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 302

    (156) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 321


state 303

    (61) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles . COMA ENTERO PARENTESIS_CIERRA
    (62) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles . PARENTESIS_CIERRA

    COMA            shift and go to state 322
    PARENTESIS_CIERRA shift and go to state 323


state 304

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR . IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    IDENTIFICADOR   shift and go to state 324


state 305

    (69) asociacion -> datos . IGUAL MAYOR datos
    (70) asociacion -> datos . IGUAL MAYOR datos COMA asociacion

    IGUAL           shift and go to state 188


state 306

    (70) asociacion -> datos IGUAL MAYOR datos COMA asociacion .

    CORCHETE_CIERRA reduce using rule 70 (asociacion -> datos IGUAL MAYOR datos COMA asociacion .)
    PARENTESIS_CIERRA reduce using rule 70 (asociacion -> datos IGUAL MAYOR datos COMA asociacion .)


state 307

    (131) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (132) sentenciasAnidadas -> . instrucciones
    (133) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    asignacion                     shift and go to state 7
    declaracion_s                  shift and go to state 16
    sentenciasAnidadas             shift and go to state 325
    instrucciones                  shift and go to state 201
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    decl_variable                  shift and go to state 18
    funcionuso                     shift and go to state 19
    salidas_posibles               shift and go to state 21
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 308

    (137) menor -> MENOR_IGUAL ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 137 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 137 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 137 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    CONST           reduce using rule 137 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 137 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 137 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 137 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    STATIC          reduce using rule 137 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    VAR             reduce using rule 137 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)


state 309

    (138) menor -> MENOR_IGUAL decl_variable FIN_LINEA .
    (142) mayor -> MENOR_IGUAL decl_variable FIN_LINEA .

  ! reduce/reduce conflict for SIGNO_DOLAR resolved using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for INCREMENTO resolved using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for CONST resolved using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for STATIC resolved using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for VAR resolved using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    INCREMENTO      reduce using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    DECREMENTO      reduce using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    CONST           reduce using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    PRIVATE         reduce using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    PUBLIC          reduce using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    PROTECTED       reduce using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    STATIC          reduce using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    VAR             reduce using rule 138 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)

  ! SIGNO_DOLAR     [ reduce using rule 142 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! INCREMENTO      [ reduce using rule 142 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! DECREMENTO      [ reduce using rule 142 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! CONST           [ reduce using rule 142 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! PRIVATE         [ reduce using rule 142 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! PUBLIC          [ reduce using rule 142 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! PROTECTED       [ reduce using rule 142 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! STATIC          [ reduce using rule 142 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! VAR             [ reduce using rule 142 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]


state 310

    (139) menor -> MENOR ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 139 (menor -> MENOR ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 139 (menor -> MENOR ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 139 (menor -> MENOR ENTERO FIN_LINEA .)
    CONST           reduce using rule 139 (menor -> MENOR ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 139 (menor -> MENOR ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 139 (menor -> MENOR ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 139 (menor -> MENOR ENTERO FIN_LINEA .)
    STATIC          reduce using rule 139 (menor -> MENOR ENTERO FIN_LINEA .)
    VAR             reduce using rule 139 (menor -> MENOR ENTERO FIN_LINEA .)


state 311

    (140) menor -> MENOR decl_variable FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 140 (menor -> MENOR decl_variable FIN_LINEA .)
    INCREMENTO      reduce using rule 140 (menor -> MENOR decl_variable FIN_LINEA .)
    DECREMENTO      reduce using rule 140 (menor -> MENOR decl_variable FIN_LINEA .)
    CONST           reduce using rule 140 (menor -> MENOR decl_variable FIN_LINEA .)
    PRIVATE         reduce using rule 140 (menor -> MENOR decl_variable FIN_LINEA .)
    PUBLIC          reduce using rule 140 (menor -> MENOR decl_variable FIN_LINEA .)
    PROTECTED       reduce using rule 140 (menor -> MENOR decl_variable FIN_LINEA .)
    STATIC          reduce using rule 140 (menor -> MENOR decl_variable FIN_LINEA .)
    VAR             reduce using rule 140 (menor -> MENOR decl_variable FIN_LINEA .)


state 312

    (141) mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 141 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 141 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 141 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    CONST           reduce using rule 141 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 141 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 141 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 141 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    STATIC          reduce using rule 141 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    VAR             reduce using rule 141 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)


state 313

    (143) mayor -> MAYOR ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 143 (mayor -> MAYOR ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 143 (mayor -> MAYOR ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 143 (mayor -> MAYOR ENTERO FIN_LINEA .)
    CONST           reduce using rule 143 (mayor -> MAYOR ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 143 (mayor -> MAYOR ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 143 (mayor -> MAYOR ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 143 (mayor -> MAYOR ENTERO FIN_LINEA .)
    STATIC          reduce using rule 143 (mayor -> MAYOR ENTERO FIN_LINEA .)
    VAR             reduce using rule 143 (mayor -> MAYOR ENTERO FIN_LINEA .)


state 314

    (144) mayor -> MAYOR decl_variable FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 144 (mayor -> MAYOR decl_variable FIN_LINEA .)
    INCREMENTO      reduce using rule 144 (mayor -> MAYOR decl_variable FIN_LINEA .)
    DECREMENTO      reduce using rule 144 (mayor -> MAYOR decl_variable FIN_LINEA .)
    CONST           reduce using rule 144 (mayor -> MAYOR decl_variable FIN_LINEA .)
    PRIVATE         reduce using rule 144 (mayor -> MAYOR decl_variable FIN_LINEA .)
    PUBLIC          reduce using rule 144 (mayor -> MAYOR decl_variable FIN_LINEA .)
    PROTECTED       reduce using rule 144 (mayor -> MAYOR decl_variable FIN_LINEA .)
    STATIC          reduce using rule 144 (mayor -> MAYOR decl_variable FIN_LINEA .)
    VAR             reduce using rule 144 (mayor -> MAYOR decl_variable FIN_LINEA .)


state 315

    (151) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (132) sentenciasAnidadas -> . instrucciones
    (133) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    decl_variable                  shift and go to state 18
    sentenciasAnidadas             shift and go to state 326
    instrucciones                  shift and go to state 201
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    funcionuso                     shift and go to state 19
    salidas_posibles               shift and go to state 21
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 316

    (152) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR . decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 27
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55

    decl_variable                  shift and go to state 327
    variable_tipo                  shift and go to state 93

state 317

    (157) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA
    (158) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA if_else_cuerpo

    LLAVE_CIERRA    shift and go to state 328


state 318

    (153) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    decl_variable                  shift and go to state 18
    instrucciones                  shift and go to state 329
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    funcionuso                     shift and go to state 19
    salidas_posibles               shift and go to state 21
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 319

    (47) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    CLASS           reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    $end            reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    RETURN          reduce using rule 47 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 320

    (48) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 330


state 321

    (156) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    ELSE            reduce using rule 156 (if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ELSEIF          reduce using rule 156 (if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 322

    (61) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA . ENTERO PARENTESIS_CIERRA

    ENTERO          shift and go to state 331


state 323

    (62) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 62 (explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA .)


state 324

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 332


state 325

    (131) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 333


state 326

    (151) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 334


state 327

    (152) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 335


state 328

    (157) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .
    (158) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA . if_else_cuerpo
    (157) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (158) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    ELSE            reduce using rule 157 (if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ELSEIF          shift and go to state 131

    if_else_cuerpo                 shift and go to state 336

state 329

    (153) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 337


state 330

    (48) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    CLASS           reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    $end            reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    RETURN          reduce using rule 48 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 331

    (61) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 338


state 332

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 339


state 333

    (131) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    CLASS           reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    $end            reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    RETURN          reduce using rule 131 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 334

    (151) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    CLASS           reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    $end            reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    RETURN          reduce using rule 151 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 335

    (152) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 340


state 336

    (158) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo .

    ELSE            reduce using rule 158 (if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo .)


state 337

    (153) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    CLASS           reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ECHO            reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    READLINE        reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FGETS           reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FSCANF          reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEW             reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ARRAY           reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOREACH         reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNCTION        reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONST           reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRIVATE         reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PUBLIC          reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PROTECTED       reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STATIC          reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ENTERO          reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEGACION        reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CADENA          reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 153 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 338

    (61) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 61 (explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA .)


state 339

    (24) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    RETURN          reduce using rule 24 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)


state 340

    (152) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (132) sentenciasAnidadas -> . instrucciones
    (133) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (33) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (34) asignacion -> . decl_variable IGUAL estructuras_datos
    (35) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (37) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (19) salida -> . ECHO salidas_posibles FIN_LINEA
    (20) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (21) salida -> . PRINT salidas_posibles FIN_LINEA
    (22) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (23) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (24) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (55) estructuras_datos -> . pila FIN_LINEA
    (56) estructuras_datos -> . arreglo FIN_LINEA
    (124) estructuras_control -> . for
    (125) estructuras_control -> . foreach
    (126) estructuras_control -> . if_else
    (127) estructuras_control -> . while
    (49) funcionglobal -> . funcion
    (50) funcionglobal -> . variable_tipo funcion
    (113) operaciones -> . operaciones_logicas
    (114) operaciones -> . operaciones_arit
    (115) operaciones -> . operaciones_bits
    (116) operaciones -> . pushpila
    (117) operaciones -> . poppila
    (145) declaracion_s -> . decl_variable crecimiento
    (146) declaracion_s -> . crecimiento decl_variable
    (31) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (32) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (57) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (63) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (64) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (131) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (151) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (152) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) if_else -> . if_else_inicio if_else_fin
    (155) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (153) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (48) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (25) variable_tipo -> . CONST
    (26) variable_tipo -> . PRIVATE
    (27) variable_tipo -> . PUBLIC
    (28) variable_tipo -> . PROTECTED
    (29) variable_tipo -> . STATIC
    (30) variable_tipo -> . VAR
    (101) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (102) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (103) operaciones_logicas -> . BOOLEANO
    (104) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (105) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (106) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (107) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (108) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (109) operaciones_logicas -> . funcionuso
    (110) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (111) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (112) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (97) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (98) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (99) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (100) operaciones_bits -> . NEGACION salidas_posibles
    (59) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (60) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (58) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (147) crecimiento -> . INCREMENTO
    (148) crecimiento -> . DECREMENTO
    (156) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (51) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (52) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (17) salidas_posibles -> . datos
    (18) salidas_posibles -> . decl_variable
    (43) datos -> . ENTERO
    (44) datos -> . FLOTANTE
    (45) datos -> . CADENA
    (46) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 20
    PRINT           shift and go to state 22
    READLINE        shift and go to state 23
    FGETS           shift and go to state 25
    FSCANF          shift and go to state 26
    SIGNO_DOLAR     shift and go to state 27
    NEW             shift and go to state 42
    ARRAY           shift and go to state 43
    CORCHETE_ABRE   shift and go to state 44
    FOR             shift and go to state 45
    FOREACH         shift and go to state 46
    WHILE           shift and go to state 48
    FUNCTION        shift and go to state 49
    CONST           shift and go to state 50
    PRIVATE         shift and go to state 51
    PUBLIC          shift and go to state 52
    PROTECTED       shift and go to state 53
    STATIC          shift and go to state 54
    VAR             shift and go to state 55
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 58
    NEGACION        shift and go to state 59
    INCREMENTO      shift and go to state 60
    DECREMENTO      shift and go to state 61
    IF              shift and go to state 62
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 24

    decl_variable                  shift and go to state 18
    sentenciasAnidadas             shift and go to state 341
    instrucciones                  shift and go to state 201
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    funcionuso                     shift and go to state 19
    salidas_posibles               shift and go to state 21
    pila                           shift and go to state 28
    arreglo                        shift and go to state 29
    for                            shift and go to state 30
    foreach                        shift and go to state 31
    if_else                        shift and go to state 32
    while                          shift and go to state 33
    funcion                        shift and go to state 34
    variable_tipo                  shift and go to state 35
    operaciones_logicas            shift and go to state 36
    operaciones_arit               shift and go to state 37
    operaciones_bits               shift and go to state 38
    pushpila                       shift and go to state 39
    poppila                        shift and go to state 40
    crecimiento                    shift and go to state 41
    if_else_inicio                 shift and go to state 47
    datos                          shift and go to state 63

state 341

    (152) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 342


state 342

    (152) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    CLASS           reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    $end            reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    RETURN          reduce using rule 152 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUALDAD in state 19 resolved as shift
WARNING: shift/reduce conflict for IDENTIDAD in state 19 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 19 resolved as shift
WARNING: shift/reduce conflict for NO_IDENTIDAD in state 19 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 19 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 19 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for AND in state 19 resolved as shift
WARNING: shift/reduce conflict for OR in state 19 resolved as shift
WARNING: shift/reduce conflict for XOR in state 19 resolved as shift
WARNING: shift/reduce conflict for CONJUNCION in state 19 resolved as shift
WARNING: shift/reduce conflict for DISYUNCION in state 19 resolved as shift
WARNING: shift/reduce conflict for FIN_LINEA in state 147 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 147 resolved as shift
WARNING: shift/reduce conflict for IDENTIDAD in state 147 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 147 resolved as shift
WARNING: shift/reduce conflict for NO_IDENTIDAD in state 147 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 147 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 147 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for AND in state 147 resolved as shift
WARNING: shift/reduce conflict for OR in state 147 resolved as shift
WARNING: shift/reduce conflict for XOR in state 147 resolved as shift
WARNING: shift/reduce conflict for CONJUNCION in state 147 resolved as shift
WARNING: shift/reduce conflict for DISYUNCION in state 147 resolved as shift
WARNING: shift/reduce conflict for FIN_LINEA in state 150 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 163 resolved as shift
WARNING: shift/reduce conflict for IDENTIDAD in state 163 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 163 resolved as shift
WARNING: shift/reduce conflict for NO_IDENTIDAD in state 163 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 163 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 163 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 163 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 163 resolved as shift
WARNING: shift/reduce conflict for AND in state 163 resolved as shift
WARNING: shift/reduce conflict for OR in state 163 resolved as shift
WARNING: shift/reduce conflict for XOR in state 163 resolved as shift
WARNING: shift/reduce conflict for CONJUNCION in state 163 resolved as shift
WARNING: shift/reduce conflict for DISYUNCION in state 163 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 164 resolved as shift
WARNING: shift/reduce conflict for IDENTIDAD in state 164 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 164 resolved as shift
WARNING: shift/reduce conflict for NO_IDENTIDAD in state 164 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 164 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 164 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 164 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 164 resolved as shift
WARNING: shift/reduce conflict for AND in state 164 resolved as shift
WARNING: shift/reduce conflict for OR in state 164 resolved as shift
WARNING: shift/reduce conflict for XOR in state 164 resolved as shift
WARNING: shift/reduce conflict for CONJUNCION in state 164 resolved as shift
WARNING: shift/reduce conflict for DISYUNCION in state 164 resolved as shift
WARNING: reduce/reduce conflict in state 143 resolved using rule (salidas_posibles -> decl_variable)
WARNING: rejected rule (paraCalculos -> decl_variable) in state 143
WARNING: reduce/reduce conflict in state 154 resolved using rule (datos -> ENTERO)
WARNING: rejected rule (paraCalculos -> ENTERO) in state 154
WARNING: reduce/reduce conflict in state 155 resolved using rule (datos -> FLOTANTE)
WARNING: rejected rule (paraCalculos -> FLOTANTE) in state 155
WARNING: reduce/reduce conflict in state 156 resolved using rule (datos -> BOOLEANO)
WARNING: rejected rule (operaciones_logicas -> BOOLEANO) in state 156
WARNING: reduce/reduce conflict in state 163 resolved using rule (operaciones_logicas -> funcionuso)
WARNING: rejected rule (operaciones_logicas -> funcionuso operad_logico funcionuso) in state 163
WARNING: reduce/reduce conflict in state 243 resolved using rule (salidas_posibles -> decl_variable)
WARNING: rejected rule (paraCalculos -> decl_variable) in state 243
WARNING: reduce/reduce conflict in state 247 resolved using rule (datos -> ENTERO)
WARNING: rejected rule (paraCalculos -> ENTERO) in state 247
WARNING: reduce/reduce conflict in state 248 resolved using rule (datos -> FLOTANTE)
WARNING: rejected rule (paraCalculos -> FLOTANTE) in state 248
WARNING: reduce/reduce conflict in state 309 resolved using rule (menor -> MENOR_IGUAL decl_variable FIN_LINEA)
WARNING: rejected rule (mayor -> MENOR_IGUAL decl_variable FIN_LINEA) in state 309
WARNING: Rule (operaciones_logicas -> funcionuso operad_logico funcionuso) is never reduced
WARNING: Rule (mayor -> MENOR_IGUAL decl_variable FIN_LINEA) is never reduced
