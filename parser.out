Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BACKSLASH

Grammar

Rule 0     S' -> variaslineas
Rule 1     variaslineas -> programa
Rule 2     variaslineas -> programa variaslineas
Rule 3     programa -> clase
Rule 4     programa -> instrucciones
Rule 5     clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 6     instrucciones -> asignacion
Rule 7     instrucciones -> salida
Rule 8     instrucciones -> ingreso
Rule 9     instrucciones -> estructuras_datos
Rule 10    instrucciones -> estructuras_control
Rule 11    instrucciones -> funcionglobal
Rule 12    instrucciones -> COMENTARIO_LINEA
Rule 13    instrucciones -> COMENTARIO_BLOQUE
Rule 14    instrucciones -> operaciones FIN_LINEA
Rule 15    instrucciones -> declaracion_s FIN_LINEA
Rule 16    instrucciones -> BREAK FIN_LINEA
Rule 17    instrucciones -> concadenacion1
Rule 18    instrucciones -> concatenacion2
Rule 19    salidas_posibles -> datos
Rule 20    salidas_posibles -> decl_variable
Rule 21    salida -> ECHO salidas_posibles FIN_LINEA
Rule 22    salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
Rule 23    salida -> PRINT salidas_posibles FIN_LINEA
Rule 24    ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
Rule 25    ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
Rule 26    ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
Rule 27    variable_tipo -> CONST
Rule 28    variable_tipo -> PRIVATE
Rule 29    variable_tipo -> PUBLIC
Rule 30    variable_tipo -> PROTECTED
Rule 31    variable_tipo -> STATIC
Rule 32    variable_tipo -> VAR
Rule 33    decl_variable -> SIGNO_DOLAR IDENTIFICADOR
Rule 34    decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR
Rule 35    asignacion -> decl_variable IGUAL valor FIN_LINEA
Rule 36    asignacion -> decl_variable IGUAL estructuras_datos
Rule 37    asignacion -> decl_variable IGUAL explode FIN_LINEA
Rule 38    asignacion -> decl_variable IGUAL funcionuso FIN_LINEA
Rule 39    asignacion -> decl_variable IGUAL operaciones FIN_LINEA
Rule 40    valor -> datos
Rule 41    valor -> pila
Rule 42    valor -> NULO
Rule 43    valor -> decl_variable
Rule 44    valor -> opAritVar
Rule 45    datos -> ENTERO
Rule 46    datos -> FLOTANTE
Rule 47    datos -> CADENA
Rule 48    datos -> BOOLEANO
Rule 49    funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 50    funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 51    funcionglobal -> funcion
Rule 52    funcionglobal -> variable_tipo funcion
Rule 53    funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
Rule 54    funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
Rule 55    parametros -> SIGNO_DOLAR IDENTIFICADOR
Rule 56    parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros
Rule 57    estructuras_datos -> pila FIN_LINEA
Rule 58    estructuras_datos -> arreglo FIN_LINEA
Rule 59    pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 60    poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 61    pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
Rule 62    pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
Rule 63    explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA
Rule 64    explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA
Rule 65    arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 66    arreglo -> CORCHETE_ABRE CORCHETE_CIERRA
Rule 67    arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
Rule 68    arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA
Rule 69    arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
Rule 70    arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA
Rule 71    asociacion -> datos IGUAL MAYOR datos
Rule 72    asociacion -> datos IGUAL MAYOR datos COMA asociacion
Rule 73    elementos -> datos
Rule 74    elementos -> datos COMA elementos
Rule 75    operad_arit -> SUMA
Rule 76    operad_arit -> RESTA
Rule 77    operad_arit -> MULTIPLICACION
Rule 78    operad_arit -> DIVISION
Rule 79    operad_arit -> POTENCIA
Rule 80    operad_arit -> MODULO
Rule 81    operad_logico -> IGUALDAD
Rule 82    operad_logico -> IDENTIDAD
Rule 83    operad_logico -> DIFERENTE
Rule 84    operad_logico -> NO_IDENTIDAD
Rule 85    operad_logico -> MAYOR
Rule 86    operad_logico -> MAYOR_IGUAL
Rule 87    operad_logico -> MENOR
Rule 88    operad_logico -> MENOR_IGUAL
Rule 89    operad_logico -> AND
Rule 90    operad_logico -> OR
Rule 91    operad_logico -> XOR
Rule 92    operad_logico -> CONJUNCION
Rule 93    operad_logico -> DISYUNCION
Rule 94    operand_bits -> CONJUNCIONBITS
Rule 95    operand_bits -> DISYUNCIONBITS
Rule 96    operand_bits -> DISYUNCION_EXC
Rule 97    operand_bits -> DESPLAZAR_BITS_IZQ
Rule 98    operand_bits -> DESPLAZAR_BITS_DER
Rule 99    operaciones_arit -> salidas_posibles operad_arit salidas_posibles
Rule 100   operaciones_arit -> salidas_posibles operad_arit operaciones_arit
Rule 101   operaciones_bits -> salidas_posibles operand_bits salidas_posibles
Rule 102   operaciones_bits -> NEGACION salidas_posibles
Rule 103   operaciones_logicas -> ENTERO operad_logico ENTERO
Rule 104   operaciones_logicas -> FLOTANTE operad_logico FLOTANTE
Rule 105   operaciones_logicas -> BOOLEANO
Rule 106   operaciones_logicas -> decl_variable operad_logico decl_variable
Rule 107   operaciones_logicas -> decl_variable operad_logico ENTERO
Rule 108   operaciones_logicas -> decl_variable operad_logico FLOTANTE
Rule 109   operaciones_logicas -> operaciones_arit operad_logico ENTERO
Rule 110   operaciones_logicas -> operaciones_arit operad_logico FLOTANTE
Rule 111   operaciones_logicas -> funcionuso
Rule 112   operaciones_logicas -> funcionuso operad_logico funcionuso
Rule 113   operaciones_logicas -> funcionuso operad_logico operaciones_logicas
Rule 114   operaciones_logicas -> operaciones_logicas operad_logico funcionuso
Rule 115   operaciones -> operaciones_logicas
Rule 116   operaciones -> operaciones_arit
Rule 117   operaciones -> operaciones_bits
Rule 118   operaciones -> pushpila
Rule 119   operaciones -> poppila
Rule 120   paraCalculos -> ENTERO
Rule 121   paraCalculos -> FLOTANTE
Rule 122   paraCalculos -> decl_variable
Rule 123   combinarOp -> operad_arit paraCalculos
Rule 124   combinarOp -> operad_arit paraCalculos combinarOp
Rule 125   opAritVar -> paraCalculos combinarOp
Rule 126   estructuras_control -> for
Rule 127   estructuras_control -> foreach
Rule 128   estructuras_control -> if_else
Rule 129   estructuras_control -> while
Rule 130   bloque -> sentenciasAnidadas retorno
Rule 131   bloque -> sentenciasAnidadas
Rule 132   bloque -> retorno
Rule 133   for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 134   sentenciasAnidadas -> instrucciones
Rule 135   sentenciasAnidadas -> instrucciones sentenciasAnidadas
Rule 136   declaracionp -> decl_variable valorc
Rule 137   valorc -> menor
Rule 138   valorc -> mayor
Rule 139   menor -> MENOR_IGUAL ENTERO FIN_LINEA
Rule 140   menor -> MENOR_IGUAL decl_variable FIN_LINEA
Rule 141   menor -> MENOR ENTERO FIN_LINEA
Rule 142   menor -> MENOR decl_variable FIN_LINEA
Rule 143   mayor -> MAYOR_IGUAL ENTERO FIN_LINEA
Rule 144   mayor -> MENOR_IGUAL decl_variable FIN_LINEA
Rule 145   mayor -> MAYOR ENTERO FIN_LINEA
Rule 146   mayor -> MAYOR decl_variable FIN_LINEA
Rule 147   declaracion_s -> decl_variable crecimiento
Rule 148   declaracion_s -> crecimiento decl_variable
Rule 149   crecimiento -> INCREMENTO
Rule 150   crecimiento -> DECREMENTO
Rule 151   retorno -> RETURN salidas_posibles FIN_LINEA
Rule 152   retorno -> RETURN operaciones FIN_LINEA
Rule 153   foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 154   foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 155   while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 156   if_else -> if_else_inicio if_else_fin
Rule 157   if_else -> if_else_inicio if_else_cuerpo if_else_fin
Rule 158   if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 159   if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 160   if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
Rule 161   if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA
Rule 162   concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
Rule 163   concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA

Terminals, with rules where they appear

AND                  : 89
ARRAY                : 65 67 69
AS                   : 153 154
BACKSLASH            : 
BOOLEANO             : 48 105
BREAK                : 16
CADENA               : 24 26 47 63 64
CLASS                : 5
COMA                 : 26 26 56 63 63 64 72 74
COMENTARIO_BLOQUE    : 13
COMENTARIO_LINEA     : 12
CONJUNCION           : 92
CONJUNCIONBITS       : 94
CONST                : 27
CORCHETE_ABRE        : 66 68 70
CORCHETE_CIERRA      : 66 68 70
DECREMENTO           : 150
DESPLAZAR_BITS_DER   : 98
DESPLAZAR_BITS_IZQ   : 97
DIFERENTE            : 83
DISYUNCION           : 93
DISYUNCIONBITS       : 95
DISYUNCION_EXC       : 96
DIVISION             : 78
ECHO                 : 21 162
ELSE                 : 161
ELSEIF               : 159 160
ENTERO               : 45 63 103 103 107 109 120 139 141 143 145
EXPLODE              : 63 64
FGETS                : 25
FIN_LINEA            : 14 15 16 21 22 23 24 25 26 35 37 38 39 57 58 139 140 141 142 143 144 145 146 151 152 162 163
FLOTANTE             : 46 104 104 108 110 121
FOR                  : 133
FOREACH              : 153 154
FSCANF               : 26
FUNCTION             : 49 50
IDENTIDAD            : 82
IDENTIFICADOR        : 5 26 33 34 49 50 53 54 55 56
IF                   : 158
IGUAL                : 35 36 37 38 39 71 72 154 163
IGUALDAD             : 81
INCREMENTO           : 149
LAMBDA               : 60 61 62
LLAVE_ABRE           : 5 49 50 133 153 154 155 158 159 160 161
LLAVE_CIERRA         : 5 49 50 133 153 154 155 158 159 160 161
MAYOR                : 71 72 85 145 146 154
MAYOR_IGUAL          : 86 143
MENOR                : 87 141 142
MENOR_IGUAL          : 88 139 140 144
MODULO               : 80
MULTIPLICACION       : 77
NEGACION             : 102
NEW                  : 59
NO_IDENTIDAD         : 84
NULO                 : 42
OR                   : 90
PARENTESIS_ABRE      : 22 24 25 26 49 50 53 54 59 60 61 62 63 64 65 67 69 133 153 154 155 158 159 160
PARENTESIS_CIERRA    : 22 24 25 26 49 50 53 54 59 60 61 62 63 64 65 67 69 133 153 154 155 158 159 160
POP                  : 60
POTENCIA             : 79
PRINT                : 22 23
PRIVATE              : 28
PROTECTED            : 30
PUBLIC               : 29
PUNTO                : 162 163
PUSH                 : 61 62
READLINE             : 24
RESTA                : 76
RETURN               : 151 152
SIGNO_DOLAR          : 26 33 34 55 56
STACK                : 59
STATIC               : 31
STDIN                : 25 26
SUMA                 : 75
VAR                  : 32
WHILE                : 155
XOR                  : 91
error                : 

Nonterminals, with rules where they appear

arreglo              : 58
asignacion           : 6 133
asociacion           : 69 70 72
bloque               : 49 50 158 159 160 161
clase                : 3
combinarOp           : 124 125
concadenacion1       : 17
concatenacion2       : 18
crecimiento          : 147 148
datos                : 19 40 71 71 72 72 73 74 163
decl_variable        : 20 35 36 37 38 39 43 60 61 62 106 106 107 108 122 136 140 142 144 146 147 148 153 153 154 154 154 155 162 163
declaracion_s        : 15 133
declaracionp         : 133
elementos            : 54 67 68 74
estructuras_control  : 10
estructuras_datos    : 9 36
explode              : 37
for                  : 126
foreach              : 127
funcion              : 51 52
funcionglobal        : 11
funcionuso           : 38 111 112 112 113 114
if_else              : 128
if_else_cuerpo       : 157 160
if_else_fin          : 156 157
if_else_inicio       : 156 157
ingreso              : 8
instrucciones        : 4 134 135 155
mayor                : 138
menor                : 137
opAritVar            : 44
operaciones          : 14 39 152
operaciones_arit     : 62 100 109 110 116
operaciones_bits     : 117
operaciones_logicas  : 113 114 115 158 159 160
operad_arit          : 99 100 123 124
operad_logico        : 103 104 106 107 108 109 110 112 113 114 155
operand_bits         : 101
paraCalculos         : 123 124 125
parametros           : 50 53 56
pila                 : 41 57
poppila              : 119
programa             : 1 2
pushpila             : 118
retorno              : 130 132
salida               : 7
salidas_posibles     : 21 22 23 63 64 99 99 100 101 101 102 151 162
sentenciasAnidadas   : 5 130 131 133 135 153 154
valor                : 35 61 155
valorc               : 136
variable_tipo        : 34 52
variaslineas         : 2 0
while                : 129

Parsing method: LALR

state 0

    (0) S' -> . variaslineas
    (1) variaslineas -> . programa
    (2) variaslineas -> . programa variaslineas
    (3) programa -> . clase
    (4) programa -> . instrucciones
    (5) clase -> . CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    CLASS           shift and go to state 5
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    variaslineas                   shift and go to state 1
    programa                       shift and go to state 2
    clase                          shift and go to state 3
    instrucciones                  shift and go to state 4
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    decl_variable                  shift and go to state 20
    funcionuso                     shift and go to state 21
    salidas_posibles               shift and go to state 23
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 1

    (0) S' -> variaslineas .



state 2

    (1) variaslineas -> programa .
    (2) variaslineas -> programa . variaslineas
    (1) variaslineas -> . programa
    (2) variaslineas -> . programa variaslineas
    (3) programa -> . clase
    (4) programa -> . instrucciones
    (5) clase -> . CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    $end            reduce using rule 1 (variaslineas -> programa .)
    CLASS           shift and go to state 5
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    programa                       shift and go to state 2
    variaslineas                   shift and go to state 66
    clase                          shift and go to state 3
    instrucciones                  shift and go to state 4
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    decl_variable                  shift and go to state 20
    funcionuso                     shift and go to state 21
    salidas_posibles               shift and go to state 23
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 3

    (3) programa -> clase .

    CLASS           reduce using rule 3 (programa -> clase .)
    COMENTARIO_LINEA reduce using rule 3 (programa -> clase .)
    COMENTARIO_BLOQUE reduce using rule 3 (programa -> clase .)
    BREAK           reduce using rule 3 (programa -> clase .)
    ECHO            reduce using rule 3 (programa -> clase .)
    PRINT           reduce using rule 3 (programa -> clase .)
    READLINE        reduce using rule 3 (programa -> clase .)
    FGETS           reduce using rule 3 (programa -> clase .)
    FSCANF          reduce using rule 3 (programa -> clase .)
    SIGNO_DOLAR     reduce using rule 3 (programa -> clase .)
    NEW             reduce using rule 3 (programa -> clase .)
    ARRAY           reduce using rule 3 (programa -> clase .)
    CORCHETE_ABRE   reduce using rule 3 (programa -> clase .)
    FOR             reduce using rule 3 (programa -> clase .)
    FOREACH         reduce using rule 3 (programa -> clase .)
    WHILE           reduce using rule 3 (programa -> clase .)
    FUNCTION        reduce using rule 3 (programa -> clase .)
    CONST           reduce using rule 3 (programa -> clase .)
    PRIVATE         reduce using rule 3 (programa -> clase .)
    PUBLIC          reduce using rule 3 (programa -> clase .)
    PROTECTED       reduce using rule 3 (programa -> clase .)
    STATIC          reduce using rule 3 (programa -> clase .)
    VAR             reduce using rule 3 (programa -> clase .)
    ENTERO          reduce using rule 3 (programa -> clase .)
    FLOTANTE        reduce using rule 3 (programa -> clase .)
    BOOLEANO        reduce using rule 3 (programa -> clase .)
    NEGACION        reduce using rule 3 (programa -> clase .)
    INCREMENTO      reduce using rule 3 (programa -> clase .)
    DECREMENTO      reduce using rule 3 (programa -> clase .)
    IF              reduce using rule 3 (programa -> clase .)
    IDENTIFICADOR   reduce using rule 3 (programa -> clase .)
    CADENA          reduce using rule 3 (programa -> clase .)
    $end            reduce using rule 3 (programa -> clase .)


state 4

    (4) programa -> instrucciones .

    CLASS           reduce using rule 4 (programa -> instrucciones .)
    COMENTARIO_LINEA reduce using rule 4 (programa -> instrucciones .)
    COMENTARIO_BLOQUE reduce using rule 4 (programa -> instrucciones .)
    BREAK           reduce using rule 4 (programa -> instrucciones .)
    ECHO            reduce using rule 4 (programa -> instrucciones .)
    PRINT           reduce using rule 4 (programa -> instrucciones .)
    READLINE        reduce using rule 4 (programa -> instrucciones .)
    FGETS           reduce using rule 4 (programa -> instrucciones .)
    FSCANF          reduce using rule 4 (programa -> instrucciones .)
    SIGNO_DOLAR     reduce using rule 4 (programa -> instrucciones .)
    NEW             reduce using rule 4 (programa -> instrucciones .)
    ARRAY           reduce using rule 4 (programa -> instrucciones .)
    CORCHETE_ABRE   reduce using rule 4 (programa -> instrucciones .)
    FOR             reduce using rule 4 (programa -> instrucciones .)
    FOREACH         reduce using rule 4 (programa -> instrucciones .)
    WHILE           reduce using rule 4 (programa -> instrucciones .)
    FUNCTION        reduce using rule 4 (programa -> instrucciones .)
    CONST           reduce using rule 4 (programa -> instrucciones .)
    PRIVATE         reduce using rule 4 (programa -> instrucciones .)
    PUBLIC          reduce using rule 4 (programa -> instrucciones .)
    PROTECTED       reduce using rule 4 (programa -> instrucciones .)
    STATIC          reduce using rule 4 (programa -> instrucciones .)
    VAR             reduce using rule 4 (programa -> instrucciones .)
    ENTERO          reduce using rule 4 (programa -> instrucciones .)
    FLOTANTE        reduce using rule 4 (programa -> instrucciones .)
    BOOLEANO        reduce using rule 4 (programa -> instrucciones .)
    NEGACION        reduce using rule 4 (programa -> instrucciones .)
    INCREMENTO      reduce using rule 4 (programa -> instrucciones .)
    DECREMENTO      reduce using rule 4 (programa -> instrucciones .)
    IF              reduce using rule 4 (programa -> instrucciones .)
    IDENTIFICADOR   reduce using rule 4 (programa -> instrucciones .)
    CADENA          reduce using rule 4 (programa -> instrucciones .)
    $end            reduce using rule 4 (programa -> instrucciones .)


state 5

    (5) clase -> CLASS . IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 67


state 6

    (53) funcionuso -> IDENTIFICADOR . PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> IDENTIFICADOR . PARENTESIS_ABRE elementos PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 68


state 7

    (6) instrucciones -> asignacion .

    CLASS           reduce using rule 6 (instrucciones -> asignacion .)
    COMENTARIO_LINEA reduce using rule 6 (instrucciones -> asignacion .)
    COMENTARIO_BLOQUE reduce using rule 6 (instrucciones -> asignacion .)
    BREAK           reduce using rule 6 (instrucciones -> asignacion .)
    ECHO            reduce using rule 6 (instrucciones -> asignacion .)
    PRINT           reduce using rule 6 (instrucciones -> asignacion .)
    READLINE        reduce using rule 6 (instrucciones -> asignacion .)
    FGETS           reduce using rule 6 (instrucciones -> asignacion .)
    FSCANF          reduce using rule 6 (instrucciones -> asignacion .)
    SIGNO_DOLAR     reduce using rule 6 (instrucciones -> asignacion .)
    NEW             reduce using rule 6 (instrucciones -> asignacion .)
    ARRAY           reduce using rule 6 (instrucciones -> asignacion .)
    CORCHETE_ABRE   reduce using rule 6 (instrucciones -> asignacion .)
    FOR             reduce using rule 6 (instrucciones -> asignacion .)
    FOREACH         reduce using rule 6 (instrucciones -> asignacion .)
    WHILE           reduce using rule 6 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 6 (instrucciones -> asignacion .)
    CONST           reduce using rule 6 (instrucciones -> asignacion .)
    PRIVATE         reduce using rule 6 (instrucciones -> asignacion .)
    PUBLIC          reduce using rule 6 (instrucciones -> asignacion .)
    PROTECTED       reduce using rule 6 (instrucciones -> asignacion .)
    STATIC          reduce using rule 6 (instrucciones -> asignacion .)
    VAR             reduce using rule 6 (instrucciones -> asignacion .)
    ENTERO          reduce using rule 6 (instrucciones -> asignacion .)
    FLOTANTE        reduce using rule 6 (instrucciones -> asignacion .)
    BOOLEANO        reduce using rule 6 (instrucciones -> asignacion .)
    NEGACION        reduce using rule 6 (instrucciones -> asignacion .)
    INCREMENTO      reduce using rule 6 (instrucciones -> asignacion .)
    DECREMENTO      reduce using rule 6 (instrucciones -> asignacion .)
    IF              reduce using rule 6 (instrucciones -> asignacion .)
    IDENTIFICADOR   reduce using rule 6 (instrucciones -> asignacion .)
    CADENA          reduce using rule 6 (instrucciones -> asignacion .)
    $end            reduce using rule 6 (instrucciones -> asignacion .)
    LLAVE_CIERRA    reduce using rule 6 (instrucciones -> asignacion .)
    RETURN          reduce using rule 6 (instrucciones -> asignacion .)


state 8

    (7) instrucciones -> salida .

    CLASS           reduce using rule 7 (instrucciones -> salida .)
    COMENTARIO_LINEA reduce using rule 7 (instrucciones -> salida .)
    COMENTARIO_BLOQUE reduce using rule 7 (instrucciones -> salida .)
    BREAK           reduce using rule 7 (instrucciones -> salida .)
    ECHO            reduce using rule 7 (instrucciones -> salida .)
    PRINT           reduce using rule 7 (instrucciones -> salida .)
    READLINE        reduce using rule 7 (instrucciones -> salida .)
    FGETS           reduce using rule 7 (instrucciones -> salida .)
    FSCANF          reduce using rule 7 (instrucciones -> salida .)
    SIGNO_DOLAR     reduce using rule 7 (instrucciones -> salida .)
    NEW             reduce using rule 7 (instrucciones -> salida .)
    ARRAY           reduce using rule 7 (instrucciones -> salida .)
    CORCHETE_ABRE   reduce using rule 7 (instrucciones -> salida .)
    FOR             reduce using rule 7 (instrucciones -> salida .)
    FOREACH         reduce using rule 7 (instrucciones -> salida .)
    WHILE           reduce using rule 7 (instrucciones -> salida .)
    FUNCTION        reduce using rule 7 (instrucciones -> salida .)
    CONST           reduce using rule 7 (instrucciones -> salida .)
    PRIVATE         reduce using rule 7 (instrucciones -> salida .)
    PUBLIC          reduce using rule 7 (instrucciones -> salida .)
    PROTECTED       reduce using rule 7 (instrucciones -> salida .)
    STATIC          reduce using rule 7 (instrucciones -> salida .)
    VAR             reduce using rule 7 (instrucciones -> salida .)
    ENTERO          reduce using rule 7 (instrucciones -> salida .)
    FLOTANTE        reduce using rule 7 (instrucciones -> salida .)
    BOOLEANO        reduce using rule 7 (instrucciones -> salida .)
    NEGACION        reduce using rule 7 (instrucciones -> salida .)
    INCREMENTO      reduce using rule 7 (instrucciones -> salida .)
    DECREMENTO      reduce using rule 7 (instrucciones -> salida .)
    IF              reduce using rule 7 (instrucciones -> salida .)
    IDENTIFICADOR   reduce using rule 7 (instrucciones -> salida .)
    CADENA          reduce using rule 7 (instrucciones -> salida .)
    $end            reduce using rule 7 (instrucciones -> salida .)
    LLAVE_CIERRA    reduce using rule 7 (instrucciones -> salida .)
    RETURN          reduce using rule 7 (instrucciones -> salida .)


state 9

    (8) instrucciones -> ingreso .

    CLASS           reduce using rule 8 (instrucciones -> ingreso .)
    COMENTARIO_LINEA reduce using rule 8 (instrucciones -> ingreso .)
    COMENTARIO_BLOQUE reduce using rule 8 (instrucciones -> ingreso .)
    BREAK           reduce using rule 8 (instrucciones -> ingreso .)
    ECHO            reduce using rule 8 (instrucciones -> ingreso .)
    PRINT           reduce using rule 8 (instrucciones -> ingreso .)
    READLINE        reduce using rule 8 (instrucciones -> ingreso .)
    FGETS           reduce using rule 8 (instrucciones -> ingreso .)
    FSCANF          reduce using rule 8 (instrucciones -> ingreso .)
    SIGNO_DOLAR     reduce using rule 8 (instrucciones -> ingreso .)
    NEW             reduce using rule 8 (instrucciones -> ingreso .)
    ARRAY           reduce using rule 8 (instrucciones -> ingreso .)
    CORCHETE_ABRE   reduce using rule 8 (instrucciones -> ingreso .)
    FOR             reduce using rule 8 (instrucciones -> ingreso .)
    FOREACH         reduce using rule 8 (instrucciones -> ingreso .)
    WHILE           reduce using rule 8 (instrucciones -> ingreso .)
    FUNCTION        reduce using rule 8 (instrucciones -> ingreso .)
    CONST           reduce using rule 8 (instrucciones -> ingreso .)
    PRIVATE         reduce using rule 8 (instrucciones -> ingreso .)
    PUBLIC          reduce using rule 8 (instrucciones -> ingreso .)
    PROTECTED       reduce using rule 8 (instrucciones -> ingreso .)
    STATIC          reduce using rule 8 (instrucciones -> ingreso .)
    VAR             reduce using rule 8 (instrucciones -> ingreso .)
    ENTERO          reduce using rule 8 (instrucciones -> ingreso .)
    FLOTANTE        reduce using rule 8 (instrucciones -> ingreso .)
    BOOLEANO        reduce using rule 8 (instrucciones -> ingreso .)
    NEGACION        reduce using rule 8 (instrucciones -> ingreso .)
    INCREMENTO      reduce using rule 8 (instrucciones -> ingreso .)
    DECREMENTO      reduce using rule 8 (instrucciones -> ingreso .)
    IF              reduce using rule 8 (instrucciones -> ingreso .)
    IDENTIFICADOR   reduce using rule 8 (instrucciones -> ingreso .)
    CADENA          reduce using rule 8 (instrucciones -> ingreso .)
    $end            reduce using rule 8 (instrucciones -> ingreso .)
    LLAVE_CIERRA    reduce using rule 8 (instrucciones -> ingreso .)
    RETURN          reduce using rule 8 (instrucciones -> ingreso .)


state 10

    (9) instrucciones -> estructuras_datos .

    CLASS           reduce using rule 9 (instrucciones -> estructuras_datos .)
    COMENTARIO_LINEA reduce using rule 9 (instrucciones -> estructuras_datos .)
    COMENTARIO_BLOQUE reduce using rule 9 (instrucciones -> estructuras_datos .)
    BREAK           reduce using rule 9 (instrucciones -> estructuras_datos .)
    ECHO            reduce using rule 9 (instrucciones -> estructuras_datos .)
    PRINT           reduce using rule 9 (instrucciones -> estructuras_datos .)
    READLINE        reduce using rule 9 (instrucciones -> estructuras_datos .)
    FGETS           reduce using rule 9 (instrucciones -> estructuras_datos .)
    FSCANF          reduce using rule 9 (instrucciones -> estructuras_datos .)
    SIGNO_DOLAR     reduce using rule 9 (instrucciones -> estructuras_datos .)
    NEW             reduce using rule 9 (instrucciones -> estructuras_datos .)
    ARRAY           reduce using rule 9 (instrucciones -> estructuras_datos .)
    CORCHETE_ABRE   reduce using rule 9 (instrucciones -> estructuras_datos .)
    FOR             reduce using rule 9 (instrucciones -> estructuras_datos .)
    FOREACH         reduce using rule 9 (instrucciones -> estructuras_datos .)
    WHILE           reduce using rule 9 (instrucciones -> estructuras_datos .)
    FUNCTION        reduce using rule 9 (instrucciones -> estructuras_datos .)
    CONST           reduce using rule 9 (instrucciones -> estructuras_datos .)
    PRIVATE         reduce using rule 9 (instrucciones -> estructuras_datos .)
    PUBLIC          reduce using rule 9 (instrucciones -> estructuras_datos .)
    PROTECTED       reduce using rule 9 (instrucciones -> estructuras_datos .)
    STATIC          reduce using rule 9 (instrucciones -> estructuras_datos .)
    VAR             reduce using rule 9 (instrucciones -> estructuras_datos .)
    ENTERO          reduce using rule 9 (instrucciones -> estructuras_datos .)
    FLOTANTE        reduce using rule 9 (instrucciones -> estructuras_datos .)
    BOOLEANO        reduce using rule 9 (instrucciones -> estructuras_datos .)
    NEGACION        reduce using rule 9 (instrucciones -> estructuras_datos .)
    INCREMENTO      reduce using rule 9 (instrucciones -> estructuras_datos .)
    DECREMENTO      reduce using rule 9 (instrucciones -> estructuras_datos .)
    IF              reduce using rule 9 (instrucciones -> estructuras_datos .)
    IDENTIFICADOR   reduce using rule 9 (instrucciones -> estructuras_datos .)
    CADENA          reduce using rule 9 (instrucciones -> estructuras_datos .)
    $end            reduce using rule 9 (instrucciones -> estructuras_datos .)
    LLAVE_CIERRA    reduce using rule 9 (instrucciones -> estructuras_datos .)
    RETURN          reduce using rule 9 (instrucciones -> estructuras_datos .)


state 11

    (10) instrucciones -> estructuras_control .

    CLASS           reduce using rule 10 (instrucciones -> estructuras_control .)
    COMENTARIO_LINEA reduce using rule 10 (instrucciones -> estructuras_control .)
    COMENTARIO_BLOQUE reduce using rule 10 (instrucciones -> estructuras_control .)
    BREAK           reduce using rule 10 (instrucciones -> estructuras_control .)
    ECHO            reduce using rule 10 (instrucciones -> estructuras_control .)
    PRINT           reduce using rule 10 (instrucciones -> estructuras_control .)
    READLINE        reduce using rule 10 (instrucciones -> estructuras_control .)
    FGETS           reduce using rule 10 (instrucciones -> estructuras_control .)
    FSCANF          reduce using rule 10 (instrucciones -> estructuras_control .)
    SIGNO_DOLAR     reduce using rule 10 (instrucciones -> estructuras_control .)
    NEW             reduce using rule 10 (instrucciones -> estructuras_control .)
    ARRAY           reduce using rule 10 (instrucciones -> estructuras_control .)
    CORCHETE_ABRE   reduce using rule 10 (instrucciones -> estructuras_control .)
    FOR             reduce using rule 10 (instrucciones -> estructuras_control .)
    FOREACH         reduce using rule 10 (instrucciones -> estructuras_control .)
    WHILE           reduce using rule 10 (instrucciones -> estructuras_control .)
    FUNCTION        reduce using rule 10 (instrucciones -> estructuras_control .)
    CONST           reduce using rule 10 (instrucciones -> estructuras_control .)
    PRIVATE         reduce using rule 10 (instrucciones -> estructuras_control .)
    PUBLIC          reduce using rule 10 (instrucciones -> estructuras_control .)
    PROTECTED       reduce using rule 10 (instrucciones -> estructuras_control .)
    STATIC          reduce using rule 10 (instrucciones -> estructuras_control .)
    VAR             reduce using rule 10 (instrucciones -> estructuras_control .)
    ENTERO          reduce using rule 10 (instrucciones -> estructuras_control .)
    FLOTANTE        reduce using rule 10 (instrucciones -> estructuras_control .)
    BOOLEANO        reduce using rule 10 (instrucciones -> estructuras_control .)
    NEGACION        reduce using rule 10 (instrucciones -> estructuras_control .)
    INCREMENTO      reduce using rule 10 (instrucciones -> estructuras_control .)
    DECREMENTO      reduce using rule 10 (instrucciones -> estructuras_control .)
    IF              reduce using rule 10 (instrucciones -> estructuras_control .)
    IDENTIFICADOR   reduce using rule 10 (instrucciones -> estructuras_control .)
    CADENA          reduce using rule 10 (instrucciones -> estructuras_control .)
    $end            reduce using rule 10 (instrucciones -> estructuras_control .)
    LLAVE_CIERRA    reduce using rule 10 (instrucciones -> estructuras_control .)
    RETURN          reduce using rule 10 (instrucciones -> estructuras_control .)


state 12

    (11) instrucciones -> funcionglobal .

    CLASS           reduce using rule 11 (instrucciones -> funcionglobal .)
    COMENTARIO_LINEA reduce using rule 11 (instrucciones -> funcionglobal .)
    COMENTARIO_BLOQUE reduce using rule 11 (instrucciones -> funcionglobal .)
    BREAK           reduce using rule 11 (instrucciones -> funcionglobal .)
    ECHO            reduce using rule 11 (instrucciones -> funcionglobal .)
    PRINT           reduce using rule 11 (instrucciones -> funcionglobal .)
    READLINE        reduce using rule 11 (instrucciones -> funcionglobal .)
    FGETS           reduce using rule 11 (instrucciones -> funcionglobal .)
    FSCANF          reduce using rule 11 (instrucciones -> funcionglobal .)
    SIGNO_DOLAR     reduce using rule 11 (instrucciones -> funcionglobal .)
    NEW             reduce using rule 11 (instrucciones -> funcionglobal .)
    ARRAY           reduce using rule 11 (instrucciones -> funcionglobal .)
    CORCHETE_ABRE   reduce using rule 11 (instrucciones -> funcionglobal .)
    FOR             reduce using rule 11 (instrucciones -> funcionglobal .)
    FOREACH         reduce using rule 11 (instrucciones -> funcionglobal .)
    WHILE           reduce using rule 11 (instrucciones -> funcionglobal .)
    FUNCTION        reduce using rule 11 (instrucciones -> funcionglobal .)
    CONST           reduce using rule 11 (instrucciones -> funcionglobal .)
    PRIVATE         reduce using rule 11 (instrucciones -> funcionglobal .)
    PUBLIC          reduce using rule 11 (instrucciones -> funcionglobal .)
    PROTECTED       reduce using rule 11 (instrucciones -> funcionglobal .)
    STATIC          reduce using rule 11 (instrucciones -> funcionglobal .)
    VAR             reduce using rule 11 (instrucciones -> funcionglobal .)
    ENTERO          reduce using rule 11 (instrucciones -> funcionglobal .)
    FLOTANTE        reduce using rule 11 (instrucciones -> funcionglobal .)
    BOOLEANO        reduce using rule 11 (instrucciones -> funcionglobal .)
    NEGACION        reduce using rule 11 (instrucciones -> funcionglobal .)
    INCREMENTO      reduce using rule 11 (instrucciones -> funcionglobal .)
    DECREMENTO      reduce using rule 11 (instrucciones -> funcionglobal .)
    IF              reduce using rule 11 (instrucciones -> funcionglobal .)
    IDENTIFICADOR   reduce using rule 11 (instrucciones -> funcionglobal .)
    CADENA          reduce using rule 11 (instrucciones -> funcionglobal .)
    $end            reduce using rule 11 (instrucciones -> funcionglobal .)
    LLAVE_CIERRA    reduce using rule 11 (instrucciones -> funcionglobal .)
    RETURN          reduce using rule 11 (instrucciones -> funcionglobal .)


state 13

    (12) instrucciones -> COMENTARIO_LINEA .

    CLASS           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    COMENTARIO_LINEA reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    BREAK           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    ECHO            reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PRINT           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    READLINE        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FGETS           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FSCANF          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    SIGNO_DOLAR     reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    NEW             reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    ARRAY           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    CORCHETE_ABRE   reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FOR             reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FOREACH         reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    WHILE           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FUNCTION        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    CONST           reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PRIVATE         reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PUBLIC          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    PROTECTED       reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    STATIC          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    VAR             reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    ENTERO          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    FLOTANTE        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    BOOLEANO        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    NEGACION        reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    INCREMENTO      reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    DECREMENTO      reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    IF              reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    IDENTIFICADOR   reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    CADENA          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    $end            reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    LLAVE_CIERRA    reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)
    RETURN          reduce using rule 12 (instrucciones -> COMENTARIO_LINEA .)


state 14

    (13) instrucciones -> COMENTARIO_BLOQUE .

    CLASS           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    COMENTARIO_LINEA reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    COMENTARIO_BLOQUE reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    BREAK           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    ECHO            reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PRINT           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    READLINE        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FGETS           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FSCANF          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    SIGNO_DOLAR     reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    NEW             reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    ARRAY           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    CORCHETE_ABRE   reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FOR             reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FOREACH         reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    WHILE           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FUNCTION        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    CONST           reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PRIVATE         reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PUBLIC          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    PROTECTED       reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    STATIC          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    VAR             reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    ENTERO          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    FLOTANTE        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    BOOLEANO        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    NEGACION        reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    INCREMENTO      reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    DECREMENTO      reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    IF              reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    IDENTIFICADOR   reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    CADENA          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    $end            reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    LLAVE_CIERRA    reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)
    RETURN          reduce using rule 13 (instrucciones -> COMENTARIO_BLOQUE .)


state 15

    (14) instrucciones -> operaciones . FIN_LINEA

    FIN_LINEA       shift and go to state 69


state 16

    (15) instrucciones -> declaracion_s . FIN_LINEA

    FIN_LINEA       shift and go to state 70


state 17

    (16) instrucciones -> BREAK . FIN_LINEA

    FIN_LINEA       shift and go to state 71


state 18

    (17) instrucciones -> concadenacion1 .

    CLASS           reduce using rule 17 (instrucciones -> concadenacion1 .)
    COMENTARIO_LINEA reduce using rule 17 (instrucciones -> concadenacion1 .)
    COMENTARIO_BLOQUE reduce using rule 17 (instrucciones -> concadenacion1 .)
    BREAK           reduce using rule 17 (instrucciones -> concadenacion1 .)
    ECHO            reduce using rule 17 (instrucciones -> concadenacion1 .)
    PRINT           reduce using rule 17 (instrucciones -> concadenacion1 .)
    READLINE        reduce using rule 17 (instrucciones -> concadenacion1 .)
    FGETS           reduce using rule 17 (instrucciones -> concadenacion1 .)
    FSCANF          reduce using rule 17 (instrucciones -> concadenacion1 .)
    SIGNO_DOLAR     reduce using rule 17 (instrucciones -> concadenacion1 .)
    NEW             reduce using rule 17 (instrucciones -> concadenacion1 .)
    ARRAY           reduce using rule 17 (instrucciones -> concadenacion1 .)
    CORCHETE_ABRE   reduce using rule 17 (instrucciones -> concadenacion1 .)
    FOR             reduce using rule 17 (instrucciones -> concadenacion1 .)
    FOREACH         reduce using rule 17 (instrucciones -> concadenacion1 .)
    WHILE           reduce using rule 17 (instrucciones -> concadenacion1 .)
    FUNCTION        reduce using rule 17 (instrucciones -> concadenacion1 .)
    CONST           reduce using rule 17 (instrucciones -> concadenacion1 .)
    PRIVATE         reduce using rule 17 (instrucciones -> concadenacion1 .)
    PUBLIC          reduce using rule 17 (instrucciones -> concadenacion1 .)
    PROTECTED       reduce using rule 17 (instrucciones -> concadenacion1 .)
    STATIC          reduce using rule 17 (instrucciones -> concadenacion1 .)
    VAR             reduce using rule 17 (instrucciones -> concadenacion1 .)
    ENTERO          reduce using rule 17 (instrucciones -> concadenacion1 .)
    FLOTANTE        reduce using rule 17 (instrucciones -> concadenacion1 .)
    BOOLEANO        reduce using rule 17 (instrucciones -> concadenacion1 .)
    NEGACION        reduce using rule 17 (instrucciones -> concadenacion1 .)
    INCREMENTO      reduce using rule 17 (instrucciones -> concadenacion1 .)
    DECREMENTO      reduce using rule 17 (instrucciones -> concadenacion1 .)
    IF              reduce using rule 17 (instrucciones -> concadenacion1 .)
    IDENTIFICADOR   reduce using rule 17 (instrucciones -> concadenacion1 .)
    CADENA          reduce using rule 17 (instrucciones -> concadenacion1 .)
    $end            reduce using rule 17 (instrucciones -> concadenacion1 .)
    LLAVE_CIERRA    reduce using rule 17 (instrucciones -> concadenacion1 .)
    RETURN          reduce using rule 17 (instrucciones -> concadenacion1 .)


state 19

    (18) instrucciones -> concatenacion2 .

    CLASS           reduce using rule 18 (instrucciones -> concatenacion2 .)
    COMENTARIO_LINEA reduce using rule 18 (instrucciones -> concatenacion2 .)
    COMENTARIO_BLOQUE reduce using rule 18 (instrucciones -> concatenacion2 .)
    BREAK           reduce using rule 18 (instrucciones -> concatenacion2 .)
    ECHO            reduce using rule 18 (instrucciones -> concatenacion2 .)
    PRINT           reduce using rule 18 (instrucciones -> concatenacion2 .)
    READLINE        reduce using rule 18 (instrucciones -> concatenacion2 .)
    FGETS           reduce using rule 18 (instrucciones -> concatenacion2 .)
    FSCANF          reduce using rule 18 (instrucciones -> concatenacion2 .)
    SIGNO_DOLAR     reduce using rule 18 (instrucciones -> concatenacion2 .)
    NEW             reduce using rule 18 (instrucciones -> concatenacion2 .)
    ARRAY           reduce using rule 18 (instrucciones -> concatenacion2 .)
    CORCHETE_ABRE   reduce using rule 18 (instrucciones -> concatenacion2 .)
    FOR             reduce using rule 18 (instrucciones -> concatenacion2 .)
    FOREACH         reduce using rule 18 (instrucciones -> concatenacion2 .)
    WHILE           reduce using rule 18 (instrucciones -> concatenacion2 .)
    FUNCTION        reduce using rule 18 (instrucciones -> concatenacion2 .)
    CONST           reduce using rule 18 (instrucciones -> concatenacion2 .)
    PRIVATE         reduce using rule 18 (instrucciones -> concatenacion2 .)
    PUBLIC          reduce using rule 18 (instrucciones -> concatenacion2 .)
    PROTECTED       reduce using rule 18 (instrucciones -> concatenacion2 .)
    STATIC          reduce using rule 18 (instrucciones -> concatenacion2 .)
    VAR             reduce using rule 18 (instrucciones -> concatenacion2 .)
    ENTERO          reduce using rule 18 (instrucciones -> concatenacion2 .)
    FLOTANTE        reduce using rule 18 (instrucciones -> concatenacion2 .)
    BOOLEANO        reduce using rule 18 (instrucciones -> concatenacion2 .)
    NEGACION        reduce using rule 18 (instrucciones -> concatenacion2 .)
    INCREMENTO      reduce using rule 18 (instrucciones -> concatenacion2 .)
    DECREMENTO      reduce using rule 18 (instrucciones -> concatenacion2 .)
    IF              reduce using rule 18 (instrucciones -> concatenacion2 .)
    IDENTIFICADOR   reduce using rule 18 (instrucciones -> concatenacion2 .)
    CADENA          reduce using rule 18 (instrucciones -> concatenacion2 .)
    $end            reduce using rule 18 (instrucciones -> concatenacion2 .)
    LLAVE_CIERRA    reduce using rule 18 (instrucciones -> concatenacion2 .)
    RETURN          reduce using rule 18 (instrucciones -> concatenacion2 .)


state 20

    (35) asignacion -> decl_variable . IGUAL valor FIN_LINEA
    (36) asignacion -> decl_variable . IGUAL estructuras_datos
    (37) asignacion -> decl_variable . IGUAL explode FIN_LINEA
    (38) asignacion -> decl_variable . IGUAL funcionuso FIN_LINEA
    (39) asignacion -> decl_variable . IGUAL operaciones FIN_LINEA
    (147) declaracion_s -> decl_variable . crecimiento
    (163) concatenacion2 -> decl_variable . PUNTO IGUAL datos FIN_LINEA
    (106) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (107) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (108) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (61) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (20) salidas_posibles -> decl_variable .
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    IGUAL           shift and go to state 72
    PUNTO           shift and go to state 74
    LAMBDA          shift and go to state 76
    SUMA            reduce using rule 20 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 20 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 20 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 20 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 20 (salidas_posibles -> decl_variable .)
    CONJUNCIONBITS  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DISYUNCIONBITS  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DISYUNCION_EXC  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_IZQ reduce using rule 20 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_DER reduce using rule 20 (salidas_posibles -> decl_variable .)
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    crecimiento                    shift and go to state 73
    operad_logico                  shift and go to state 75

state 21

    (111) operaciones_logicas -> funcionuso .
    (112) operaciones_logicas -> funcionuso . operad_logico funcionuso
    (113) operaciones_logicas -> funcionuso . operad_logico operaciones_logicas
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for IDENTIDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for NO_IDENTIDAD resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for CONJUNCION resolved as shift
  ! shift/reduce conflict for DISYUNCION resolved as shift
    FIN_LINEA       reduce using rule 111 (operaciones_logicas -> funcionuso .)
    PARENTESIS_CIERRA reduce using rule 111 (operaciones_logicas -> funcionuso .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

  ! IGUALDAD        [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! IDENTIDAD       [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! DIFERENTE       [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! NO_IDENTIDAD    [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR           [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR_IGUAL     [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MENOR           [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MENOR_IGUAL     [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! AND             [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! OR              [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! XOR             [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! CONJUNCION      [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! DISYUNCION      [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]

    operad_logico                  shift and go to state 90

state 22

    (21) salida -> ECHO . salidas_posibles FIN_LINEA
    (162) concadenacion1 -> ECHO . salidas_posibles PUNTO decl_variable FIN_LINEA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 91
    decl_variable                  shift and go to state 92
    datos                          shift and go to state 44
    variable_tipo                  shift and go to state 96

state 23

    (99) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (100) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (101) operaciones_bits -> salidas_posibles . operand_bits salidas_posibles
    (75) operad_arit -> . SUMA
    (76) operad_arit -> . RESTA
    (77) operad_arit -> . MULTIPLICACION
    (78) operad_arit -> . DIVISION
    (79) operad_arit -> . POTENCIA
    (80) operad_arit -> . MODULO
    (94) operand_bits -> . CONJUNCIONBITS
    (95) operand_bits -> . DISYUNCIONBITS
    (96) operand_bits -> . DISYUNCION_EXC
    (97) operand_bits -> . DESPLAZAR_BITS_IZQ
    (98) operand_bits -> . DESPLAZAR_BITS_DER

    SUMA            shift and go to state 99
    RESTA           shift and go to state 100
    MULTIPLICACION  shift and go to state 101
    DIVISION        shift and go to state 102
    POTENCIA        shift and go to state 103
    MODULO          shift and go to state 104
    CONJUNCIONBITS  shift and go to state 105
    DISYUNCIONBITS  shift and go to state 106
    DISYUNCION_EXC  shift and go to state 107
    DESPLAZAR_BITS_IZQ shift and go to state 108
    DESPLAZAR_BITS_DER shift and go to state 109

    operad_arit                    shift and go to state 97
    operand_bits                   shift and go to state 98

state 24

    (22) salida -> PRINT . PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> PRINT . salidas_posibles FIN_LINEA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    PARENTESIS_ABRE shift and go to state 110
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 111
    datos                          shift and go to state 44
    decl_variable                  shift and go to state 92
    variable_tipo                  shift and go to state 96

state 25

    (24) ingreso -> READLINE . PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 112


state 26

    (47) datos -> CADENA .

    SUMA            reduce using rule 47 (datos -> CADENA .)
    RESTA           reduce using rule 47 (datos -> CADENA .)
    MULTIPLICACION  reduce using rule 47 (datos -> CADENA .)
    DIVISION        reduce using rule 47 (datos -> CADENA .)
    POTENCIA        reduce using rule 47 (datos -> CADENA .)
    MODULO          reduce using rule 47 (datos -> CADENA .)
    CONJUNCIONBITS  reduce using rule 47 (datos -> CADENA .)
    DISYUNCIONBITS  reduce using rule 47 (datos -> CADENA .)
    DISYUNCION_EXC  reduce using rule 47 (datos -> CADENA .)
    DESPLAZAR_BITS_IZQ reduce using rule 47 (datos -> CADENA .)
    DESPLAZAR_BITS_DER reduce using rule 47 (datos -> CADENA .)
    FIN_LINEA       reduce using rule 47 (datos -> CADENA .)
    PUNTO           reduce using rule 47 (datos -> CADENA .)
    COMA            reduce using rule 47 (datos -> CADENA .)
    IGUAL           reduce using rule 47 (datos -> CADENA .)
    CORCHETE_CIERRA reduce using rule 47 (datos -> CADENA .)
    PARENTESIS_CIERRA reduce using rule 47 (datos -> CADENA .)
    IGUALDAD        reduce using rule 47 (datos -> CADENA .)
    IDENTIDAD       reduce using rule 47 (datos -> CADENA .)
    DIFERENTE       reduce using rule 47 (datos -> CADENA .)
    NO_IDENTIDAD    reduce using rule 47 (datos -> CADENA .)
    MAYOR           reduce using rule 47 (datos -> CADENA .)
    MAYOR_IGUAL     reduce using rule 47 (datos -> CADENA .)
    MENOR           reduce using rule 47 (datos -> CADENA .)
    MENOR_IGUAL     reduce using rule 47 (datos -> CADENA .)
    AND             reduce using rule 47 (datos -> CADENA .)
    OR              reduce using rule 47 (datos -> CADENA .)
    XOR             reduce using rule 47 (datos -> CADENA .)
    CONJUNCION      reduce using rule 47 (datos -> CADENA .)
    DISYUNCION      reduce using rule 47 (datos -> CADENA .)


state 27

    (25) ingreso -> FGETS . PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 113


state 28

    (26) ingreso -> FSCANF . PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 114


state 29

    (33) decl_variable -> SIGNO_DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 115


state 30

    (57) estructuras_datos -> pila . FIN_LINEA

    FIN_LINEA       shift and go to state 116


state 31

    (58) estructuras_datos -> arreglo . FIN_LINEA

    FIN_LINEA       shift and go to state 117


state 32

    (126) estructuras_control -> for .

    CLASS           reduce using rule 126 (estructuras_control -> for .)
    COMENTARIO_LINEA reduce using rule 126 (estructuras_control -> for .)
    COMENTARIO_BLOQUE reduce using rule 126 (estructuras_control -> for .)
    BREAK           reduce using rule 126 (estructuras_control -> for .)
    ECHO            reduce using rule 126 (estructuras_control -> for .)
    PRINT           reduce using rule 126 (estructuras_control -> for .)
    READLINE        reduce using rule 126 (estructuras_control -> for .)
    FGETS           reduce using rule 126 (estructuras_control -> for .)
    FSCANF          reduce using rule 126 (estructuras_control -> for .)
    SIGNO_DOLAR     reduce using rule 126 (estructuras_control -> for .)
    NEW             reduce using rule 126 (estructuras_control -> for .)
    ARRAY           reduce using rule 126 (estructuras_control -> for .)
    CORCHETE_ABRE   reduce using rule 126 (estructuras_control -> for .)
    FOR             reduce using rule 126 (estructuras_control -> for .)
    FOREACH         reduce using rule 126 (estructuras_control -> for .)
    WHILE           reduce using rule 126 (estructuras_control -> for .)
    FUNCTION        reduce using rule 126 (estructuras_control -> for .)
    CONST           reduce using rule 126 (estructuras_control -> for .)
    PRIVATE         reduce using rule 126 (estructuras_control -> for .)
    PUBLIC          reduce using rule 126 (estructuras_control -> for .)
    PROTECTED       reduce using rule 126 (estructuras_control -> for .)
    STATIC          reduce using rule 126 (estructuras_control -> for .)
    VAR             reduce using rule 126 (estructuras_control -> for .)
    ENTERO          reduce using rule 126 (estructuras_control -> for .)
    FLOTANTE        reduce using rule 126 (estructuras_control -> for .)
    BOOLEANO        reduce using rule 126 (estructuras_control -> for .)
    NEGACION        reduce using rule 126 (estructuras_control -> for .)
    INCREMENTO      reduce using rule 126 (estructuras_control -> for .)
    DECREMENTO      reduce using rule 126 (estructuras_control -> for .)
    IF              reduce using rule 126 (estructuras_control -> for .)
    IDENTIFICADOR   reduce using rule 126 (estructuras_control -> for .)
    CADENA          reduce using rule 126 (estructuras_control -> for .)
    $end            reduce using rule 126 (estructuras_control -> for .)
    LLAVE_CIERRA    reduce using rule 126 (estructuras_control -> for .)
    RETURN          reduce using rule 126 (estructuras_control -> for .)


state 33

    (127) estructuras_control -> foreach .

    CLASS           reduce using rule 127 (estructuras_control -> foreach .)
    COMENTARIO_LINEA reduce using rule 127 (estructuras_control -> foreach .)
    COMENTARIO_BLOQUE reduce using rule 127 (estructuras_control -> foreach .)
    BREAK           reduce using rule 127 (estructuras_control -> foreach .)
    ECHO            reduce using rule 127 (estructuras_control -> foreach .)
    PRINT           reduce using rule 127 (estructuras_control -> foreach .)
    READLINE        reduce using rule 127 (estructuras_control -> foreach .)
    FGETS           reduce using rule 127 (estructuras_control -> foreach .)
    FSCANF          reduce using rule 127 (estructuras_control -> foreach .)
    SIGNO_DOLAR     reduce using rule 127 (estructuras_control -> foreach .)
    NEW             reduce using rule 127 (estructuras_control -> foreach .)
    ARRAY           reduce using rule 127 (estructuras_control -> foreach .)
    CORCHETE_ABRE   reduce using rule 127 (estructuras_control -> foreach .)
    FOR             reduce using rule 127 (estructuras_control -> foreach .)
    FOREACH         reduce using rule 127 (estructuras_control -> foreach .)
    WHILE           reduce using rule 127 (estructuras_control -> foreach .)
    FUNCTION        reduce using rule 127 (estructuras_control -> foreach .)
    CONST           reduce using rule 127 (estructuras_control -> foreach .)
    PRIVATE         reduce using rule 127 (estructuras_control -> foreach .)
    PUBLIC          reduce using rule 127 (estructuras_control -> foreach .)
    PROTECTED       reduce using rule 127 (estructuras_control -> foreach .)
    STATIC          reduce using rule 127 (estructuras_control -> foreach .)
    VAR             reduce using rule 127 (estructuras_control -> foreach .)
    ENTERO          reduce using rule 127 (estructuras_control -> foreach .)
    FLOTANTE        reduce using rule 127 (estructuras_control -> foreach .)
    BOOLEANO        reduce using rule 127 (estructuras_control -> foreach .)
    NEGACION        reduce using rule 127 (estructuras_control -> foreach .)
    INCREMENTO      reduce using rule 127 (estructuras_control -> foreach .)
    DECREMENTO      reduce using rule 127 (estructuras_control -> foreach .)
    IF              reduce using rule 127 (estructuras_control -> foreach .)
    IDENTIFICADOR   reduce using rule 127 (estructuras_control -> foreach .)
    CADENA          reduce using rule 127 (estructuras_control -> foreach .)
    $end            reduce using rule 127 (estructuras_control -> foreach .)
    LLAVE_CIERRA    reduce using rule 127 (estructuras_control -> foreach .)
    RETURN          reduce using rule 127 (estructuras_control -> foreach .)


state 34

    (128) estructuras_control -> if_else .

    CLASS           reduce using rule 128 (estructuras_control -> if_else .)
    COMENTARIO_LINEA reduce using rule 128 (estructuras_control -> if_else .)
    COMENTARIO_BLOQUE reduce using rule 128 (estructuras_control -> if_else .)
    BREAK           reduce using rule 128 (estructuras_control -> if_else .)
    ECHO            reduce using rule 128 (estructuras_control -> if_else .)
    PRINT           reduce using rule 128 (estructuras_control -> if_else .)
    READLINE        reduce using rule 128 (estructuras_control -> if_else .)
    FGETS           reduce using rule 128 (estructuras_control -> if_else .)
    FSCANF          reduce using rule 128 (estructuras_control -> if_else .)
    SIGNO_DOLAR     reduce using rule 128 (estructuras_control -> if_else .)
    NEW             reduce using rule 128 (estructuras_control -> if_else .)
    ARRAY           reduce using rule 128 (estructuras_control -> if_else .)
    CORCHETE_ABRE   reduce using rule 128 (estructuras_control -> if_else .)
    FOR             reduce using rule 128 (estructuras_control -> if_else .)
    FOREACH         reduce using rule 128 (estructuras_control -> if_else .)
    WHILE           reduce using rule 128 (estructuras_control -> if_else .)
    FUNCTION        reduce using rule 128 (estructuras_control -> if_else .)
    CONST           reduce using rule 128 (estructuras_control -> if_else .)
    PRIVATE         reduce using rule 128 (estructuras_control -> if_else .)
    PUBLIC          reduce using rule 128 (estructuras_control -> if_else .)
    PROTECTED       reduce using rule 128 (estructuras_control -> if_else .)
    STATIC          reduce using rule 128 (estructuras_control -> if_else .)
    VAR             reduce using rule 128 (estructuras_control -> if_else .)
    ENTERO          reduce using rule 128 (estructuras_control -> if_else .)
    FLOTANTE        reduce using rule 128 (estructuras_control -> if_else .)
    BOOLEANO        reduce using rule 128 (estructuras_control -> if_else .)
    NEGACION        reduce using rule 128 (estructuras_control -> if_else .)
    INCREMENTO      reduce using rule 128 (estructuras_control -> if_else .)
    DECREMENTO      reduce using rule 128 (estructuras_control -> if_else .)
    IF              reduce using rule 128 (estructuras_control -> if_else .)
    IDENTIFICADOR   reduce using rule 128 (estructuras_control -> if_else .)
    CADENA          reduce using rule 128 (estructuras_control -> if_else .)
    $end            reduce using rule 128 (estructuras_control -> if_else .)
    LLAVE_CIERRA    reduce using rule 128 (estructuras_control -> if_else .)
    RETURN          reduce using rule 128 (estructuras_control -> if_else .)


state 35

    (129) estructuras_control -> while .

    CLASS           reduce using rule 129 (estructuras_control -> while .)
    COMENTARIO_LINEA reduce using rule 129 (estructuras_control -> while .)
    COMENTARIO_BLOQUE reduce using rule 129 (estructuras_control -> while .)
    BREAK           reduce using rule 129 (estructuras_control -> while .)
    ECHO            reduce using rule 129 (estructuras_control -> while .)
    PRINT           reduce using rule 129 (estructuras_control -> while .)
    READLINE        reduce using rule 129 (estructuras_control -> while .)
    FGETS           reduce using rule 129 (estructuras_control -> while .)
    FSCANF          reduce using rule 129 (estructuras_control -> while .)
    SIGNO_DOLAR     reduce using rule 129 (estructuras_control -> while .)
    NEW             reduce using rule 129 (estructuras_control -> while .)
    ARRAY           reduce using rule 129 (estructuras_control -> while .)
    CORCHETE_ABRE   reduce using rule 129 (estructuras_control -> while .)
    FOR             reduce using rule 129 (estructuras_control -> while .)
    FOREACH         reduce using rule 129 (estructuras_control -> while .)
    WHILE           reduce using rule 129 (estructuras_control -> while .)
    FUNCTION        reduce using rule 129 (estructuras_control -> while .)
    CONST           reduce using rule 129 (estructuras_control -> while .)
    PRIVATE         reduce using rule 129 (estructuras_control -> while .)
    PUBLIC          reduce using rule 129 (estructuras_control -> while .)
    PROTECTED       reduce using rule 129 (estructuras_control -> while .)
    STATIC          reduce using rule 129 (estructuras_control -> while .)
    VAR             reduce using rule 129 (estructuras_control -> while .)
    ENTERO          reduce using rule 129 (estructuras_control -> while .)
    FLOTANTE        reduce using rule 129 (estructuras_control -> while .)
    BOOLEANO        reduce using rule 129 (estructuras_control -> while .)
    NEGACION        reduce using rule 129 (estructuras_control -> while .)
    INCREMENTO      reduce using rule 129 (estructuras_control -> while .)
    DECREMENTO      reduce using rule 129 (estructuras_control -> while .)
    IF              reduce using rule 129 (estructuras_control -> while .)
    IDENTIFICADOR   reduce using rule 129 (estructuras_control -> while .)
    CADENA          reduce using rule 129 (estructuras_control -> while .)
    $end            reduce using rule 129 (estructuras_control -> while .)
    LLAVE_CIERRA    reduce using rule 129 (estructuras_control -> while .)
    RETURN          reduce using rule 129 (estructuras_control -> while .)


state 36

    (51) funcionglobal -> funcion .

    CLASS           reduce using rule 51 (funcionglobal -> funcion .)
    COMENTARIO_LINEA reduce using rule 51 (funcionglobal -> funcion .)
    COMENTARIO_BLOQUE reduce using rule 51 (funcionglobal -> funcion .)
    BREAK           reduce using rule 51 (funcionglobal -> funcion .)
    ECHO            reduce using rule 51 (funcionglobal -> funcion .)
    PRINT           reduce using rule 51 (funcionglobal -> funcion .)
    READLINE        reduce using rule 51 (funcionglobal -> funcion .)
    FGETS           reduce using rule 51 (funcionglobal -> funcion .)
    FSCANF          reduce using rule 51 (funcionglobal -> funcion .)
    SIGNO_DOLAR     reduce using rule 51 (funcionglobal -> funcion .)
    NEW             reduce using rule 51 (funcionglobal -> funcion .)
    ARRAY           reduce using rule 51 (funcionglobal -> funcion .)
    CORCHETE_ABRE   reduce using rule 51 (funcionglobal -> funcion .)
    FOR             reduce using rule 51 (funcionglobal -> funcion .)
    FOREACH         reduce using rule 51 (funcionglobal -> funcion .)
    WHILE           reduce using rule 51 (funcionglobal -> funcion .)
    FUNCTION        reduce using rule 51 (funcionglobal -> funcion .)
    CONST           reduce using rule 51 (funcionglobal -> funcion .)
    PRIVATE         reduce using rule 51 (funcionglobal -> funcion .)
    PUBLIC          reduce using rule 51 (funcionglobal -> funcion .)
    PROTECTED       reduce using rule 51 (funcionglobal -> funcion .)
    STATIC          reduce using rule 51 (funcionglobal -> funcion .)
    VAR             reduce using rule 51 (funcionglobal -> funcion .)
    ENTERO          reduce using rule 51 (funcionglobal -> funcion .)
    FLOTANTE        reduce using rule 51 (funcionglobal -> funcion .)
    BOOLEANO        reduce using rule 51 (funcionglobal -> funcion .)
    NEGACION        reduce using rule 51 (funcionglobal -> funcion .)
    INCREMENTO      reduce using rule 51 (funcionglobal -> funcion .)
    DECREMENTO      reduce using rule 51 (funcionglobal -> funcion .)
    IF              reduce using rule 51 (funcionglobal -> funcion .)
    IDENTIFICADOR   reduce using rule 51 (funcionglobal -> funcion .)
    CADENA          reduce using rule 51 (funcionglobal -> funcion .)
    $end            reduce using rule 51 (funcionglobal -> funcion .)
    LLAVE_CIERRA    reduce using rule 51 (funcionglobal -> funcion .)
    RETURN          reduce using rule 51 (funcionglobal -> funcion .)


state 37

    (52) funcionglobal -> variable_tipo . funcion
    (34) decl_variable -> variable_tipo . SIGNO_DOLAR IDENTIFICADOR
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    SIGNO_DOLAR     shift and go to state 119
    FUNCTION        shift and go to state 52

    funcion                        shift and go to state 118

state 38

    (115) operaciones -> operaciones_logicas .
    (114) operaciones_logicas -> operaciones_logicas . operad_logico funcionuso
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    FIN_LINEA       reduce using rule 115 (operaciones -> operaciones_logicas .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 120

state 39

    (116) operaciones -> operaciones_arit .
    (109) operaciones_logicas -> operaciones_arit . operad_logico ENTERO
    (110) operaciones_logicas -> operaciones_arit . operad_logico FLOTANTE
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    FIN_LINEA       reduce using rule 116 (operaciones -> operaciones_arit .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 121

state 40

    (117) operaciones -> operaciones_bits .

    FIN_LINEA       reduce using rule 117 (operaciones -> operaciones_bits .)


state 41

    (118) operaciones -> pushpila .

    FIN_LINEA       reduce using rule 118 (operaciones -> pushpila .)


state 42

    (119) operaciones -> poppila .

    FIN_LINEA       reduce using rule 119 (operaciones -> poppila .)


state 43

    (148) declaracion_s -> crecimiento . decl_variable
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 122
    variable_tipo                  shift and go to state 96

state 44

    (19) salidas_posibles -> datos .

    SUMA            reduce using rule 19 (salidas_posibles -> datos .)
    RESTA           reduce using rule 19 (salidas_posibles -> datos .)
    MULTIPLICACION  reduce using rule 19 (salidas_posibles -> datos .)
    DIVISION        reduce using rule 19 (salidas_posibles -> datos .)
    POTENCIA        reduce using rule 19 (salidas_posibles -> datos .)
    MODULO          reduce using rule 19 (salidas_posibles -> datos .)
    CONJUNCIONBITS  reduce using rule 19 (salidas_posibles -> datos .)
    DISYUNCIONBITS  reduce using rule 19 (salidas_posibles -> datos .)
    DISYUNCION_EXC  reduce using rule 19 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_IZQ reduce using rule 19 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_DER reduce using rule 19 (salidas_posibles -> datos .)
    FIN_LINEA       reduce using rule 19 (salidas_posibles -> datos .)
    PUNTO           reduce using rule 19 (salidas_posibles -> datos .)
    IGUALDAD        reduce using rule 19 (salidas_posibles -> datos .)
    IDENTIDAD       reduce using rule 19 (salidas_posibles -> datos .)
    DIFERENTE       reduce using rule 19 (salidas_posibles -> datos .)
    NO_IDENTIDAD    reduce using rule 19 (salidas_posibles -> datos .)
    MAYOR           reduce using rule 19 (salidas_posibles -> datos .)
    MAYOR_IGUAL     reduce using rule 19 (salidas_posibles -> datos .)
    MENOR           reduce using rule 19 (salidas_posibles -> datos .)
    MENOR_IGUAL     reduce using rule 19 (salidas_posibles -> datos .)
    AND             reduce using rule 19 (salidas_posibles -> datos .)
    OR              reduce using rule 19 (salidas_posibles -> datos .)
    XOR             reduce using rule 19 (salidas_posibles -> datos .)
    CONJUNCION      reduce using rule 19 (salidas_posibles -> datos .)
    DISYUNCION      reduce using rule 19 (salidas_posibles -> datos .)
    PARENTESIS_CIERRA reduce using rule 19 (salidas_posibles -> datos .)
    COMA            reduce using rule 19 (salidas_posibles -> datos .)


state 45

    (59) pila -> NEW . STACK PARENTESIS_ABRE PARENTESIS_CIERRA

    STACK           shift and go to state 123


state 46

    (65) arreglo -> ARRAY . PARENTESIS_ABRE PARENTESIS_CIERRA
    (67) arreglo -> ARRAY . PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (69) arreglo -> ARRAY . PARENTESIS_ABRE asociacion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 124


state 47

    (66) arreglo -> CORCHETE_ABRE . CORCHETE_CIERRA
    (68) arreglo -> CORCHETE_ABRE . elementos CORCHETE_CIERRA
    (70) arreglo -> CORCHETE_ABRE . asociacion CORCHETE_CIERRA
    (73) elementos -> . datos
    (74) elementos -> . datos COMA elementos
    (71) asociacion -> . datos IGUAL MAYOR datos
    (72) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    CORCHETE_CIERRA shift and go to state 125
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95

    elementos                      shift and go to state 126
    asociacion                     shift and go to state 127
    datos                          shift and go to state 128

state 48

    (133) for -> FOR . PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 129


state 49

    (153) foreach -> FOREACH . PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> FOREACH . PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 130


state 50

    (156) if_else -> if_else_inicio . if_else_fin
    (157) if_else -> if_else_inicio . if_else_cuerpo if_else_fin
    (161) if_else_fin -> . ELSE LLAVE_ABRE bloque LLAVE_CIERRA
    (159) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (160) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    ELSE            shift and go to state 133
    ELSEIF          shift and go to state 134

    if_else_fin                    shift and go to state 131
    if_else_cuerpo                 shift and go to state 132

state 51

    (155) while -> WHILE . PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 135


state 52

    (49) funcion -> FUNCTION . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> FUNCTION . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 136


state 53

    (27) variable_tipo -> CONST .

    SIGNO_DOLAR     reduce using rule 27 (variable_tipo -> CONST .)
    FUNCTION        reduce using rule 27 (variable_tipo -> CONST .)


state 54

    (28) variable_tipo -> PRIVATE .

    SIGNO_DOLAR     reduce using rule 28 (variable_tipo -> PRIVATE .)
    FUNCTION        reduce using rule 28 (variable_tipo -> PRIVATE .)


state 55

    (29) variable_tipo -> PUBLIC .

    SIGNO_DOLAR     reduce using rule 29 (variable_tipo -> PUBLIC .)
    FUNCTION        reduce using rule 29 (variable_tipo -> PUBLIC .)


state 56

    (30) variable_tipo -> PROTECTED .

    SIGNO_DOLAR     reduce using rule 30 (variable_tipo -> PROTECTED .)
    FUNCTION        reduce using rule 30 (variable_tipo -> PROTECTED .)


state 57

    (31) variable_tipo -> STATIC .

    SIGNO_DOLAR     reduce using rule 31 (variable_tipo -> STATIC .)
    FUNCTION        reduce using rule 31 (variable_tipo -> STATIC .)


state 58

    (32) variable_tipo -> VAR .

    SIGNO_DOLAR     reduce using rule 32 (variable_tipo -> VAR .)
    FUNCTION        reduce using rule 32 (variable_tipo -> VAR .)


state 59

    (103) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (45) datos -> ENTERO .
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    SUMA            reduce using rule 45 (datos -> ENTERO .)
    RESTA           reduce using rule 45 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 45 (datos -> ENTERO .)
    DIVISION        reduce using rule 45 (datos -> ENTERO .)
    POTENCIA        reduce using rule 45 (datos -> ENTERO .)
    MODULO          reduce using rule 45 (datos -> ENTERO .)
    CONJUNCIONBITS  reduce using rule 45 (datos -> ENTERO .)
    DISYUNCIONBITS  reduce using rule 45 (datos -> ENTERO .)
    DISYUNCION_EXC  reduce using rule 45 (datos -> ENTERO .)
    DESPLAZAR_BITS_IZQ reduce using rule 45 (datos -> ENTERO .)
    DESPLAZAR_BITS_DER reduce using rule 45 (datos -> ENTERO .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 137

state 60

    (104) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (46) datos -> FLOTANTE .
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    SUMA            reduce using rule 46 (datos -> FLOTANTE .)
    RESTA           reduce using rule 46 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 46 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 46 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 46 (datos -> FLOTANTE .)
    MODULO          reduce using rule 46 (datos -> FLOTANTE .)
    CONJUNCIONBITS  reduce using rule 46 (datos -> FLOTANTE .)
    DISYUNCIONBITS  reduce using rule 46 (datos -> FLOTANTE .)
    DISYUNCION_EXC  reduce using rule 46 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_IZQ reduce using rule 46 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_DER reduce using rule 46 (datos -> FLOTANTE .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 138

state 61

    (105) operaciones_logicas -> BOOLEANO .
    (48) datos -> BOOLEANO .

    IGUALDAD        reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    IDENTIDAD       reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    DIFERENTE       reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    NO_IDENTIDAD    reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    MAYOR           reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    MAYOR_IGUAL     reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    MENOR           reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    MENOR_IGUAL     reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    AND             reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    OR              reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    XOR             reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    CONJUNCION      reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    DISYUNCION      reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    FIN_LINEA       reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    PARENTESIS_CIERRA reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    SUMA            reduce using rule 48 (datos -> BOOLEANO .)
    RESTA           reduce using rule 48 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 48 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 48 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 48 (datos -> BOOLEANO .)
    MODULO          reduce using rule 48 (datos -> BOOLEANO .)
    CONJUNCIONBITS  reduce using rule 48 (datos -> BOOLEANO .)
    DISYUNCIONBITS  reduce using rule 48 (datos -> BOOLEANO .)
    DISYUNCION_EXC  reduce using rule 48 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_IZQ reduce using rule 48 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_DER reduce using rule 48 (datos -> BOOLEANO .)


state 62

    (102) operaciones_bits -> NEGACION . salidas_posibles
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 139
    datos                          shift and go to state 44
    decl_variable                  shift and go to state 92
    variable_tipo                  shift and go to state 96

state 63

    (149) crecimiento -> INCREMENTO .

    SIGNO_DOLAR     reduce using rule 149 (crecimiento -> INCREMENTO .)
    CONST           reduce using rule 149 (crecimiento -> INCREMENTO .)
    PRIVATE         reduce using rule 149 (crecimiento -> INCREMENTO .)
    PUBLIC          reduce using rule 149 (crecimiento -> INCREMENTO .)
    PROTECTED       reduce using rule 149 (crecimiento -> INCREMENTO .)
    STATIC          reduce using rule 149 (crecimiento -> INCREMENTO .)
    VAR             reduce using rule 149 (crecimiento -> INCREMENTO .)
    FIN_LINEA       reduce using rule 149 (crecimiento -> INCREMENTO .)
    PARENTESIS_CIERRA reduce using rule 149 (crecimiento -> INCREMENTO .)


state 64

    (150) crecimiento -> DECREMENTO .

    SIGNO_DOLAR     reduce using rule 150 (crecimiento -> DECREMENTO .)
    CONST           reduce using rule 150 (crecimiento -> DECREMENTO .)
    PRIVATE         reduce using rule 150 (crecimiento -> DECREMENTO .)
    PUBLIC          reduce using rule 150 (crecimiento -> DECREMENTO .)
    PROTECTED       reduce using rule 150 (crecimiento -> DECREMENTO .)
    STATIC          reduce using rule 150 (crecimiento -> DECREMENTO .)
    VAR             reduce using rule 150 (crecimiento -> DECREMENTO .)
    FIN_LINEA       reduce using rule 150 (crecimiento -> DECREMENTO .)
    PARENTESIS_CIERRA reduce using rule 150 (crecimiento -> DECREMENTO .)


state 65

    (158) if_else_inicio -> IF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 140


state 66

    (2) variaslineas -> programa variaslineas .

    $end            reduce using rule 2 (variaslineas -> programa variaslineas .)


state 67

    (5) clase -> CLASS IDENTIFICADOR . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 141


state 68

    (53) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE . parametros PARENTESIS_CIERRA
    (54) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE . elementos PARENTESIS_CIERRA
    (55) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (56) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros
    (73) elementos -> . datos
    (74) elementos -> . datos COMA elementos
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    SIGNO_DOLAR     shift and go to state 144
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95

    parametros                     shift and go to state 142
    elementos                      shift and go to state 143
    datos                          shift and go to state 145

state 69

    (14) instrucciones -> operaciones FIN_LINEA .

    CLASS           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    BREAK           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    ECHO            reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PRINT           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    READLINE        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FGETS           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FSCANF          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    NEW             reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    ARRAY           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FOR             reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FOREACH         reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    WHILE           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FUNCTION        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    CONST           reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PRIVATE         reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PUBLIC          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    PROTECTED       reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    STATIC          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    VAR             reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    ENTERO          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    FLOTANTE        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    BOOLEANO        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    NEGACION        reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    INCREMENTO      reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    DECREMENTO      reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    IF              reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    CADENA          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    $end            reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)
    RETURN          reduce using rule 14 (instrucciones -> operaciones FIN_LINEA .)


state 70

    (15) instrucciones -> declaracion_s FIN_LINEA .

    CLASS           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    BREAK           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    ECHO            reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PRINT           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    READLINE        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FGETS           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FSCANF          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    NEW             reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    ARRAY           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FOR             reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FOREACH         reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    WHILE           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FUNCTION        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    CONST           reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PRIVATE         reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PUBLIC          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    PROTECTED       reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    STATIC          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    VAR             reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    ENTERO          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    FLOTANTE        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    BOOLEANO        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    NEGACION        reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    INCREMENTO      reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    DECREMENTO      reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    IF              reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    CADENA          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    $end            reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)
    RETURN          reduce using rule 15 (instrucciones -> declaracion_s FIN_LINEA .)


state 71

    (16) instrucciones -> BREAK FIN_LINEA .

    CLASS           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    BREAK           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    ECHO            reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PRINT           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    READLINE        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FGETS           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FSCANF          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    NEW             reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    ARRAY           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FOR             reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FOREACH         reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    WHILE           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FUNCTION        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    CONST           reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PRIVATE         reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PUBLIC          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    PROTECTED       reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    STATIC          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    VAR             reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    ENTERO          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    FLOTANTE        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    BOOLEANO        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    NEGACION        reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    INCREMENTO      reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    DECREMENTO      reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    IF              reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    CADENA          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    $end            reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)
    RETURN          reduce using rule 16 (instrucciones -> BREAK FIN_LINEA .)


state 72

    (35) asignacion -> decl_variable IGUAL . valor FIN_LINEA
    (36) asignacion -> decl_variable IGUAL . estructuras_datos
    (37) asignacion -> decl_variable IGUAL . explode FIN_LINEA
    (38) asignacion -> decl_variable IGUAL . funcionuso FIN_LINEA
    (39) asignacion -> decl_variable IGUAL . operaciones FIN_LINEA
    (40) valor -> . datos
    (41) valor -> . pila
    (42) valor -> . NULO
    (43) valor -> . decl_variable
    (44) valor -> . opAritVar
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (63) explode -> . EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA
    (64) explode -> . EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (125) opAritVar -> . paraCalculos combinarOp
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (120) paraCalculos -> . ENTERO
    (121) paraCalculos -> . FLOTANTE
    (122) paraCalculos -> . decl_variable
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable

    NULO            shift and go to state 154
    EXPLODE         shift and go to state 156
    IDENTIFICADOR   shift and go to state 6
    ENTERO          shift and go to state 157
    FLOTANTE        shift and go to state 158
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 159
    NEW             shift and go to state 45
    SIGNO_DOLAR     shift and go to state 29
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    NEGACION        shift and go to state 62
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 146
    valor                          shift and go to state 147
    estructuras_datos              shift and go to state 148
    explode                        shift and go to state 149
    funcionuso                     shift and go to state 150
    operaciones                    shift and go to state 151
    datos                          shift and go to state 152
    pila                           shift and go to state 153
    opAritVar                      shift and go to state 155
    arreglo                        shift and go to state 31
    salidas_posibles               shift and go to state 23
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    variable_tipo                  shift and go to state 96
    paraCalculos                   shift and go to state 160

state 73

    (147) declaracion_s -> decl_variable crecimiento .

    FIN_LINEA       reduce using rule 147 (declaracion_s -> decl_variable crecimiento .)
    PARENTESIS_CIERRA reduce using rule 147 (declaracion_s -> decl_variable crecimiento .)


state 74

    (163) concatenacion2 -> decl_variable PUNTO . IGUAL datos FIN_LINEA

    IGUAL           shift and go to state 161


state 75

    (106) operaciones_logicas -> decl_variable operad_logico . decl_variable
    (107) operaciones_logicas -> decl_variable operad_logico . ENTERO
    (108) operaciones_logicas -> decl_variable operad_logico . FLOTANTE
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    ENTERO          shift and go to state 163
    FLOTANTE        shift and go to state 164
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 162
    variable_tipo                  shift and go to state 96

state 76

    (61) pushpila -> decl_variable LAMBDA . PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> decl_variable LAMBDA . PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> decl_variable LAMBDA . POP PARENTESIS_ABRE PARENTESIS_CIERRA

    PUSH            shift and go to state 165
    POP             shift and go to state 166


state 77

    (81) operad_logico -> IGUALDAD .

    ENTERO          reduce using rule 81 (operad_logico -> IGUALDAD .)
    FLOTANTE        reduce using rule 81 (operad_logico -> IGUALDAD .)
    SIGNO_DOLAR     reduce using rule 81 (operad_logico -> IGUALDAD .)
    CONST           reduce using rule 81 (operad_logico -> IGUALDAD .)
    PRIVATE         reduce using rule 81 (operad_logico -> IGUALDAD .)
    PUBLIC          reduce using rule 81 (operad_logico -> IGUALDAD .)
    PROTECTED       reduce using rule 81 (operad_logico -> IGUALDAD .)
    STATIC          reduce using rule 81 (operad_logico -> IGUALDAD .)
    VAR             reduce using rule 81 (operad_logico -> IGUALDAD .)
    IDENTIFICADOR   reduce using rule 81 (operad_logico -> IGUALDAD .)
    BOOLEANO        reduce using rule 81 (operad_logico -> IGUALDAD .)
    CADENA          reduce using rule 81 (operad_logico -> IGUALDAD .)
    NULO            reduce using rule 81 (operad_logico -> IGUALDAD .)
    NEW             reduce using rule 81 (operad_logico -> IGUALDAD .)


state 78

    (82) operad_logico -> IDENTIDAD .

    ENTERO          reduce using rule 82 (operad_logico -> IDENTIDAD .)
    FLOTANTE        reduce using rule 82 (operad_logico -> IDENTIDAD .)
    SIGNO_DOLAR     reduce using rule 82 (operad_logico -> IDENTIDAD .)
    CONST           reduce using rule 82 (operad_logico -> IDENTIDAD .)
    PRIVATE         reduce using rule 82 (operad_logico -> IDENTIDAD .)
    PUBLIC          reduce using rule 82 (operad_logico -> IDENTIDAD .)
    PROTECTED       reduce using rule 82 (operad_logico -> IDENTIDAD .)
    STATIC          reduce using rule 82 (operad_logico -> IDENTIDAD .)
    VAR             reduce using rule 82 (operad_logico -> IDENTIDAD .)
    IDENTIFICADOR   reduce using rule 82 (operad_logico -> IDENTIDAD .)
    BOOLEANO        reduce using rule 82 (operad_logico -> IDENTIDAD .)
    CADENA          reduce using rule 82 (operad_logico -> IDENTIDAD .)
    NULO            reduce using rule 82 (operad_logico -> IDENTIDAD .)
    NEW             reduce using rule 82 (operad_logico -> IDENTIDAD .)


state 79

    (83) operad_logico -> DIFERENTE .

    ENTERO          reduce using rule 83 (operad_logico -> DIFERENTE .)
    FLOTANTE        reduce using rule 83 (operad_logico -> DIFERENTE .)
    SIGNO_DOLAR     reduce using rule 83 (operad_logico -> DIFERENTE .)
    CONST           reduce using rule 83 (operad_logico -> DIFERENTE .)
    PRIVATE         reduce using rule 83 (operad_logico -> DIFERENTE .)
    PUBLIC          reduce using rule 83 (operad_logico -> DIFERENTE .)
    PROTECTED       reduce using rule 83 (operad_logico -> DIFERENTE .)
    STATIC          reduce using rule 83 (operad_logico -> DIFERENTE .)
    VAR             reduce using rule 83 (operad_logico -> DIFERENTE .)
    IDENTIFICADOR   reduce using rule 83 (operad_logico -> DIFERENTE .)
    BOOLEANO        reduce using rule 83 (operad_logico -> DIFERENTE .)
    CADENA          reduce using rule 83 (operad_logico -> DIFERENTE .)
    NULO            reduce using rule 83 (operad_logico -> DIFERENTE .)
    NEW             reduce using rule 83 (operad_logico -> DIFERENTE .)


state 80

    (84) operad_logico -> NO_IDENTIDAD .

    ENTERO          reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    FLOTANTE        reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    SIGNO_DOLAR     reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    CONST           reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    PRIVATE         reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    PUBLIC          reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    PROTECTED       reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    STATIC          reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    VAR             reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    IDENTIFICADOR   reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    BOOLEANO        reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    CADENA          reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    NULO            reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)
    NEW             reduce using rule 84 (operad_logico -> NO_IDENTIDAD .)


state 81

    (85) operad_logico -> MAYOR .

    ENTERO          reduce using rule 85 (operad_logico -> MAYOR .)
    FLOTANTE        reduce using rule 85 (operad_logico -> MAYOR .)
    SIGNO_DOLAR     reduce using rule 85 (operad_logico -> MAYOR .)
    CONST           reduce using rule 85 (operad_logico -> MAYOR .)
    PRIVATE         reduce using rule 85 (operad_logico -> MAYOR .)
    PUBLIC          reduce using rule 85 (operad_logico -> MAYOR .)
    PROTECTED       reduce using rule 85 (operad_logico -> MAYOR .)
    STATIC          reduce using rule 85 (operad_logico -> MAYOR .)
    VAR             reduce using rule 85 (operad_logico -> MAYOR .)
    IDENTIFICADOR   reduce using rule 85 (operad_logico -> MAYOR .)
    BOOLEANO        reduce using rule 85 (operad_logico -> MAYOR .)
    CADENA          reduce using rule 85 (operad_logico -> MAYOR .)
    NULO            reduce using rule 85 (operad_logico -> MAYOR .)
    NEW             reduce using rule 85 (operad_logico -> MAYOR .)


state 82

    (86) operad_logico -> MAYOR_IGUAL .

    ENTERO          reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    SIGNO_DOLAR     reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    CONST           reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    PRIVATE         reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    PUBLIC          reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    PROTECTED       reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    STATIC          reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    VAR             reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    IDENTIFICADOR   reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    BOOLEANO        reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    CADENA          reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    NULO            reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)
    NEW             reduce using rule 86 (operad_logico -> MAYOR_IGUAL .)


state 83

    (87) operad_logico -> MENOR .

    ENTERO          reduce using rule 87 (operad_logico -> MENOR .)
    FLOTANTE        reduce using rule 87 (operad_logico -> MENOR .)
    SIGNO_DOLAR     reduce using rule 87 (operad_logico -> MENOR .)
    CONST           reduce using rule 87 (operad_logico -> MENOR .)
    PRIVATE         reduce using rule 87 (operad_logico -> MENOR .)
    PUBLIC          reduce using rule 87 (operad_logico -> MENOR .)
    PROTECTED       reduce using rule 87 (operad_logico -> MENOR .)
    STATIC          reduce using rule 87 (operad_logico -> MENOR .)
    VAR             reduce using rule 87 (operad_logico -> MENOR .)
    IDENTIFICADOR   reduce using rule 87 (operad_logico -> MENOR .)
    BOOLEANO        reduce using rule 87 (operad_logico -> MENOR .)
    CADENA          reduce using rule 87 (operad_logico -> MENOR .)
    NULO            reduce using rule 87 (operad_logico -> MENOR .)
    NEW             reduce using rule 87 (operad_logico -> MENOR .)


state 84

    (88) operad_logico -> MENOR_IGUAL .

    ENTERO          reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    SIGNO_DOLAR     reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    CONST           reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    PRIVATE         reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    PUBLIC          reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    PROTECTED       reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    STATIC          reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    VAR             reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    IDENTIFICADOR   reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    BOOLEANO        reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    CADENA          reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    NULO            reduce using rule 88 (operad_logico -> MENOR_IGUAL .)
    NEW             reduce using rule 88 (operad_logico -> MENOR_IGUAL .)


state 85

    (89) operad_logico -> AND .

    ENTERO          reduce using rule 89 (operad_logico -> AND .)
    FLOTANTE        reduce using rule 89 (operad_logico -> AND .)
    SIGNO_DOLAR     reduce using rule 89 (operad_logico -> AND .)
    CONST           reduce using rule 89 (operad_logico -> AND .)
    PRIVATE         reduce using rule 89 (operad_logico -> AND .)
    PUBLIC          reduce using rule 89 (operad_logico -> AND .)
    PROTECTED       reduce using rule 89 (operad_logico -> AND .)
    STATIC          reduce using rule 89 (operad_logico -> AND .)
    VAR             reduce using rule 89 (operad_logico -> AND .)
    IDENTIFICADOR   reduce using rule 89 (operad_logico -> AND .)
    BOOLEANO        reduce using rule 89 (operad_logico -> AND .)
    CADENA          reduce using rule 89 (operad_logico -> AND .)
    NULO            reduce using rule 89 (operad_logico -> AND .)
    NEW             reduce using rule 89 (operad_logico -> AND .)


state 86

    (90) operad_logico -> OR .

    ENTERO          reduce using rule 90 (operad_logico -> OR .)
    FLOTANTE        reduce using rule 90 (operad_logico -> OR .)
    SIGNO_DOLAR     reduce using rule 90 (operad_logico -> OR .)
    CONST           reduce using rule 90 (operad_logico -> OR .)
    PRIVATE         reduce using rule 90 (operad_logico -> OR .)
    PUBLIC          reduce using rule 90 (operad_logico -> OR .)
    PROTECTED       reduce using rule 90 (operad_logico -> OR .)
    STATIC          reduce using rule 90 (operad_logico -> OR .)
    VAR             reduce using rule 90 (operad_logico -> OR .)
    IDENTIFICADOR   reduce using rule 90 (operad_logico -> OR .)
    BOOLEANO        reduce using rule 90 (operad_logico -> OR .)
    CADENA          reduce using rule 90 (operad_logico -> OR .)
    NULO            reduce using rule 90 (operad_logico -> OR .)
    NEW             reduce using rule 90 (operad_logico -> OR .)


state 87

    (91) operad_logico -> XOR .

    ENTERO          reduce using rule 91 (operad_logico -> XOR .)
    FLOTANTE        reduce using rule 91 (operad_logico -> XOR .)
    SIGNO_DOLAR     reduce using rule 91 (operad_logico -> XOR .)
    CONST           reduce using rule 91 (operad_logico -> XOR .)
    PRIVATE         reduce using rule 91 (operad_logico -> XOR .)
    PUBLIC          reduce using rule 91 (operad_logico -> XOR .)
    PROTECTED       reduce using rule 91 (operad_logico -> XOR .)
    STATIC          reduce using rule 91 (operad_logico -> XOR .)
    VAR             reduce using rule 91 (operad_logico -> XOR .)
    IDENTIFICADOR   reduce using rule 91 (operad_logico -> XOR .)
    BOOLEANO        reduce using rule 91 (operad_logico -> XOR .)
    CADENA          reduce using rule 91 (operad_logico -> XOR .)
    NULO            reduce using rule 91 (operad_logico -> XOR .)
    NEW             reduce using rule 91 (operad_logico -> XOR .)


state 88

    (92) operad_logico -> CONJUNCION .

    ENTERO          reduce using rule 92 (operad_logico -> CONJUNCION .)
    FLOTANTE        reduce using rule 92 (operad_logico -> CONJUNCION .)
    SIGNO_DOLAR     reduce using rule 92 (operad_logico -> CONJUNCION .)
    CONST           reduce using rule 92 (operad_logico -> CONJUNCION .)
    PRIVATE         reduce using rule 92 (operad_logico -> CONJUNCION .)
    PUBLIC          reduce using rule 92 (operad_logico -> CONJUNCION .)
    PROTECTED       reduce using rule 92 (operad_logico -> CONJUNCION .)
    STATIC          reduce using rule 92 (operad_logico -> CONJUNCION .)
    VAR             reduce using rule 92 (operad_logico -> CONJUNCION .)
    IDENTIFICADOR   reduce using rule 92 (operad_logico -> CONJUNCION .)
    BOOLEANO        reduce using rule 92 (operad_logico -> CONJUNCION .)
    CADENA          reduce using rule 92 (operad_logico -> CONJUNCION .)
    NULO            reduce using rule 92 (operad_logico -> CONJUNCION .)
    NEW             reduce using rule 92 (operad_logico -> CONJUNCION .)


state 89

    (93) operad_logico -> DISYUNCION .

    ENTERO          reduce using rule 93 (operad_logico -> DISYUNCION .)
    FLOTANTE        reduce using rule 93 (operad_logico -> DISYUNCION .)
    SIGNO_DOLAR     reduce using rule 93 (operad_logico -> DISYUNCION .)
    CONST           reduce using rule 93 (operad_logico -> DISYUNCION .)
    PRIVATE         reduce using rule 93 (operad_logico -> DISYUNCION .)
    PUBLIC          reduce using rule 93 (operad_logico -> DISYUNCION .)
    PROTECTED       reduce using rule 93 (operad_logico -> DISYUNCION .)
    STATIC          reduce using rule 93 (operad_logico -> DISYUNCION .)
    VAR             reduce using rule 93 (operad_logico -> DISYUNCION .)
    IDENTIFICADOR   reduce using rule 93 (operad_logico -> DISYUNCION .)
    BOOLEANO        reduce using rule 93 (operad_logico -> DISYUNCION .)
    CADENA          reduce using rule 93 (operad_logico -> DISYUNCION .)
    NULO            reduce using rule 93 (operad_logico -> DISYUNCION .)
    NEW             reduce using rule 93 (operad_logico -> DISYUNCION .)


state 90

    (112) operaciones_logicas -> funcionuso operad_logico . funcionuso
    (113) operaciones_logicas -> funcionuso operad_logico . operaciones_logicas
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    IDENTIFICADOR   shift and go to state 6
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    CADENA          shift and go to state 26

    funcionuso                     shift and go to state 167
    operaciones_logicas            shift and go to state 168
    decl_variable                  shift and go to state 169
    operaciones_arit               shift and go to state 170
    variable_tipo                  shift and go to state 96
    salidas_posibles               shift and go to state 171
    datos                          shift and go to state 44

state 91

    (21) salida -> ECHO salidas_posibles . FIN_LINEA
    (162) concadenacion1 -> ECHO salidas_posibles . PUNTO decl_variable FIN_LINEA

    FIN_LINEA       shift and go to state 172
    PUNTO           shift and go to state 173


state 92

    (20) salidas_posibles -> decl_variable .

    FIN_LINEA       reduce using rule 20 (salidas_posibles -> decl_variable .)
    PUNTO           reduce using rule 20 (salidas_posibles -> decl_variable .)
    SUMA            reduce using rule 20 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 20 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 20 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 20 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 20 (salidas_posibles -> decl_variable .)
    IGUALDAD        reduce using rule 20 (salidas_posibles -> decl_variable .)
    IDENTIDAD       reduce using rule 20 (salidas_posibles -> decl_variable .)
    DIFERENTE       reduce using rule 20 (salidas_posibles -> decl_variable .)
    NO_IDENTIDAD    reduce using rule 20 (salidas_posibles -> decl_variable .)
    MAYOR           reduce using rule 20 (salidas_posibles -> decl_variable .)
    MAYOR_IGUAL     reduce using rule 20 (salidas_posibles -> decl_variable .)
    MENOR           reduce using rule 20 (salidas_posibles -> decl_variable .)
    MENOR_IGUAL     reduce using rule 20 (salidas_posibles -> decl_variable .)
    AND             reduce using rule 20 (salidas_posibles -> decl_variable .)
    OR              reduce using rule 20 (salidas_posibles -> decl_variable .)
    XOR             reduce using rule 20 (salidas_posibles -> decl_variable .)
    CONJUNCION      reduce using rule 20 (salidas_posibles -> decl_variable .)
    DISYUNCION      reduce using rule 20 (salidas_posibles -> decl_variable .)
    PARENTESIS_CIERRA reduce using rule 20 (salidas_posibles -> decl_variable .)
    COMA            reduce using rule 20 (salidas_posibles -> decl_variable .)


state 93

    (45) datos -> ENTERO .

    FIN_LINEA       reduce using rule 45 (datos -> ENTERO .)
    PUNTO           reduce using rule 45 (datos -> ENTERO .)
    COMA            reduce using rule 45 (datos -> ENTERO .)
    IGUAL           reduce using rule 45 (datos -> ENTERO .)
    CORCHETE_CIERRA reduce using rule 45 (datos -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 45 (datos -> ENTERO .)
    SUMA            reduce using rule 45 (datos -> ENTERO .)
    RESTA           reduce using rule 45 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 45 (datos -> ENTERO .)
    DIVISION        reduce using rule 45 (datos -> ENTERO .)
    POTENCIA        reduce using rule 45 (datos -> ENTERO .)
    MODULO          reduce using rule 45 (datos -> ENTERO .)
    IGUALDAD        reduce using rule 45 (datos -> ENTERO .)
    IDENTIDAD       reduce using rule 45 (datos -> ENTERO .)
    DIFERENTE       reduce using rule 45 (datos -> ENTERO .)
    NO_IDENTIDAD    reduce using rule 45 (datos -> ENTERO .)
    MAYOR           reduce using rule 45 (datos -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 45 (datos -> ENTERO .)
    MENOR           reduce using rule 45 (datos -> ENTERO .)
    MENOR_IGUAL     reduce using rule 45 (datos -> ENTERO .)
    AND             reduce using rule 45 (datos -> ENTERO .)
    OR              reduce using rule 45 (datos -> ENTERO .)
    XOR             reduce using rule 45 (datos -> ENTERO .)
    CONJUNCION      reduce using rule 45 (datos -> ENTERO .)
    DISYUNCION      reduce using rule 45 (datos -> ENTERO .)


state 94

    (46) datos -> FLOTANTE .

    FIN_LINEA       reduce using rule 46 (datos -> FLOTANTE .)
    PUNTO           reduce using rule 46 (datos -> FLOTANTE .)
    COMA            reduce using rule 46 (datos -> FLOTANTE .)
    IGUAL           reduce using rule 46 (datos -> FLOTANTE .)
    CORCHETE_CIERRA reduce using rule 46 (datos -> FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 46 (datos -> FLOTANTE .)
    SUMA            reduce using rule 46 (datos -> FLOTANTE .)
    RESTA           reduce using rule 46 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 46 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 46 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 46 (datos -> FLOTANTE .)
    MODULO          reduce using rule 46 (datos -> FLOTANTE .)
    IGUALDAD        reduce using rule 46 (datos -> FLOTANTE .)
    IDENTIDAD       reduce using rule 46 (datos -> FLOTANTE .)
    DIFERENTE       reduce using rule 46 (datos -> FLOTANTE .)
    NO_IDENTIDAD    reduce using rule 46 (datos -> FLOTANTE .)
    MAYOR           reduce using rule 46 (datos -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 46 (datos -> FLOTANTE .)
    MENOR           reduce using rule 46 (datos -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 46 (datos -> FLOTANTE .)
    AND             reduce using rule 46 (datos -> FLOTANTE .)
    OR              reduce using rule 46 (datos -> FLOTANTE .)
    XOR             reduce using rule 46 (datos -> FLOTANTE .)
    CONJUNCION      reduce using rule 46 (datos -> FLOTANTE .)
    DISYUNCION      reduce using rule 46 (datos -> FLOTANTE .)


state 95

    (48) datos -> BOOLEANO .

    FIN_LINEA       reduce using rule 48 (datos -> BOOLEANO .)
    PUNTO           reduce using rule 48 (datos -> BOOLEANO .)
    COMA            reduce using rule 48 (datos -> BOOLEANO .)
    IGUAL           reduce using rule 48 (datos -> BOOLEANO .)
    CORCHETE_CIERRA reduce using rule 48 (datos -> BOOLEANO .)
    PARENTESIS_CIERRA reduce using rule 48 (datos -> BOOLEANO .)
    SUMA            reduce using rule 48 (datos -> BOOLEANO .)
    RESTA           reduce using rule 48 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 48 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 48 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 48 (datos -> BOOLEANO .)
    MODULO          reduce using rule 48 (datos -> BOOLEANO .)
    IGUALDAD        reduce using rule 48 (datos -> BOOLEANO .)
    IDENTIDAD       reduce using rule 48 (datos -> BOOLEANO .)
    DIFERENTE       reduce using rule 48 (datos -> BOOLEANO .)
    NO_IDENTIDAD    reduce using rule 48 (datos -> BOOLEANO .)
    MAYOR           reduce using rule 48 (datos -> BOOLEANO .)
    MAYOR_IGUAL     reduce using rule 48 (datos -> BOOLEANO .)
    MENOR           reduce using rule 48 (datos -> BOOLEANO .)
    MENOR_IGUAL     reduce using rule 48 (datos -> BOOLEANO .)
    AND             reduce using rule 48 (datos -> BOOLEANO .)
    OR              reduce using rule 48 (datos -> BOOLEANO .)
    XOR             reduce using rule 48 (datos -> BOOLEANO .)
    CONJUNCION      reduce using rule 48 (datos -> BOOLEANO .)
    DISYUNCION      reduce using rule 48 (datos -> BOOLEANO .)


state 96

    (34) decl_variable -> variable_tipo . SIGNO_DOLAR IDENTIFICADOR

    SIGNO_DOLAR     shift and go to state 119


state 97

    (99) operaciones_arit -> salidas_posibles operad_arit . salidas_posibles
    (100) operaciones_arit -> salidas_posibles operad_arit . operaciones_arit
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 174
    operaciones_arit               shift and go to state 175
    datos                          shift and go to state 44
    decl_variable                  shift and go to state 92
    variable_tipo                  shift and go to state 96

state 98

    (101) operaciones_bits -> salidas_posibles operand_bits . salidas_posibles
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 176
    datos                          shift and go to state 44
    decl_variable                  shift and go to state 92
    variable_tipo                  shift and go to state 96

state 99

    (75) operad_arit -> SUMA .

    ENTERO          reduce using rule 75 (operad_arit -> SUMA .)
    FLOTANTE        reduce using rule 75 (operad_arit -> SUMA .)
    CADENA          reduce using rule 75 (operad_arit -> SUMA .)
    BOOLEANO        reduce using rule 75 (operad_arit -> SUMA .)
    SIGNO_DOLAR     reduce using rule 75 (operad_arit -> SUMA .)
    CONST           reduce using rule 75 (operad_arit -> SUMA .)
    PRIVATE         reduce using rule 75 (operad_arit -> SUMA .)
    PUBLIC          reduce using rule 75 (operad_arit -> SUMA .)
    PROTECTED       reduce using rule 75 (operad_arit -> SUMA .)
    STATIC          reduce using rule 75 (operad_arit -> SUMA .)
    VAR             reduce using rule 75 (operad_arit -> SUMA .)


state 100

    (76) operad_arit -> RESTA .

    ENTERO          reduce using rule 76 (operad_arit -> RESTA .)
    FLOTANTE        reduce using rule 76 (operad_arit -> RESTA .)
    CADENA          reduce using rule 76 (operad_arit -> RESTA .)
    BOOLEANO        reduce using rule 76 (operad_arit -> RESTA .)
    SIGNO_DOLAR     reduce using rule 76 (operad_arit -> RESTA .)
    CONST           reduce using rule 76 (operad_arit -> RESTA .)
    PRIVATE         reduce using rule 76 (operad_arit -> RESTA .)
    PUBLIC          reduce using rule 76 (operad_arit -> RESTA .)
    PROTECTED       reduce using rule 76 (operad_arit -> RESTA .)
    STATIC          reduce using rule 76 (operad_arit -> RESTA .)
    VAR             reduce using rule 76 (operad_arit -> RESTA .)


state 101

    (77) operad_arit -> MULTIPLICACION .

    ENTERO          reduce using rule 77 (operad_arit -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 77 (operad_arit -> MULTIPLICACION .)
    CADENA          reduce using rule 77 (operad_arit -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 77 (operad_arit -> MULTIPLICACION .)
    SIGNO_DOLAR     reduce using rule 77 (operad_arit -> MULTIPLICACION .)
    CONST           reduce using rule 77 (operad_arit -> MULTIPLICACION .)
    PRIVATE         reduce using rule 77 (operad_arit -> MULTIPLICACION .)
    PUBLIC          reduce using rule 77 (operad_arit -> MULTIPLICACION .)
    PROTECTED       reduce using rule 77 (operad_arit -> MULTIPLICACION .)
    STATIC          reduce using rule 77 (operad_arit -> MULTIPLICACION .)
    VAR             reduce using rule 77 (operad_arit -> MULTIPLICACION .)


state 102

    (78) operad_arit -> DIVISION .

    ENTERO          reduce using rule 78 (operad_arit -> DIVISION .)
    FLOTANTE        reduce using rule 78 (operad_arit -> DIVISION .)
    CADENA          reduce using rule 78 (operad_arit -> DIVISION .)
    BOOLEANO        reduce using rule 78 (operad_arit -> DIVISION .)
    SIGNO_DOLAR     reduce using rule 78 (operad_arit -> DIVISION .)
    CONST           reduce using rule 78 (operad_arit -> DIVISION .)
    PRIVATE         reduce using rule 78 (operad_arit -> DIVISION .)
    PUBLIC          reduce using rule 78 (operad_arit -> DIVISION .)
    PROTECTED       reduce using rule 78 (operad_arit -> DIVISION .)
    STATIC          reduce using rule 78 (operad_arit -> DIVISION .)
    VAR             reduce using rule 78 (operad_arit -> DIVISION .)


state 103

    (79) operad_arit -> POTENCIA .

    ENTERO          reduce using rule 79 (operad_arit -> POTENCIA .)
    FLOTANTE        reduce using rule 79 (operad_arit -> POTENCIA .)
    CADENA          reduce using rule 79 (operad_arit -> POTENCIA .)
    BOOLEANO        reduce using rule 79 (operad_arit -> POTENCIA .)
    SIGNO_DOLAR     reduce using rule 79 (operad_arit -> POTENCIA .)
    CONST           reduce using rule 79 (operad_arit -> POTENCIA .)
    PRIVATE         reduce using rule 79 (operad_arit -> POTENCIA .)
    PUBLIC          reduce using rule 79 (operad_arit -> POTENCIA .)
    PROTECTED       reduce using rule 79 (operad_arit -> POTENCIA .)
    STATIC          reduce using rule 79 (operad_arit -> POTENCIA .)
    VAR             reduce using rule 79 (operad_arit -> POTENCIA .)


state 104

    (80) operad_arit -> MODULO .

    ENTERO          reduce using rule 80 (operad_arit -> MODULO .)
    FLOTANTE        reduce using rule 80 (operad_arit -> MODULO .)
    CADENA          reduce using rule 80 (operad_arit -> MODULO .)
    BOOLEANO        reduce using rule 80 (operad_arit -> MODULO .)
    SIGNO_DOLAR     reduce using rule 80 (operad_arit -> MODULO .)
    CONST           reduce using rule 80 (operad_arit -> MODULO .)
    PRIVATE         reduce using rule 80 (operad_arit -> MODULO .)
    PUBLIC          reduce using rule 80 (operad_arit -> MODULO .)
    PROTECTED       reduce using rule 80 (operad_arit -> MODULO .)
    STATIC          reduce using rule 80 (operad_arit -> MODULO .)
    VAR             reduce using rule 80 (operad_arit -> MODULO .)


state 105

    (94) operand_bits -> CONJUNCIONBITS .

    ENTERO          reduce using rule 94 (operand_bits -> CONJUNCIONBITS .)
    FLOTANTE        reduce using rule 94 (operand_bits -> CONJUNCIONBITS .)
    CADENA          reduce using rule 94 (operand_bits -> CONJUNCIONBITS .)
    BOOLEANO        reduce using rule 94 (operand_bits -> CONJUNCIONBITS .)
    SIGNO_DOLAR     reduce using rule 94 (operand_bits -> CONJUNCIONBITS .)
    CONST           reduce using rule 94 (operand_bits -> CONJUNCIONBITS .)
    PRIVATE         reduce using rule 94 (operand_bits -> CONJUNCIONBITS .)
    PUBLIC          reduce using rule 94 (operand_bits -> CONJUNCIONBITS .)
    PROTECTED       reduce using rule 94 (operand_bits -> CONJUNCIONBITS .)
    STATIC          reduce using rule 94 (operand_bits -> CONJUNCIONBITS .)
    VAR             reduce using rule 94 (operand_bits -> CONJUNCIONBITS .)


state 106

    (95) operand_bits -> DISYUNCIONBITS .

    ENTERO          reduce using rule 95 (operand_bits -> DISYUNCIONBITS .)
    FLOTANTE        reduce using rule 95 (operand_bits -> DISYUNCIONBITS .)
    CADENA          reduce using rule 95 (operand_bits -> DISYUNCIONBITS .)
    BOOLEANO        reduce using rule 95 (operand_bits -> DISYUNCIONBITS .)
    SIGNO_DOLAR     reduce using rule 95 (operand_bits -> DISYUNCIONBITS .)
    CONST           reduce using rule 95 (operand_bits -> DISYUNCIONBITS .)
    PRIVATE         reduce using rule 95 (operand_bits -> DISYUNCIONBITS .)
    PUBLIC          reduce using rule 95 (operand_bits -> DISYUNCIONBITS .)
    PROTECTED       reduce using rule 95 (operand_bits -> DISYUNCIONBITS .)
    STATIC          reduce using rule 95 (operand_bits -> DISYUNCIONBITS .)
    VAR             reduce using rule 95 (operand_bits -> DISYUNCIONBITS .)


state 107

    (96) operand_bits -> DISYUNCION_EXC .

    ENTERO          reduce using rule 96 (operand_bits -> DISYUNCION_EXC .)
    FLOTANTE        reduce using rule 96 (operand_bits -> DISYUNCION_EXC .)
    CADENA          reduce using rule 96 (operand_bits -> DISYUNCION_EXC .)
    BOOLEANO        reduce using rule 96 (operand_bits -> DISYUNCION_EXC .)
    SIGNO_DOLAR     reduce using rule 96 (operand_bits -> DISYUNCION_EXC .)
    CONST           reduce using rule 96 (operand_bits -> DISYUNCION_EXC .)
    PRIVATE         reduce using rule 96 (operand_bits -> DISYUNCION_EXC .)
    PUBLIC          reduce using rule 96 (operand_bits -> DISYUNCION_EXC .)
    PROTECTED       reduce using rule 96 (operand_bits -> DISYUNCION_EXC .)
    STATIC          reduce using rule 96 (operand_bits -> DISYUNCION_EXC .)
    VAR             reduce using rule 96 (operand_bits -> DISYUNCION_EXC .)


state 108

    (97) operand_bits -> DESPLAZAR_BITS_IZQ .

    ENTERO          reduce using rule 97 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    FLOTANTE        reduce using rule 97 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    CADENA          reduce using rule 97 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    BOOLEANO        reduce using rule 97 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    SIGNO_DOLAR     reduce using rule 97 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    CONST           reduce using rule 97 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PRIVATE         reduce using rule 97 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PUBLIC          reduce using rule 97 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PROTECTED       reduce using rule 97 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    STATIC          reduce using rule 97 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    VAR             reduce using rule 97 (operand_bits -> DESPLAZAR_BITS_IZQ .)


state 109

    (98) operand_bits -> DESPLAZAR_BITS_DER .

    ENTERO          reduce using rule 98 (operand_bits -> DESPLAZAR_BITS_DER .)
    FLOTANTE        reduce using rule 98 (operand_bits -> DESPLAZAR_BITS_DER .)
    CADENA          reduce using rule 98 (operand_bits -> DESPLAZAR_BITS_DER .)
    BOOLEANO        reduce using rule 98 (operand_bits -> DESPLAZAR_BITS_DER .)
    SIGNO_DOLAR     reduce using rule 98 (operand_bits -> DESPLAZAR_BITS_DER .)
    CONST           reduce using rule 98 (operand_bits -> DESPLAZAR_BITS_DER .)
    PRIVATE         reduce using rule 98 (operand_bits -> DESPLAZAR_BITS_DER .)
    PUBLIC          reduce using rule 98 (operand_bits -> DESPLAZAR_BITS_DER .)
    PROTECTED       reduce using rule 98 (operand_bits -> DESPLAZAR_BITS_DER .)
    STATIC          reduce using rule 98 (operand_bits -> DESPLAZAR_BITS_DER .)
    VAR             reduce using rule 98 (operand_bits -> DESPLAZAR_BITS_DER .)


state 110

    (22) salida -> PRINT PARENTESIS_ABRE . salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 177
    datos                          shift and go to state 44
    decl_variable                  shift and go to state 92
    variable_tipo                  shift and go to state 96

state 111

    (23) salida -> PRINT salidas_posibles . FIN_LINEA

    FIN_LINEA       shift and go to state 178


state 112

    (24) ingreso -> READLINE PARENTESIS_ABRE . CADENA PARENTESIS_CIERRA FIN_LINEA

    CADENA          shift and go to state 179


state 113

    (25) ingreso -> FGETS PARENTESIS_ABRE . STDIN PARENTESIS_CIERRA FIN_LINEA

    STDIN           shift and go to state 180


state 114

    (26) ingreso -> FSCANF PARENTESIS_ABRE . STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    STDIN           shift and go to state 181


state 115

    (33) decl_variable -> SIGNO_DOLAR IDENTIFICADOR .

    IGUAL           reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    PUNTO           reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    LAMBDA          reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    INCREMENTO      reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DECREMENTO      reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    IGUALDAD        reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    IDENTIDAD       reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    NO_IDENTIDAD    reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR           reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MENOR           reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    AND             reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    OR              reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    XOR             reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCION      reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION      reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    SUMA            reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    RESTA           reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DIVISION        reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    POTENCIA        reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MODULO          reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCIONBITS  reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCIONBITS  reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION_EXC  reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_IZQ reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_DER reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    FIN_LINEA       reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    AS              reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    COMA            reduce using rule 33 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)


state 116

    (57) estructuras_datos -> pila FIN_LINEA .

    CLASS           reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    BREAK           reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    ECHO            reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    PRINT           reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    READLINE        reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    FGETS           reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    FSCANF          reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    NEW             reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    ARRAY           reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    FOR             reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    FOREACH         reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    WHILE           reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    FUNCTION        reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    CONST           reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    PRIVATE         reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    PUBLIC          reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    PROTECTED       reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    STATIC          reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    VAR             reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    ENTERO          reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    FLOTANTE        reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    BOOLEANO        reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    NEGACION        reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    INCREMENTO      reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    DECREMENTO      reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    IF              reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    CADENA          reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    $end            reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)
    RETURN          reduce using rule 57 (estructuras_datos -> pila FIN_LINEA .)


state 117

    (58) estructuras_datos -> arreglo FIN_LINEA .

    CLASS           reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    BREAK           reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    ECHO            reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    PRINT           reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    READLINE        reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    FGETS           reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    FSCANF          reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    NEW             reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    ARRAY           reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    FOR             reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    FOREACH         reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    WHILE           reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    FUNCTION        reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    CONST           reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    PRIVATE         reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    PUBLIC          reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    PROTECTED       reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    STATIC          reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    VAR             reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    ENTERO          reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    FLOTANTE        reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    BOOLEANO        reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    NEGACION        reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    INCREMENTO      reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    DECREMENTO      reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    IF              reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    CADENA          reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    $end            reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)
    RETURN          reduce using rule 58 (estructuras_datos -> arreglo FIN_LINEA .)


state 118

    (52) funcionglobal -> variable_tipo funcion .

    CLASS           reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    COMENTARIO_LINEA reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    COMENTARIO_BLOQUE reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    BREAK           reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    ECHO            reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    PRINT           reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    READLINE        reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    FGETS           reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    FSCANF          reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    SIGNO_DOLAR     reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    NEW             reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    ARRAY           reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    CORCHETE_ABRE   reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    FOR             reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    FOREACH         reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    WHILE           reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    FUNCTION        reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    CONST           reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    PRIVATE         reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    PUBLIC          reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    PROTECTED       reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    STATIC          reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    VAR             reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    ENTERO          reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    FLOTANTE        reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    BOOLEANO        reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    NEGACION        reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    INCREMENTO      reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    DECREMENTO      reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    IF              reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    IDENTIFICADOR   reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    CADENA          reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    $end            reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    LLAVE_CIERRA    reduce using rule 52 (funcionglobal -> variable_tipo funcion .)
    RETURN          reduce using rule 52 (funcionglobal -> variable_tipo funcion .)


state 119

    (34) decl_variable -> variable_tipo SIGNO_DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 182


state 120

    (114) operaciones_logicas -> operaciones_logicas operad_logico . funcionuso
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA

    IDENTIFICADOR   shift and go to state 6

    funcionuso                     shift and go to state 183

state 121

    (109) operaciones_logicas -> operaciones_arit operad_logico . ENTERO
    (110) operaciones_logicas -> operaciones_arit operad_logico . FLOTANTE

    ENTERO          shift and go to state 184
    FLOTANTE        shift and go to state 185


state 122

    (148) declaracion_s -> crecimiento decl_variable .

    FIN_LINEA       reduce using rule 148 (declaracion_s -> crecimiento decl_variable .)
    PARENTESIS_CIERRA reduce using rule 148 (declaracion_s -> crecimiento decl_variable .)


state 123

    (59) pila -> NEW STACK . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 186


state 124

    (65) arreglo -> ARRAY PARENTESIS_ABRE . PARENTESIS_CIERRA
    (67) arreglo -> ARRAY PARENTESIS_ABRE . elementos PARENTESIS_CIERRA
    (69) arreglo -> ARRAY PARENTESIS_ABRE . asociacion PARENTESIS_CIERRA
    (73) elementos -> . datos
    (74) elementos -> . datos COMA elementos
    (71) asociacion -> . datos IGUAL MAYOR datos
    (72) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    PARENTESIS_CIERRA shift and go to state 187
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95

    elementos                      shift and go to state 188
    asociacion                     shift and go to state 189
    datos                          shift and go to state 128

state 125

    (66) arreglo -> CORCHETE_ABRE CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 66 (arreglo -> CORCHETE_ABRE CORCHETE_CIERRA .)


state 126

    (68) arreglo -> CORCHETE_ABRE elementos . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 190


state 127

    (70) arreglo -> CORCHETE_ABRE asociacion . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 191


state 128

    (73) elementos -> datos .
    (74) elementos -> datos . COMA elementos
    (71) asociacion -> datos . IGUAL MAYOR datos
    (72) asociacion -> datos . IGUAL MAYOR datos COMA asociacion

    CORCHETE_CIERRA reduce using rule 73 (elementos -> datos .)
    PARENTESIS_CIERRA reduce using rule 73 (elementos -> datos .)
    COMA            shift and go to state 192
    IGUAL           shift and go to state 193


state 129

    (133) for -> FOR PARENTESIS_ABRE . asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    asignacion                     shift and go to state 194
    decl_variable                  shift and go to state 195
    variable_tipo                  shift and go to state 96

state 130

    (153) foreach -> FOREACH PARENTESIS_ABRE . decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> FOREACH PARENTESIS_ABRE . decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 196
    variable_tipo                  shift and go to state 96

state 131

    (156) if_else -> if_else_inicio if_else_fin .

    CLASS           reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    COMENTARIO_LINEA reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    COMENTARIO_BLOQUE reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    BREAK           reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    ECHO            reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    PRINT           reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    READLINE        reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    FGETS           reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    FSCANF          reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    SIGNO_DOLAR     reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    NEW             reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    ARRAY           reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    CORCHETE_ABRE   reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    FOR             reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    FOREACH         reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    WHILE           reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    FUNCTION        reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    CONST           reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    PRIVATE         reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    PUBLIC          reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    PROTECTED       reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    STATIC          reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    VAR             reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    ENTERO          reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    FLOTANTE        reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    BOOLEANO        reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    NEGACION        reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    INCREMENTO      reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    DECREMENTO      reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    IF              reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    IDENTIFICADOR   reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    CADENA          reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    $end            reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    LLAVE_CIERRA    reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)
    RETURN          reduce using rule 156 (if_else -> if_else_inicio if_else_fin .)


state 132

    (157) if_else -> if_else_inicio if_else_cuerpo . if_else_fin
    (161) if_else_fin -> . ELSE LLAVE_ABRE bloque LLAVE_CIERRA

    ELSE            shift and go to state 133

    if_else_fin                    shift and go to state 197

state 133

    (161) if_else_fin -> ELSE . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 198


state 134

    (159) if_else_cuerpo -> ELSEIF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (160) if_else_cuerpo -> ELSEIF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    PARENTESIS_ABRE shift and go to state 199


state 135

    (155) while -> WHILE PARENTESIS_ABRE . decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 200
    variable_tipo                  shift and go to state 96

state 136

    (49) funcion -> FUNCTION IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> FUNCTION IDENTIFICADOR . PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 201


state 137

    (103) operaciones_logicas -> ENTERO operad_logico . ENTERO

    ENTERO          shift and go to state 202


state 138

    (104) operaciones_logicas -> FLOTANTE operad_logico . FLOTANTE

    FLOTANTE        shift and go to state 203


state 139

    (102) operaciones_bits -> NEGACION salidas_posibles .

    FIN_LINEA       reduce using rule 102 (operaciones_bits -> NEGACION salidas_posibles .)


state 140

    (158) if_else_inicio -> IF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    SIGNO_DOLAR     shift and go to state 29
    IDENTIFICADOR   shift and go to state 6
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    CADENA          shift and go to state 26

    operaciones_logicas            shift and go to state 204
    decl_variable                  shift and go to state 169
    operaciones_arit               shift and go to state 170
    funcionuso                     shift and go to state 21
    variable_tipo                  shift and go to state 96
    salidas_posibles               shift and go to state 171
    datos                          shift and go to state 44

state 141

    (5) clase -> CLASS IDENTIFICADOR LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (134) sentenciasAnidadas -> . instrucciones
    (135) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    sentenciasAnidadas             shift and go to state 205
    instrucciones                  shift and go to state 206
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    decl_variable                  shift and go to state 20
    funcionuso                     shift and go to state 21
    salidas_posibles               shift and go to state 23
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 142

    (53) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 207


state 143

    (54) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 208


state 144

    (55) parametros -> SIGNO_DOLAR . IDENTIFICADOR
    (56) parametros -> SIGNO_DOLAR . IDENTIFICADOR COMA parametros

    IDENTIFICADOR   shift and go to state 209


state 145

    (73) elementos -> datos .
    (74) elementos -> datos . COMA elementos

    PARENTESIS_CIERRA reduce using rule 73 (elementos -> datos .)
    CORCHETE_CIERRA reduce using rule 73 (elementos -> datos .)
    COMA            shift and go to state 192


state 146

    (43) valor -> decl_variable .
    (106) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (107) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (108) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (61) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (122) paraCalculos -> decl_variable .
    (20) salidas_posibles -> decl_variable .
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

  ! reduce/reduce conflict for SUMA resolved using rule 20 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 20 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for DIVISION resolved using rule 20 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 20 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (salidas_posibles -> decl_variable .)
    FIN_LINEA       reduce using rule 43 (valor -> decl_variable .)
    LAMBDA          shift and go to state 76
    SUMA            reduce using rule 20 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 20 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 20 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 20 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 20 (salidas_posibles -> decl_variable .)
    CONJUNCIONBITS  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DISYUNCIONBITS  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DISYUNCION_EXC  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_IZQ reduce using rule 20 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_DER reduce using rule 20 (salidas_posibles -> decl_variable .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

  ! SUMA            [ reduce using rule 122 (paraCalculos -> decl_variable .) ]
  ! RESTA           [ reduce using rule 122 (paraCalculos -> decl_variable .) ]
  ! MULTIPLICACION  [ reduce using rule 122 (paraCalculos -> decl_variable .) ]
  ! DIVISION        [ reduce using rule 122 (paraCalculos -> decl_variable .) ]
  ! POTENCIA        [ reduce using rule 122 (paraCalculos -> decl_variable .) ]
  ! MODULO          [ reduce using rule 122 (paraCalculos -> decl_variable .) ]

    operad_logico                  shift and go to state 75

state 147

    (35) asignacion -> decl_variable IGUAL valor . FIN_LINEA

    FIN_LINEA       shift and go to state 210


state 148

    (36) asignacion -> decl_variable IGUAL estructuras_datos .

    CLASS           reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    COMENTARIO_LINEA reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    COMENTARIO_BLOQUE reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    BREAK           reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ECHO            reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PRINT           reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    READLINE        reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FGETS           reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FSCANF          reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    SIGNO_DOLAR     reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    NEW             reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ARRAY           reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CORCHETE_ABRE   reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FOR             reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FOREACH         reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    WHILE           reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FUNCTION        reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CONST           reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PRIVATE         reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PUBLIC          reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    PROTECTED       reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    STATIC          reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    VAR             reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    ENTERO          reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    FLOTANTE        reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    BOOLEANO        reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    NEGACION        reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    INCREMENTO      reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    DECREMENTO      reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    IF              reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    IDENTIFICADOR   reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    CADENA          reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    $end            reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    LLAVE_CIERRA    reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)
    RETURN          reduce using rule 36 (asignacion -> decl_variable IGUAL estructuras_datos .)


state 149

    (37) asignacion -> decl_variable IGUAL explode . FIN_LINEA

    FIN_LINEA       shift and go to state 211


state 150

    (38) asignacion -> decl_variable IGUAL funcionuso . FIN_LINEA
    (111) operaciones_logicas -> funcionuso .
    (112) operaciones_logicas -> funcionuso . operad_logico funcionuso
    (113) operaciones_logicas -> funcionuso . operad_logico operaciones_logicas
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

  ! shift/reduce conflict for FIN_LINEA resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for IDENTIDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for NO_IDENTIDAD resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for CONJUNCION resolved as shift
  ! shift/reduce conflict for DISYUNCION resolved as shift
    FIN_LINEA       shift and go to state 212
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

  ! IGUALDAD        [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! IDENTIDAD       [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! DIFERENTE       [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! NO_IDENTIDAD    [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR           [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR_IGUAL     [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MENOR           [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MENOR_IGUAL     [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! AND             [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! OR              [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! XOR             [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! CONJUNCION      [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! DISYUNCION      [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! FIN_LINEA       [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]

    operad_logico                  shift and go to state 90

state 151

    (39) asignacion -> decl_variable IGUAL operaciones . FIN_LINEA

    FIN_LINEA       shift and go to state 213


state 152

    (40) valor -> datos .
    (19) salidas_posibles -> datos .

    FIN_LINEA       reduce using rule 40 (valor -> datos .)
    PARENTESIS_CIERRA reduce using rule 40 (valor -> datos .)
    SUMA            reduce using rule 19 (salidas_posibles -> datos .)
    RESTA           reduce using rule 19 (salidas_posibles -> datos .)
    MULTIPLICACION  reduce using rule 19 (salidas_posibles -> datos .)
    DIVISION        reduce using rule 19 (salidas_posibles -> datos .)
    POTENCIA        reduce using rule 19 (salidas_posibles -> datos .)
    MODULO          reduce using rule 19 (salidas_posibles -> datos .)
    CONJUNCIONBITS  reduce using rule 19 (salidas_posibles -> datos .)
    DISYUNCIONBITS  reduce using rule 19 (salidas_posibles -> datos .)
    DISYUNCION_EXC  reduce using rule 19 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_IZQ reduce using rule 19 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_DER reduce using rule 19 (salidas_posibles -> datos .)


state 153

    (41) valor -> pila .
    (57) estructuras_datos -> pila . FIN_LINEA

  ! shift/reduce conflict for FIN_LINEA resolved as shift
    FIN_LINEA       shift and go to state 116

  ! FIN_LINEA       [ reduce using rule 41 (valor -> pila .) ]


state 154

    (42) valor -> NULO .

    FIN_LINEA       reduce using rule 42 (valor -> NULO .)
    PARENTESIS_CIERRA reduce using rule 42 (valor -> NULO .)


state 155

    (44) valor -> opAritVar .

    FIN_LINEA       reduce using rule 44 (valor -> opAritVar .)
    PARENTESIS_CIERRA reduce using rule 44 (valor -> opAritVar .)


state 156

    (63) explode -> EXPLODE . PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA
    (64) explode -> EXPLODE . PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 214


state 157

    (45) datos -> ENTERO .
    (103) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (120) paraCalculos -> ENTERO .
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

  ! reduce/reduce conflict for SUMA resolved using rule 45 (datos -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 45 (datos -> ENTERO .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 45 (datos -> ENTERO .)
  ! reduce/reduce conflict for DIVISION resolved using rule 45 (datos -> ENTERO .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 45 (datos -> ENTERO .)
  ! reduce/reduce conflict for MODULO resolved using rule 45 (datos -> ENTERO .)
    FIN_LINEA       reduce using rule 45 (datos -> ENTERO .)
    SUMA            reduce using rule 45 (datos -> ENTERO .)
    RESTA           reduce using rule 45 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 45 (datos -> ENTERO .)
    DIVISION        reduce using rule 45 (datos -> ENTERO .)
    POTENCIA        reduce using rule 45 (datos -> ENTERO .)
    MODULO          reduce using rule 45 (datos -> ENTERO .)
    CONJUNCIONBITS  reduce using rule 45 (datos -> ENTERO .)
    DISYUNCIONBITS  reduce using rule 45 (datos -> ENTERO .)
    DISYUNCION_EXC  reduce using rule 45 (datos -> ENTERO .)
    DESPLAZAR_BITS_IZQ reduce using rule 45 (datos -> ENTERO .)
    DESPLAZAR_BITS_DER reduce using rule 45 (datos -> ENTERO .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

  ! SUMA            [ reduce using rule 120 (paraCalculos -> ENTERO .) ]
  ! RESTA           [ reduce using rule 120 (paraCalculos -> ENTERO .) ]
  ! MULTIPLICACION  [ reduce using rule 120 (paraCalculos -> ENTERO .) ]
  ! DIVISION        [ reduce using rule 120 (paraCalculos -> ENTERO .) ]
  ! POTENCIA        [ reduce using rule 120 (paraCalculos -> ENTERO .) ]
  ! MODULO          [ reduce using rule 120 (paraCalculos -> ENTERO .) ]

    operad_logico                  shift and go to state 137

state 158

    (46) datos -> FLOTANTE .
    (104) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (121) paraCalculos -> FLOTANTE .
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

  ! reduce/reduce conflict for SUMA resolved using rule 46 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for RESTA resolved using rule 46 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 46 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for DIVISION resolved using rule 46 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 46 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for MODULO resolved using rule 46 (datos -> FLOTANTE .)
    FIN_LINEA       reduce using rule 46 (datos -> FLOTANTE .)
    SUMA            reduce using rule 46 (datos -> FLOTANTE .)
    RESTA           reduce using rule 46 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 46 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 46 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 46 (datos -> FLOTANTE .)
    MODULO          reduce using rule 46 (datos -> FLOTANTE .)
    CONJUNCIONBITS  reduce using rule 46 (datos -> FLOTANTE .)
    DISYUNCIONBITS  reduce using rule 46 (datos -> FLOTANTE .)
    DISYUNCION_EXC  reduce using rule 46 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_IZQ reduce using rule 46 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_DER reduce using rule 46 (datos -> FLOTANTE .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

  ! SUMA            [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]
  ! RESTA           [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]
  ! MULTIPLICACION  [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]
  ! DIVISION        [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]
  ! POTENCIA        [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]
  ! MODULO          [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]

    operad_logico                  shift and go to state 138

state 159

    (48) datos -> BOOLEANO .
    (105) operaciones_logicas -> BOOLEANO .

  ! reduce/reduce conflict for FIN_LINEA resolved using rule 48 (datos -> BOOLEANO .)
    FIN_LINEA       reduce using rule 48 (datos -> BOOLEANO .)
    SUMA            reduce using rule 48 (datos -> BOOLEANO .)
    RESTA           reduce using rule 48 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 48 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 48 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 48 (datos -> BOOLEANO .)
    MODULO          reduce using rule 48 (datos -> BOOLEANO .)
    CONJUNCIONBITS  reduce using rule 48 (datos -> BOOLEANO .)
    DISYUNCIONBITS  reduce using rule 48 (datos -> BOOLEANO .)
    DISYUNCION_EXC  reduce using rule 48 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_IZQ reduce using rule 48 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_DER reduce using rule 48 (datos -> BOOLEANO .)
    IGUALDAD        reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    IDENTIDAD       reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    DIFERENTE       reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    NO_IDENTIDAD    reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    MAYOR           reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    MAYOR_IGUAL     reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    MENOR           reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    MENOR_IGUAL     reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    AND             reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    OR              reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    XOR             reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    CONJUNCION      reduce using rule 105 (operaciones_logicas -> BOOLEANO .)
    DISYUNCION      reduce using rule 105 (operaciones_logicas -> BOOLEANO .)

  ! FIN_LINEA       [ reduce using rule 105 (operaciones_logicas -> BOOLEANO .) ]


state 160

    (125) opAritVar -> paraCalculos . combinarOp
    (123) combinarOp -> . operad_arit paraCalculos
    (124) combinarOp -> . operad_arit paraCalculos combinarOp
    (75) operad_arit -> . SUMA
    (76) operad_arit -> . RESTA
    (77) operad_arit -> . MULTIPLICACION
    (78) operad_arit -> . DIVISION
    (79) operad_arit -> . POTENCIA
    (80) operad_arit -> . MODULO

    SUMA            shift and go to state 99
    RESTA           shift and go to state 100
    MULTIPLICACION  shift and go to state 101
    DIVISION        shift and go to state 102
    POTENCIA        shift and go to state 103
    MODULO          shift and go to state 104

    combinarOp                     shift and go to state 215
    operad_arit                    shift and go to state 216

state 161

    (163) concatenacion2 -> decl_variable PUNTO IGUAL . datos FIN_LINEA
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95

    datos                          shift and go to state 217

state 162

    (106) operaciones_logicas -> decl_variable operad_logico decl_variable .

    IGUALDAD        reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    IDENTIDAD       reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    DIFERENTE       reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    NO_IDENTIDAD    reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    MAYOR           reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    MAYOR_IGUAL     reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    MENOR           reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    MENOR_IGUAL     reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    AND             reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    OR              reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    XOR             reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    CONJUNCION      reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    DISYUNCION      reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    FIN_LINEA       reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)
    PARENTESIS_CIERRA reduce using rule 106 (operaciones_logicas -> decl_variable operad_logico decl_variable .)


state 163

    (107) operaciones_logicas -> decl_variable operad_logico ENTERO .

    IGUALDAD        reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    IDENTIDAD       reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    DIFERENTE       reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    NO_IDENTIDAD    reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    MAYOR           reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    MAYOR_IGUAL     reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    MENOR           reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    MENOR_IGUAL     reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    AND             reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    OR              reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    XOR             reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    CONJUNCION      reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    DISYUNCION      reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    FIN_LINEA       reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)
    PARENTESIS_CIERRA reduce using rule 107 (operaciones_logicas -> decl_variable operad_logico ENTERO .)


state 164

    (108) operaciones_logicas -> decl_variable operad_logico FLOTANTE .

    IGUALDAD        reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    IDENTIDAD       reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    DIFERENTE       reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    NO_IDENTIDAD    reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    MAYOR           reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    MENOR           reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    MENOR_IGUAL     reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    AND             reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    OR              reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    XOR             reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    CONJUNCION      reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    DISYUNCION      reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    FIN_LINEA       reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 108 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)


state 165

    (61) pushpila -> decl_variable LAMBDA PUSH . PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> decl_variable LAMBDA PUSH . PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 218


state 166

    (60) poppila -> decl_variable LAMBDA POP . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 219


state 167

    (112) operaciones_logicas -> funcionuso operad_logico funcionuso .
    (111) operaciones_logicas -> funcionuso .
    (112) operaciones_logicas -> funcionuso . operad_logico funcionuso
    (113) operaciones_logicas -> funcionuso . operad_logico operaciones_logicas
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

  ! reduce/reduce conflict for IGUALDAD resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for IDENTIDAD resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for NO_IDENTIDAD resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for MAYOR resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for MAYOR_IGUAL resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for MENOR resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for MENOR_IGUAL resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for AND resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for OR resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for XOR resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for CONJUNCION resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for DISYUNCION resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for FIN_LINEA resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! reduce/reduce conflict for PARENTESIS_CIERRA resolved using rule 111 (operaciones_logicas -> funcionuso .)
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for IDENTIDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for NO_IDENTIDAD resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for CONJUNCION resolved as shift
  ! shift/reduce conflict for DISYUNCION resolved as shift
    FIN_LINEA       reduce using rule 111 (operaciones_logicas -> funcionuso .)
    PARENTESIS_CIERRA reduce using rule 111 (operaciones_logicas -> funcionuso .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

  ! IGUALDAD        [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! IDENTIDAD       [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! DIFERENTE       [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! NO_IDENTIDAD    [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! MAYOR           [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! MAYOR_IGUAL     [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! MENOR           [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! MENOR_IGUAL     [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! AND             [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! OR              [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! XOR             [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! CONJUNCION      [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! DISYUNCION      [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! FIN_LINEA       [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! PARENTESIS_CIERRA [ reduce using rule 112 (operaciones_logicas -> funcionuso operad_logico funcionuso .) ]
  ! IGUALDAD        [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! IDENTIDAD       [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! DIFERENTE       [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! NO_IDENTIDAD    [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR           [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MAYOR_IGUAL     [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MENOR           [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! MENOR_IGUAL     [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! AND             [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! OR              [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! XOR             [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! CONJUNCION      [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]
  ! DISYUNCION      [ reduce using rule 111 (operaciones_logicas -> funcionuso .) ]

    operad_logico                  shift and go to state 90

state 168

    (113) operaciones_logicas -> funcionuso operad_logico operaciones_logicas .
    (114) operaciones_logicas -> operaciones_logicas . operad_logico funcionuso
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for IDENTIDAD resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for NO_IDENTIDAD resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for CONJUNCION resolved as shift
  ! shift/reduce conflict for DISYUNCION resolved as shift
    FIN_LINEA       reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .)
    PARENTESIS_CIERRA reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

  ! IGUALDAD        [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! IDENTIDAD       [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! DIFERENTE       [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! NO_IDENTIDAD    [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! MAYOR           [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! MAYOR_IGUAL     [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! MENOR           [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! MENOR_IGUAL     [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! AND             [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! OR              [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! XOR             [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! CONJUNCION      [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]
  ! DISYUNCION      [ reduce using rule 113 (operaciones_logicas -> funcionuso operad_logico operaciones_logicas .) ]

    operad_logico                  shift and go to state 120

state 169

    (106) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (107) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (108) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (20) salidas_posibles -> decl_variable .
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    SUMA            reduce using rule 20 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 20 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 20 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 20 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 20 (salidas_posibles -> decl_variable .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 75

state 170

    (109) operaciones_logicas -> operaciones_arit . operad_logico ENTERO
    (110) operaciones_logicas -> operaciones_arit . operad_logico FLOTANTE
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 121

state 171

    (99) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (100) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (75) operad_arit -> . SUMA
    (76) operad_arit -> . RESTA
    (77) operad_arit -> . MULTIPLICACION
    (78) operad_arit -> . DIVISION
    (79) operad_arit -> . POTENCIA
    (80) operad_arit -> . MODULO

    SUMA            shift and go to state 99
    RESTA           shift and go to state 100
    MULTIPLICACION  shift and go to state 101
    DIVISION        shift and go to state 102
    POTENCIA        shift and go to state 103
    MODULO          shift and go to state 104

    operad_arit                    shift and go to state 97

state 172

    (21) salida -> ECHO salidas_posibles FIN_LINEA .

    CLASS           reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    BREAK           reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ECHO            reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PRINT           reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    READLINE        reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FGETS           reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FSCANF          reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    NEW             reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ARRAY           reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FOR             reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FOREACH         reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    WHILE           reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FUNCTION        reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CONST           reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PRIVATE         reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PUBLIC          reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PROTECTED       reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    STATIC          reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    VAR             reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ENTERO          reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FLOTANTE        reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    BOOLEANO        reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    NEGACION        reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    INCREMENTO      reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    DECREMENTO      reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    IF              reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CADENA          reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    $end            reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)
    RETURN          reduce using rule 21 (salida -> ECHO salidas_posibles FIN_LINEA .)


state 173

    (162) concadenacion1 -> ECHO salidas_posibles PUNTO . decl_variable FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 220
    variable_tipo                  shift and go to state 96

state 174

    (99) operaciones_arit -> salidas_posibles operad_arit salidas_posibles .
    (99) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (100) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (75) operad_arit -> . SUMA
    (76) operad_arit -> . RESTA
    (77) operad_arit -> . MULTIPLICACION
    (78) operad_arit -> . DIVISION
    (79) operad_arit -> . POTENCIA
    (80) operad_arit -> . MODULO

    IGUALDAD        reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    IDENTIDAD       reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    DIFERENTE       reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    NO_IDENTIDAD    reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    MAYOR           reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    MAYOR_IGUAL     reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    MENOR           reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    MENOR_IGUAL     reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    AND             reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    OR              reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    XOR             reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    CONJUNCION      reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    DISYUNCION      reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    FIN_LINEA       reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    PARENTESIS_CIERRA reduce using rule 99 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    SUMA            shift and go to state 99
    RESTA           shift and go to state 100
    MULTIPLICACION  shift and go to state 101
    DIVISION        shift and go to state 102
    POTENCIA        shift and go to state 103
    MODULO          shift and go to state 104

    operad_arit                    shift and go to state 97

state 175

    (100) operaciones_arit -> salidas_posibles operad_arit operaciones_arit .

    IGUALDAD        reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    IDENTIDAD       reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    DIFERENTE       reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    NO_IDENTIDAD    reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    MAYOR           reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    MAYOR_IGUAL     reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    MENOR           reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    MENOR_IGUAL     reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    AND             reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    OR              reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    XOR             reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    CONJUNCION      reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    DISYUNCION      reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    FIN_LINEA       reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    PARENTESIS_CIERRA reduce using rule 100 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)


state 176

    (101) operaciones_bits -> salidas_posibles operand_bits salidas_posibles .

    FIN_LINEA       reduce using rule 101 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)


state 177

    (22) salida -> PRINT PARENTESIS_ABRE salidas_posibles . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 221


state 178

    (23) salida -> PRINT salidas_posibles FIN_LINEA .

    CLASS           reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    BREAK           reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ECHO            reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PRINT           reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    READLINE        reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FGETS           reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FSCANF          reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    NEW             reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ARRAY           reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FOR             reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FOREACH         reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    WHILE           reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FUNCTION        reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CONST           reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PRIVATE         reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PUBLIC          reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PROTECTED       reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    STATIC          reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    VAR             reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ENTERO          reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FLOTANTE        reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    BOOLEANO        reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    NEGACION        reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    INCREMENTO      reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    DECREMENTO      reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    IF              reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CADENA          reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    $end            reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)
    RETURN          reduce using rule 23 (salida -> PRINT salidas_posibles FIN_LINEA .)


state 179

    (24) ingreso -> READLINE PARENTESIS_ABRE CADENA . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 222


state 180

    (25) ingreso -> FGETS PARENTESIS_ABRE STDIN . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 223


state 181

    (26) ingreso -> FSCANF PARENTESIS_ABRE STDIN . COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    COMA            shift and go to state 224


state 182

    (34) decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .

    IGUAL           reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    PUNTO           reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    LAMBDA          reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    INCREMENTO      reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DECREMENTO      reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    IGUALDAD        reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    IDENTIDAD       reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    NO_IDENTIDAD    reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR           reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MENOR           reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    AND             reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    OR              reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    XOR             reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCION      reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION      reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    SUMA            reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    RESTA           reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DIVISION        reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    POTENCIA        reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MODULO          reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCIONBITS  reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCIONBITS  reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION_EXC  reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_IZQ reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_DER reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    FIN_LINEA       reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    AS              reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    COMA            reduce using rule 34 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)


state 183

    (114) operaciones_logicas -> operaciones_logicas operad_logico funcionuso .

    IGUALDAD        reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    IDENTIDAD       reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    DIFERENTE       reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    NO_IDENTIDAD    reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    MAYOR           reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    MAYOR_IGUAL     reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    MENOR           reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    MENOR_IGUAL     reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    AND             reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    OR              reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    XOR             reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    CONJUNCION      reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    DISYUNCION      reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    FIN_LINEA       reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)
    PARENTESIS_CIERRA reduce using rule 114 (operaciones_logicas -> operaciones_logicas operad_logico funcionuso .)


state 184

    (109) operaciones_logicas -> operaciones_arit operad_logico ENTERO .

    IGUALDAD        reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    IDENTIDAD       reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    DIFERENTE       reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    NO_IDENTIDAD    reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    MAYOR           reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    MAYOR_IGUAL     reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    MENOR           reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    MENOR_IGUAL     reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    AND             reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    OR              reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    XOR             reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    CONJUNCION      reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    DISYUNCION      reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    FIN_LINEA       reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)
    PARENTESIS_CIERRA reduce using rule 109 (operaciones_logicas -> operaciones_arit operad_logico ENTERO .)


state 185

    (110) operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .

    IGUALDAD        reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    IDENTIDAD       reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    DIFERENTE       reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    NO_IDENTIDAD    reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    MAYOR           reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    MENOR           reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    MENOR_IGUAL     reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    AND             reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    OR              reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    XOR             reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    CONJUNCION      reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    DISYUNCION      reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    FIN_LINEA       reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 110 (operaciones_logicas -> operaciones_arit operad_logico FLOTANTE .)


state 186

    (59) pila -> NEW STACK PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 225


state 187

    (65) arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 65 (arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 188

    (67) arreglo -> ARRAY PARENTESIS_ABRE elementos . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 226


state 189

    (69) arreglo -> ARRAY PARENTESIS_ABRE asociacion . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 227


state 190

    (68) arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 68 (arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA .)


state 191

    (70) arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 70 (arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA .)


state 192

    (74) elementos -> datos COMA . elementos
    (73) elementos -> . datos
    (74) elementos -> . datos COMA elementos
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95

    datos                          shift and go to state 145
    elementos                      shift and go to state 228

state 193

    (71) asociacion -> datos IGUAL . MAYOR datos
    (72) asociacion -> datos IGUAL . MAYOR datos COMA asociacion

    MAYOR           shift and go to state 229


state 194

    (133) for -> FOR PARENTESIS_ABRE asignacion . declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (136) declaracionp -> . decl_variable valorc
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    declaracionp                   shift and go to state 230
    decl_variable                  shift and go to state 231
    variable_tipo                  shift and go to state 96

state 195

    (35) asignacion -> decl_variable . IGUAL valor FIN_LINEA
    (36) asignacion -> decl_variable . IGUAL estructuras_datos
    (37) asignacion -> decl_variable . IGUAL explode FIN_LINEA
    (38) asignacion -> decl_variable . IGUAL funcionuso FIN_LINEA
    (39) asignacion -> decl_variable . IGUAL operaciones FIN_LINEA

    IGUAL           shift and go to state 72


state 196

    (153) foreach -> FOREACH PARENTESIS_ABRE decl_variable . AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> FOREACH PARENTESIS_ABRE decl_variable . AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    AS              shift and go to state 232


state 197

    (157) if_else -> if_else_inicio if_else_cuerpo if_else_fin .

    CLASS           reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    COMENTARIO_LINEA reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    COMENTARIO_BLOQUE reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    BREAK           reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ECHO            reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PRINT           reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    READLINE        reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FGETS           reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FSCANF          reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    SIGNO_DOLAR     reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    NEW             reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ARRAY           reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CORCHETE_ABRE   reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FOR             reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FOREACH         reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    WHILE           reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FUNCTION        reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CONST           reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PRIVATE         reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PUBLIC          reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PROTECTED       reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    STATIC          reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    VAR             reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ENTERO          reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FLOTANTE        reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    BOOLEANO        reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    NEGACION        reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    INCREMENTO      reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    DECREMENTO      reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    IF              reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    IDENTIFICADOR   reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CADENA          reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    $end            reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    LLAVE_CIERRA    reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    RETURN          reduce using rule 157 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)


state 198

    (161) if_else_fin -> ELSE LLAVE_ABRE . bloque LLAVE_CIERRA
    (130) bloque -> . sentenciasAnidadas retorno
    (131) bloque -> . sentenciasAnidadas
    (132) bloque -> . retorno
    (134) sentenciasAnidadas -> . instrucciones
    (135) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (151) retorno -> . RETURN salidas_posibles FIN_LINEA
    (152) retorno -> . RETURN operaciones FIN_LINEA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    RETURN          shift and go to state 236
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    bloque                         shift and go to state 233
    sentenciasAnidadas             shift and go to state 234
    retorno                        shift and go to state 235
    instrucciones                  shift and go to state 206
    salidas_posibles               shift and go to state 23
    operaciones                    shift and go to state 15
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    decl_variable                  shift and go to state 20
    funcionuso                     shift and go to state 21
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 199

    (159) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (160) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    SIGNO_DOLAR     shift and go to state 29
    IDENTIFICADOR   shift and go to state 6
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    CADENA          shift and go to state 26

    operaciones_logicas            shift and go to state 237
    decl_variable                  shift and go to state 169
    operaciones_arit               shift and go to state 170
    funcionuso                     shift and go to state 21
    variable_tipo                  shift and go to state 96
    salidas_posibles               shift and go to state 171
    datos                          shift and go to state 44

state 200

    (155) while -> WHILE PARENTESIS_ABRE decl_variable . operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 238

state 201

    (49) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE . parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (55) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (56) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros

    PARENTESIS_CIERRA shift and go to state 239
    SIGNO_DOLAR     shift and go to state 144

    parametros                     shift and go to state 240

state 202

    (103) operaciones_logicas -> ENTERO operad_logico ENTERO .

    IGUALDAD        reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    IDENTIDAD       reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    DIFERENTE       reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    NO_IDENTIDAD    reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    MAYOR           reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    MAYOR_IGUAL     reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    MENOR           reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    MENOR_IGUAL     reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    AND             reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    OR              reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    XOR             reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    CONJUNCION      reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    DISYUNCION      reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    FIN_LINEA       reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)
    PARENTESIS_CIERRA reduce using rule 103 (operaciones_logicas -> ENTERO operad_logico ENTERO .)


state 203

    (104) operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .

    IGUALDAD        reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    IDENTIDAD       reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    DIFERENTE       reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    NO_IDENTIDAD    reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    MAYOR           reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    MENOR           reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    MENOR_IGUAL     reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    AND             reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    OR              reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    XOR             reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    CONJUNCION      reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    DISYUNCION      reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    FIN_LINEA       reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 104 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)


state 204

    (158) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (114) operaciones_logicas -> operaciones_logicas . operad_logico funcionuso
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    PARENTESIS_CIERRA shift and go to state 241
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 120

state 205

    (5) clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 242


state 206

    (134) sentenciasAnidadas -> instrucciones .
    (135) sentenciasAnidadas -> instrucciones . sentenciasAnidadas
    (134) sentenciasAnidadas -> . instrucciones
    (135) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    LLAVE_CIERRA    reduce using rule 134 (sentenciasAnidadas -> instrucciones .)
    RETURN          reduce using rule 134 (sentenciasAnidadas -> instrucciones .)
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    instrucciones                  shift and go to state 206
    sentenciasAnidadas             shift and go to state 243
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    decl_variable                  shift and go to state 20
    funcionuso                     shift and go to state 21
    salidas_posibles               shift and go to state 23
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 207

    (53) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .

    IGUALDAD        reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    IDENTIDAD       reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    DIFERENTE       reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    NO_IDENTIDAD    reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    MAYOR           reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    MAYOR_IGUAL     reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    MENOR           reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    MENOR_IGUAL     reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    AND             reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    OR              reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    XOR             reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    CONJUNCION      reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    DISYUNCION      reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    FIN_LINEA       reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 53 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA .)


state 208

    (54) funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .

    IGUALDAD        reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    IDENTIDAD       reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    DIFERENTE       reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    NO_IDENTIDAD    reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    MAYOR           reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    MAYOR_IGUAL     reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    MENOR           reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    MENOR_IGUAL     reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    AND             reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    OR              reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    XOR             reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    CONJUNCION      reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    DISYUNCION      reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    FIN_LINEA       reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 54 (funcionuso -> IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)


state 209

    (55) parametros -> SIGNO_DOLAR IDENTIFICADOR .
    (56) parametros -> SIGNO_DOLAR IDENTIFICADOR . COMA parametros

    PARENTESIS_CIERRA reduce using rule 55 (parametros -> SIGNO_DOLAR IDENTIFICADOR .)
    COMA            shift and go to state 244


state 210

    (35) asignacion -> decl_variable IGUAL valor FIN_LINEA .

    CLASS           reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    BREAK           reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ECHO            reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PRINT           reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    READLINE        reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FGETS           reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FSCANF          reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    NEW             reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ARRAY           reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FOR             reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FOREACH         reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    WHILE           reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FUNCTION        reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CONST           reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PRIVATE         reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PUBLIC          reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PROTECTED       reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    STATIC          reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    VAR             reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ENTERO          reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FLOTANTE        reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    BOOLEANO        reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    NEGACION        reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    INCREMENTO      reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    DECREMENTO      reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    IF              reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CADENA          reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    $end            reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    RETURN          reduce using rule 35 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)


state 211

    (37) asignacion -> decl_variable IGUAL explode FIN_LINEA .

    CLASS           reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    BREAK           reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    ECHO            reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    PRINT           reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    READLINE        reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FGETS           reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FSCANF          reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    NEW             reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    ARRAY           reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FOR             reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FOREACH         reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    WHILE           reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FUNCTION        reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    CONST           reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    PRIVATE         reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    PUBLIC          reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    PROTECTED       reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    STATIC          reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    VAR             reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    ENTERO          reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    FLOTANTE        reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    BOOLEANO        reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    NEGACION        reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    INCREMENTO      reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    DECREMENTO      reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    IF              reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    CADENA          reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    $end            reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)
    RETURN          reduce using rule 37 (asignacion -> decl_variable IGUAL explode FIN_LINEA .)


state 212

    (38) asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .

    CLASS           reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    BREAK           reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    ECHO            reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    PRINT           reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    READLINE        reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FGETS           reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FSCANF          reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    NEW             reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    ARRAY           reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FOR             reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FOREACH         reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    WHILE           reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FUNCTION        reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    CONST           reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    PRIVATE         reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    PUBLIC          reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    PROTECTED       reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    STATIC          reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    VAR             reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    ENTERO          reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    FLOTANTE        reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    BOOLEANO        reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    NEGACION        reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    INCREMENTO      reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    DECREMENTO      reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    IF              reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    CADENA          reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    $end            reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)
    RETURN          reduce using rule 38 (asignacion -> decl_variable IGUAL funcionuso FIN_LINEA .)


state 213

    (39) asignacion -> decl_variable IGUAL operaciones FIN_LINEA .

    CLASS           reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    BREAK           reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    ECHO            reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    PRINT           reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    READLINE        reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FGETS           reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FSCANF          reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    NEW             reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    ARRAY           reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FOR             reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FOREACH         reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    WHILE           reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FUNCTION        reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    CONST           reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    PRIVATE         reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    PUBLIC          reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    PROTECTED       reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    STATIC          reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    VAR             reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    ENTERO          reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    FLOTANTE        reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    BOOLEANO        reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    NEGACION        reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    INCREMENTO      reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    DECREMENTO      reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    IF              reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    CADENA          reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    $end            reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)
    RETURN          reduce using rule 39 (asignacion -> decl_variable IGUAL operaciones FIN_LINEA .)


state 214

    (63) explode -> EXPLODE PARENTESIS_ABRE . CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA
    (64) explode -> EXPLODE PARENTESIS_ABRE . CADENA COMA salidas_posibles PARENTESIS_CIERRA

    CADENA          shift and go to state 245


state 215

    (125) opAritVar -> paraCalculos combinarOp .

    FIN_LINEA       reduce using rule 125 (opAritVar -> paraCalculos combinarOp .)
    PARENTESIS_CIERRA reduce using rule 125 (opAritVar -> paraCalculos combinarOp .)


state 216

    (123) combinarOp -> operad_arit . paraCalculos
    (124) combinarOp -> operad_arit . paraCalculos combinarOp
    (120) paraCalculos -> . ENTERO
    (121) paraCalculos -> . FLOTANTE
    (122) paraCalculos -> . decl_variable
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    ENTERO          shift and go to state 247
    FLOTANTE        shift and go to state 248
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    paraCalculos                   shift and go to state 246
    decl_variable                  shift and go to state 249
    variable_tipo                  shift and go to state 96

state 217

    (163) concatenacion2 -> decl_variable PUNTO IGUAL datos . FIN_LINEA

    FIN_LINEA       shift and go to state 250


state 218

    (61) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE . valor PARENTESIS_CIERRA
    (62) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE . operaciones_arit PARENTESIS_CIERRA
    (40) valor -> . datos
    (41) valor -> . pila
    (42) valor -> . NULO
    (43) valor -> . decl_variable
    (44) valor -> . opAritVar
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (125) opAritVar -> . paraCalculos combinarOp
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (120) paraCalculos -> . ENTERO
    (121) paraCalculos -> . FLOTANTE
    (122) paraCalculos -> . decl_variable

    NULO            shift and go to state 154
    ENTERO          shift and go to state 255
    FLOTANTE        shift and go to state 256
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95
    NEW             shift and go to state 45
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 251
    valor                          shift and go to state 252
    operaciones_arit               shift and go to state 253
    datos                          shift and go to state 152
    pila                           shift and go to state 254
    opAritVar                      shift and go to state 155
    salidas_posibles               shift and go to state 171
    variable_tipo                  shift and go to state 96
    paraCalculos                   shift and go to state 160

state 219

    (60) poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 257


state 220

    (162) concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable . FIN_LINEA

    FIN_LINEA       shift and go to state 258


state 221

    (22) salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 259


state 222

    (24) ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 260


state 223

    (25) ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 261


state 224

    (26) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA . CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    CADENA          shift and go to state 262


state 225

    (59) pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 59 (pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 59 (pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 226

    (67) arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 67 (arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)


state 227

    (69) arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 69 (arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA .)


state 228

    (74) elementos -> datos COMA elementos .

    CORCHETE_CIERRA reduce using rule 74 (elementos -> datos COMA elementos .)
    PARENTESIS_CIERRA reduce using rule 74 (elementos -> datos COMA elementos .)


state 229

    (71) asociacion -> datos IGUAL MAYOR . datos
    (72) asociacion -> datos IGUAL MAYOR . datos COMA asociacion
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95

    datos                          shift and go to state 263

state 230

    (133) for -> FOR PARENTESIS_ABRE asignacion declaracionp . declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 29
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    declaracion_s                  shift and go to state 264
    decl_variable                  shift and go to state 265
    crecimiento                    shift and go to state 43
    variable_tipo                  shift and go to state 96

state 231

    (136) declaracionp -> decl_variable . valorc
    (137) valorc -> . menor
    (138) valorc -> . mayor
    (139) menor -> . MENOR_IGUAL ENTERO FIN_LINEA
    (140) menor -> . MENOR_IGUAL decl_variable FIN_LINEA
    (141) menor -> . MENOR ENTERO FIN_LINEA
    (142) menor -> . MENOR decl_variable FIN_LINEA
    (143) mayor -> . MAYOR_IGUAL ENTERO FIN_LINEA
    (144) mayor -> . MENOR_IGUAL decl_variable FIN_LINEA
    (145) mayor -> . MAYOR ENTERO FIN_LINEA
    (146) mayor -> . MAYOR decl_variable FIN_LINEA

    MENOR_IGUAL     shift and go to state 269
    MENOR           shift and go to state 270
    MAYOR_IGUAL     shift and go to state 271
    MAYOR           shift and go to state 272

    valorc                         shift and go to state 266
    menor                          shift and go to state 267
    mayor                          shift and go to state 268

state 232

    (153) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS . decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS . decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 273
    variable_tipo                  shift and go to state 96

state 233

    (161) if_else_fin -> ELSE LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 274


state 234

    (130) bloque -> sentenciasAnidadas . retorno
    (131) bloque -> sentenciasAnidadas .
    (151) retorno -> . RETURN salidas_posibles FIN_LINEA
    (152) retorno -> . RETURN operaciones FIN_LINEA

    LLAVE_CIERRA    reduce using rule 131 (bloque -> sentenciasAnidadas .)
    RETURN          shift and go to state 236

    retorno                        shift and go to state 275

state 235

    (132) bloque -> retorno .

    LLAVE_CIERRA    reduce using rule 132 (bloque -> retorno .)


state 236

    (151) retorno -> RETURN . salidas_posibles FIN_LINEA
    (152) retorno -> RETURN . operaciones FIN_LINEA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA

    ENTERO          shift and go to state 279
    FLOTANTE        shift and go to state 280
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 159
    SIGNO_DOLAR     shift and go to state 29
    NEGACION        shift and go to state 62
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    IDENTIFICADOR   shift and go to state 6

    salidas_posibles               shift and go to state 276
    operaciones                    shift and go to state 277
    datos                          shift and go to state 44
    decl_variable                  shift and go to state 278
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    variable_tipo                  shift and go to state 96
    funcionuso                     shift and go to state 21

state 237

    (159) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (160) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
    (114) operaciones_logicas -> operaciones_logicas . operad_logico funcionuso
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    PARENTESIS_CIERRA shift and go to state 281
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 120

state 238

    (155) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico . valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) valor -> . datos
    (41) valor -> . pila
    (42) valor -> . NULO
    (43) valor -> . decl_variable
    (44) valor -> . opAritVar
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (125) opAritVar -> . paraCalculos combinarOp
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (120) paraCalculos -> . ENTERO
    (121) paraCalculos -> . FLOTANTE
    (122) paraCalculos -> . decl_variable

    NULO            shift and go to state 154
    ENTERO          shift and go to state 255
    FLOTANTE        shift and go to state 256
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95
    NEW             shift and go to state 45
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 282
    valor                          shift and go to state 283
    datos                          shift and go to state 284
    pila                           shift and go to state 254
    opAritVar                      shift and go to state 155
    variable_tipo                  shift and go to state 96
    paraCalculos                   shift and go to state 160

state 239

    (49) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 285


state 240

    (50) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 286


state 241

    (158) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 287


state 242

    (5) clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    CLASS           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    $end            reduce using rule 5 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 243

    (135) sentenciasAnidadas -> instrucciones sentenciasAnidadas .

    LLAVE_CIERRA    reduce using rule 135 (sentenciasAnidadas -> instrucciones sentenciasAnidadas .)
    RETURN          reduce using rule 135 (sentenciasAnidadas -> instrucciones sentenciasAnidadas .)


state 244

    (56) parametros -> SIGNO_DOLAR IDENTIFICADOR COMA . parametros
    (55) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (56) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros

    SIGNO_DOLAR     shift and go to state 144

    parametros                     shift and go to state 288

state 245

    (63) explode -> EXPLODE PARENTESIS_ABRE CADENA . COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA
    (64) explode -> EXPLODE PARENTESIS_ABRE CADENA . COMA salidas_posibles PARENTESIS_CIERRA

    COMA            shift and go to state 289


state 246

    (123) combinarOp -> operad_arit paraCalculos .
    (124) combinarOp -> operad_arit paraCalculos . combinarOp
    (123) combinarOp -> . operad_arit paraCalculos
    (124) combinarOp -> . operad_arit paraCalculos combinarOp
    (75) operad_arit -> . SUMA
    (76) operad_arit -> . RESTA
    (77) operad_arit -> . MULTIPLICACION
    (78) operad_arit -> . DIVISION
    (79) operad_arit -> . POTENCIA
    (80) operad_arit -> . MODULO

    FIN_LINEA       reduce using rule 123 (combinarOp -> operad_arit paraCalculos .)
    PARENTESIS_CIERRA reduce using rule 123 (combinarOp -> operad_arit paraCalculos .)
    SUMA            shift and go to state 99
    RESTA           shift and go to state 100
    MULTIPLICACION  shift and go to state 101
    DIVISION        shift and go to state 102
    POTENCIA        shift and go to state 103
    MODULO          shift and go to state 104

    operad_arit                    shift and go to state 216
    combinarOp                     shift and go to state 290

state 247

    (120) paraCalculos -> ENTERO .

    SUMA            reduce using rule 120 (paraCalculos -> ENTERO .)
    RESTA           reduce using rule 120 (paraCalculos -> ENTERO .)
    MULTIPLICACION  reduce using rule 120 (paraCalculos -> ENTERO .)
    DIVISION        reduce using rule 120 (paraCalculos -> ENTERO .)
    POTENCIA        reduce using rule 120 (paraCalculos -> ENTERO .)
    MODULO          reduce using rule 120 (paraCalculos -> ENTERO .)
    FIN_LINEA       reduce using rule 120 (paraCalculos -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 120 (paraCalculos -> ENTERO .)


state 248

    (121) paraCalculos -> FLOTANTE .

    SUMA            reduce using rule 121 (paraCalculos -> FLOTANTE .)
    RESTA           reduce using rule 121 (paraCalculos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 121 (paraCalculos -> FLOTANTE .)
    DIVISION        reduce using rule 121 (paraCalculos -> FLOTANTE .)
    POTENCIA        reduce using rule 121 (paraCalculos -> FLOTANTE .)
    MODULO          reduce using rule 121 (paraCalculos -> FLOTANTE .)
    FIN_LINEA       reduce using rule 121 (paraCalculos -> FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 121 (paraCalculos -> FLOTANTE .)


state 249

    (122) paraCalculos -> decl_variable .

    SUMA            reduce using rule 122 (paraCalculos -> decl_variable .)
    RESTA           reduce using rule 122 (paraCalculos -> decl_variable .)
    MULTIPLICACION  reduce using rule 122 (paraCalculos -> decl_variable .)
    DIVISION        reduce using rule 122 (paraCalculos -> decl_variable .)
    POTENCIA        reduce using rule 122 (paraCalculos -> decl_variable .)
    MODULO          reduce using rule 122 (paraCalculos -> decl_variable .)
    FIN_LINEA       reduce using rule 122 (paraCalculos -> decl_variable .)
    PARENTESIS_CIERRA reduce using rule 122 (paraCalculos -> decl_variable .)


state 250

    (163) concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .

    CLASS           reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    BREAK           reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    ECHO            reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    PRINT           reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    READLINE        reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    FGETS           reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    FSCANF          reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    NEW             reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    ARRAY           reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    FOR             reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    FOREACH         reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    WHILE           reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    FUNCTION        reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    CONST           reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    PRIVATE         reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    PUBLIC          reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    PROTECTED       reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    STATIC          reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    VAR             reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    ENTERO          reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    FLOTANTE        reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    BOOLEANO        reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    NEGACION        reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    INCREMENTO      reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    DECREMENTO      reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    IF              reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    CADENA          reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    $end            reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)
    RETURN          reduce using rule 163 (concatenacion2 -> decl_variable PUNTO IGUAL datos FIN_LINEA .)


state 251

    (43) valor -> decl_variable .
    (20) salidas_posibles -> decl_variable .
    (122) paraCalculos -> decl_variable .

  ! reduce/reduce conflict for SUMA resolved using rule 20 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 20 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for DIVISION resolved using rule 20 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 20 (salidas_posibles -> decl_variable .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (salidas_posibles -> decl_variable .)
    PARENTESIS_CIERRA reduce using rule 43 (valor -> decl_variable .)
    SUMA            reduce using rule 20 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 20 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 20 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 20 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 20 (salidas_posibles -> decl_variable .)

  ! SUMA            [ reduce using rule 122 (paraCalculos -> decl_variable .) ]
  ! RESTA           [ reduce using rule 122 (paraCalculos -> decl_variable .) ]
  ! MULTIPLICACION  [ reduce using rule 122 (paraCalculos -> decl_variable .) ]
  ! DIVISION        [ reduce using rule 122 (paraCalculos -> decl_variable .) ]
  ! POTENCIA        [ reduce using rule 122 (paraCalculos -> decl_variable .) ]
  ! MODULO          [ reduce using rule 122 (paraCalculos -> decl_variable .) ]


state 252

    (61) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 291


state 253

    (62) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 292


state 254

    (41) valor -> pila .

    PARENTESIS_CIERRA reduce using rule 41 (valor -> pila .)


state 255

    (45) datos -> ENTERO .
    (120) paraCalculos -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 45 (datos -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 45 (datos -> ENTERO .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 45 (datos -> ENTERO .)
  ! reduce/reduce conflict for DIVISION resolved using rule 45 (datos -> ENTERO .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 45 (datos -> ENTERO .)
  ! reduce/reduce conflict for MODULO resolved using rule 45 (datos -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 45 (datos -> ENTERO .)
    SUMA            reduce using rule 45 (datos -> ENTERO .)
    RESTA           reduce using rule 45 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 45 (datos -> ENTERO .)
    DIVISION        reduce using rule 45 (datos -> ENTERO .)
    POTENCIA        reduce using rule 45 (datos -> ENTERO .)
    MODULO          reduce using rule 45 (datos -> ENTERO .)

  ! SUMA            [ reduce using rule 120 (paraCalculos -> ENTERO .) ]
  ! RESTA           [ reduce using rule 120 (paraCalculos -> ENTERO .) ]
  ! MULTIPLICACION  [ reduce using rule 120 (paraCalculos -> ENTERO .) ]
  ! DIVISION        [ reduce using rule 120 (paraCalculos -> ENTERO .) ]
  ! POTENCIA        [ reduce using rule 120 (paraCalculos -> ENTERO .) ]
  ! MODULO          [ reduce using rule 120 (paraCalculos -> ENTERO .) ]


state 256

    (46) datos -> FLOTANTE .
    (121) paraCalculos -> FLOTANTE .

  ! reduce/reduce conflict for SUMA resolved using rule 46 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for RESTA resolved using rule 46 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 46 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for DIVISION resolved using rule 46 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 46 (datos -> FLOTANTE .)
  ! reduce/reduce conflict for MODULO resolved using rule 46 (datos -> FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 46 (datos -> FLOTANTE .)
    SUMA            reduce using rule 46 (datos -> FLOTANTE .)
    RESTA           reduce using rule 46 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 46 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 46 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 46 (datos -> FLOTANTE .)
    MODULO          reduce using rule 46 (datos -> FLOTANTE .)

  ! SUMA            [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]
  ! RESTA           [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]
  ! MULTIPLICACION  [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]
  ! DIVISION        [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]
  ! POTENCIA        [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]
  ! MODULO          [ reduce using rule 121 (paraCalculos -> FLOTANTE .) ]


state 257

    (60) poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 60 (poppila -> decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 258

    (162) concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .

    CLASS           reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    BREAK           reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    ECHO            reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    PRINT           reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    READLINE        reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    FGETS           reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    FSCANF          reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    NEW             reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    ARRAY           reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    FOR             reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    FOREACH         reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    WHILE           reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    FUNCTION        reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    CONST           reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    PRIVATE         reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    PUBLIC          reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    PROTECTED       reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    STATIC          reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    VAR             reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    ENTERO          reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    FLOTANTE        reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    BOOLEANO        reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    NEGACION        reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    INCREMENTO      reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    DECREMENTO      reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    IF              reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    CADENA          reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    $end            reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)
    RETURN          reduce using rule 162 (concadenacion1 -> ECHO salidas_posibles PUNTO decl_variable FIN_LINEA .)


state 259

    (22) salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    RETURN          reduce using rule 22 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)


state 260

    (24) ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    RETURN          reduce using rule 24 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)


state 261

    (25) ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    RETURN          reduce using rule 25 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)


state 262

    (26) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA . COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    COMA            shift and go to state 293


state 263

    (71) asociacion -> datos IGUAL MAYOR datos .
    (72) asociacion -> datos IGUAL MAYOR datos . COMA asociacion

    CORCHETE_CIERRA reduce using rule 71 (asociacion -> datos IGUAL MAYOR datos .)
    PARENTESIS_CIERRA reduce using rule 71 (asociacion -> datos IGUAL MAYOR datos .)
    COMA            shift and go to state 294


state 264

    (133) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 295


state 265

    (147) declaracion_s -> decl_variable . crecimiento
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO

    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64

    crecimiento                    shift and go to state 73

state 266

    (136) declaracionp -> decl_variable valorc .

    SIGNO_DOLAR     reduce using rule 136 (declaracionp -> decl_variable valorc .)
    INCREMENTO      reduce using rule 136 (declaracionp -> decl_variable valorc .)
    DECREMENTO      reduce using rule 136 (declaracionp -> decl_variable valorc .)
    CONST           reduce using rule 136 (declaracionp -> decl_variable valorc .)
    PRIVATE         reduce using rule 136 (declaracionp -> decl_variable valorc .)
    PUBLIC          reduce using rule 136 (declaracionp -> decl_variable valorc .)
    PROTECTED       reduce using rule 136 (declaracionp -> decl_variable valorc .)
    STATIC          reduce using rule 136 (declaracionp -> decl_variable valorc .)
    VAR             reduce using rule 136 (declaracionp -> decl_variable valorc .)


state 267

    (137) valorc -> menor .

    SIGNO_DOLAR     reduce using rule 137 (valorc -> menor .)
    INCREMENTO      reduce using rule 137 (valorc -> menor .)
    DECREMENTO      reduce using rule 137 (valorc -> menor .)
    CONST           reduce using rule 137 (valorc -> menor .)
    PRIVATE         reduce using rule 137 (valorc -> menor .)
    PUBLIC          reduce using rule 137 (valorc -> menor .)
    PROTECTED       reduce using rule 137 (valorc -> menor .)
    STATIC          reduce using rule 137 (valorc -> menor .)
    VAR             reduce using rule 137 (valorc -> menor .)


state 268

    (138) valorc -> mayor .

    SIGNO_DOLAR     reduce using rule 138 (valorc -> mayor .)
    INCREMENTO      reduce using rule 138 (valorc -> mayor .)
    DECREMENTO      reduce using rule 138 (valorc -> mayor .)
    CONST           reduce using rule 138 (valorc -> mayor .)
    PRIVATE         reduce using rule 138 (valorc -> mayor .)
    PUBLIC          reduce using rule 138 (valorc -> mayor .)
    PROTECTED       reduce using rule 138 (valorc -> mayor .)
    STATIC          reduce using rule 138 (valorc -> mayor .)
    VAR             reduce using rule 138 (valorc -> mayor .)


state 269

    (139) menor -> MENOR_IGUAL . ENTERO FIN_LINEA
    (140) menor -> MENOR_IGUAL . decl_variable FIN_LINEA
    (144) mayor -> MENOR_IGUAL . decl_variable FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    ENTERO          shift and go to state 296
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 297
    variable_tipo                  shift and go to state 96

state 270

    (141) menor -> MENOR . ENTERO FIN_LINEA
    (142) menor -> MENOR . decl_variable FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    ENTERO          shift and go to state 298
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 299
    variable_tipo                  shift and go to state 96

state 271

    (143) mayor -> MAYOR_IGUAL . ENTERO FIN_LINEA

    ENTERO          shift and go to state 300


state 272

    (145) mayor -> MAYOR . ENTERO FIN_LINEA
    (146) mayor -> MAYOR . decl_variable FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    ENTERO          shift and go to state 301
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 302
    variable_tipo                  shift and go to state 96

state 273

    (153) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable . IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 303
    IGUAL           shift and go to state 304


state 274

    (161) if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .

    CLASS           reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    $end            reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    RETURN          reduce using rule 161 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)


state 275

    (130) bloque -> sentenciasAnidadas retorno .

    LLAVE_CIERRA    reduce using rule 130 (bloque -> sentenciasAnidadas retorno .)


state 276

    (151) retorno -> RETURN salidas_posibles . FIN_LINEA
    (99) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (100) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (101) operaciones_bits -> salidas_posibles . operand_bits salidas_posibles
    (75) operad_arit -> . SUMA
    (76) operad_arit -> . RESTA
    (77) operad_arit -> . MULTIPLICACION
    (78) operad_arit -> . DIVISION
    (79) operad_arit -> . POTENCIA
    (80) operad_arit -> . MODULO
    (94) operand_bits -> . CONJUNCIONBITS
    (95) operand_bits -> . DISYUNCIONBITS
    (96) operand_bits -> . DISYUNCION_EXC
    (97) operand_bits -> . DESPLAZAR_BITS_IZQ
    (98) operand_bits -> . DESPLAZAR_BITS_DER

    FIN_LINEA       shift and go to state 305
    SUMA            shift and go to state 99
    RESTA           shift and go to state 100
    MULTIPLICACION  shift and go to state 101
    DIVISION        shift and go to state 102
    POTENCIA        shift and go to state 103
    MODULO          shift and go to state 104
    CONJUNCIONBITS  shift and go to state 105
    DISYUNCIONBITS  shift and go to state 106
    DISYUNCION_EXC  shift and go to state 107
    DESPLAZAR_BITS_IZQ shift and go to state 108
    DESPLAZAR_BITS_DER shift and go to state 109

    operad_arit                    shift and go to state 97
    operand_bits                   shift and go to state 98

state 277

    (152) retorno -> RETURN operaciones . FIN_LINEA

    FIN_LINEA       shift and go to state 306


state 278

    (20) salidas_posibles -> decl_variable .
    (106) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (107) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (108) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (61) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> decl_variable . LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> decl_variable . LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    FIN_LINEA       reduce using rule 20 (salidas_posibles -> decl_variable .)
    SUMA            reduce using rule 20 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 20 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 20 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 20 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 20 (salidas_posibles -> decl_variable .)
    CONJUNCIONBITS  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DISYUNCIONBITS  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DISYUNCION_EXC  reduce using rule 20 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_IZQ reduce using rule 20 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_DER reduce using rule 20 (salidas_posibles -> decl_variable .)
    LAMBDA          shift and go to state 76
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 75

state 279

    (45) datos -> ENTERO .
    (103) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    FIN_LINEA       reduce using rule 45 (datos -> ENTERO .)
    SUMA            reduce using rule 45 (datos -> ENTERO .)
    RESTA           reduce using rule 45 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 45 (datos -> ENTERO .)
    DIVISION        reduce using rule 45 (datos -> ENTERO .)
    POTENCIA        reduce using rule 45 (datos -> ENTERO .)
    MODULO          reduce using rule 45 (datos -> ENTERO .)
    CONJUNCIONBITS  reduce using rule 45 (datos -> ENTERO .)
    DISYUNCIONBITS  reduce using rule 45 (datos -> ENTERO .)
    DISYUNCION_EXC  reduce using rule 45 (datos -> ENTERO .)
    DESPLAZAR_BITS_IZQ reduce using rule 45 (datos -> ENTERO .)
    DESPLAZAR_BITS_DER reduce using rule 45 (datos -> ENTERO .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 137

state 280

    (46) datos -> FLOTANTE .
    (104) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (81) operad_logico -> . IGUALDAD
    (82) operad_logico -> . IDENTIDAD
    (83) operad_logico -> . DIFERENTE
    (84) operad_logico -> . NO_IDENTIDAD
    (85) operad_logico -> . MAYOR
    (86) operad_logico -> . MAYOR_IGUAL
    (87) operad_logico -> . MENOR
    (88) operad_logico -> . MENOR_IGUAL
    (89) operad_logico -> . AND
    (90) operad_logico -> . OR
    (91) operad_logico -> . XOR
    (92) operad_logico -> . CONJUNCION
    (93) operad_logico -> . DISYUNCION

    FIN_LINEA       reduce using rule 46 (datos -> FLOTANTE .)
    SUMA            reduce using rule 46 (datos -> FLOTANTE .)
    RESTA           reduce using rule 46 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 46 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 46 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 46 (datos -> FLOTANTE .)
    MODULO          reduce using rule 46 (datos -> FLOTANTE .)
    CONJUNCIONBITS  reduce using rule 46 (datos -> FLOTANTE .)
    DISYUNCIONBITS  reduce using rule 46 (datos -> FLOTANTE .)
    DISYUNCION_EXC  reduce using rule 46 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_IZQ reduce using rule 46 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_DER reduce using rule 46 (datos -> FLOTANTE .)
    IGUALDAD        shift and go to state 77
    IDENTIDAD       shift and go to state 78
    DIFERENTE       shift and go to state 79
    NO_IDENTIDAD    shift and go to state 80
    MAYOR           shift and go to state 81
    MAYOR_IGUAL     shift and go to state 82
    MENOR           shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    XOR             shift and go to state 87
    CONJUNCION      shift and go to state 88
    DISYUNCION      shift and go to state 89

    operad_logico                  shift and go to state 138

state 281

    (159) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA
    (160) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    LLAVE_ABRE      shift and go to state 307


state 282

    (43) valor -> decl_variable .
    (122) paraCalculos -> decl_variable .

    PARENTESIS_CIERRA reduce using rule 43 (valor -> decl_variable .)
    SUMA            reduce using rule 122 (paraCalculos -> decl_variable .)
    RESTA           reduce using rule 122 (paraCalculos -> decl_variable .)
    MULTIPLICACION  reduce using rule 122 (paraCalculos -> decl_variable .)
    DIVISION        reduce using rule 122 (paraCalculos -> decl_variable .)
    POTENCIA        reduce using rule 122 (paraCalculos -> decl_variable .)
    MODULO          reduce using rule 122 (paraCalculos -> decl_variable .)


state 283

    (155) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 308


state 284

    (40) valor -> datos .

    PARENTESIS_CIERRA reduce using rule 40 (valor -> datos .)


state 285

    (49) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (130) bloque -> . sentenciasAnidadas retorno
    (131) bloque -> . sentenciasAnidadas
    (132) bloque -> . retorno
    (134) sentenciasAnidadas -> . instrucciones
    (135) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (151) retorno -> . RETURN salidas_posibles FIN_LINEA
    (152) retorno -> . RETURN operaciones FIN_LINEA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    RETURN          shift and go to state 236
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    bloque                         shift and go to state 309
    sentenciasAnidadas             shift and go to state 234
    retorno                        shift and go to state 235
    instrucciones                  shift and go to state 206
    salidas_posibles               shift and go to state 23
    operaciones                    shift and go to state 15
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    decl_variable                  shift and go to state 20
    funcionuso                     shift and go to state 21
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 286

    (50) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 310


state 287

    (158) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (130) bloque -> . sentenciasAnidadas retorno
    (131) bloque -> . sentenciasAnidadas
    (132) bloque -> . retorno
    (134) sentenciasAnidadas -> . instrucciones
    (135) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (151) retorno -> . RETURN salidas_posibles FIN_LINEA
    (152) retorno -> . RETURN operaciones FIN_LINEA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    RETURN          shift and go to state 236
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    operaciones_logicas            shift and go to state 38
    bloque                         shift and go to state 311
    sentenciasAnidadas             shift and go to state 234
    retorno                        shift and go to state 235
    instrucciones                  shift and go to state 206
    salidas_posibles               shift and go to state 23
    operaciones                    shift and go to state 15
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    decl_variable                  shift and go to state 20
    funcionuso                     shift and go to state 21
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 288

    (56) parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros .

    PARENTESIS_CIERRA reduce using rule 56 (parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros .)


state 289

    (63) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA . salidas_posibles COMA ENTERO PARENTESIS_CIERRA
    (64) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA . salidas_posibles PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95
    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    salidas_posibles               shift and go to state 312
    datos                          shift and go to state 44
    decl_variable                  shift and go to state 92
    variable_tipo                  shift and go to state 96

state 290

    (124) combinarOp -> operad_arit paraCalculos combinarOp .

    FIN_LINEA       reduce using rule 124 (combinarOp -> operad_arit paraCalculos combinarOp .)
    PARENTESIS_CIERRA reduce using rule 124 (combinarOp -> operad_arit paraCalculos combinarOp .)


state 291

    (61) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 61 (pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA .)


state 292

    (62) pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 62 (pushpila -> decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA .)


state 293

    (26) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA . SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    SIGNO_DOLAR     shift and go to state 313


state 294

    (72) asociacion -> datos IGUAL MAYOR datos COMA . asociacion
    (71) asociacion -> . datos IGUAL MAYOR datos
    (72) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    CADENA          shift and go to state 26
    BOOLEANO        shift and go to state 95

    datos                          shift and go to state 314
    asociacion                     shift and go to state 315

state 295

    (133) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 316


state 296

    (139) menor -> MENOR_IGUAL ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 317


state 297

    (140) menor -> MENOR_IGUAL decl_variable . FIN_LINEA
    (144) mayor -> MENOR_IGUAL decl_variable . FIN_LINEA

    FIN_LINEA       shift and go to state 318


state 298

    (141) menor -> MENOR ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 319


state 299

    (142) menor -> MENOR decl_variable . FIN_LINEA

    FIN_LINEA       shift and go to state 320


state 300

    (143) mayor -> MAYOR_IGUAL ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 321


state 301

    (145) mayor -> MAYOR ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 322


state 302

    (146) mayor -> MAYOR decl_variable . FIN_LINEA

    FIN_LINEA       shift and go to state 323


state 303

    (153) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 324


state 304

    (154) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL . MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    MAYOR           shift and go to state 325


state 305

    (151) retorno -> RETURN salidas_posibles FIN_LINEA .

    LLAVE_CIERRA    reduce using rule 151 (retorno -> RETURN salidas_posibles FIN_LINEA .)


state 306

    (152) retorno -> RETURN operaciones FIN_LINEA .

    LLAVE_CIERRA    reduce using rule 152 (retorno -> RETURN operaciones FIN_LINEA .)


state 307

    (159) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (160) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA if_else_cuerpo
    (130) bloque -> . sentenciasAnidadas retorno
    (131) bloque -> . sentenciasAnidadas
    (132) bloque -> . retorno
    (134) sentenciasAnidadas -> . instrucciones
    (135) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (151) retorno -> . RETURN salidas_posibles FIN_LINEA
    (152) retorno -> . RETURN operaciones FIN_LINEA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    RETURN          shift and go to state 236
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    operaciones_logicas            shift and go to state 38
    bloque                         shift and go to state 326
    sentenciasAnidadas             shift and go to state 234
    retorno                        shift and go to state 235
    instrucciones                  shift and go to state 206
    salidas_posibles               shift and go to state 23
    operaciones                    shift and go to state 15
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    decl_variable                  shift and go to state 20
    funcionuso                     shift and go to state 21
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 308

    (155) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 327


state 309

    (49) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 328


state 310

    (50) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (130) bloque -> . sentenciasAnidadas retorno
    (131) bloque -> . sentenciasAnidadas
    (132) bloque -> . retorno
    (134) sentenciasAnidadas -> . instrucciones
    (135) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (151) retorno -> . RETURN salidas_posibles FIN_LINEA
    (152) retorno -> . RETURN operaciones FIN_LINEA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    RETURN          shift and go to state 236
    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    bloque                         shift and go to state 329
    sentenciasAnidadas             shift and go to state 234
    retorno                        shift and go to state 235
    instrucciones                  shift and go to state 206
    salidas_posibles               shift and go to state 23
    operaciones                    shift and go to state 15
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    decl_variable                  shift and go to state 20
    funcionuso                     shift and go to state 21
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 311

    (158) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 330


state 312

    (63) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles . COMA ENTERO PARENTESIS_CIERRA
    (64) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles . PARENTESIS_CIERRA

    COMA            shift and go to state 331
    PARENTESIS_CIERRA shift and go to state 332


state 313

    (26) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR . IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    IDENTIFICADOR   shift and go to state 333


state 314

    (71) asociacion -> datos . IGUAL MAYOR datos
    (72) asociacion -> datos . IGUAL MAYOR datos COMA asociacion

    IGUAL           shift and go to state 193


state 315

    (72) asociacion -> datos IGUAL MAYOR datos COMA asociacion .

    CORCHETE_CIERRA reduce using rule 72 (asociacion -> datos IGUAL MAYOR datos COMA asociacion .)
    PARENTESIS_CIERRA reduce using rule 72 (asociacion -> datos IGUAL MAYOR datos COMA asociacion .)


state 316

    (133) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (134) sentenciasAnidadas -> . instrucciones
    (135) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    asignacion                     shift and go to state 7
    declaracion_s                  shift and go to state 16
    sentenciasAnidadas             shift and go to state 334
    instrucciones                  shift and go to state 206
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    decl_variable                  shift and go to state 20
    funcionuso                     shift and go to state 21
    salidas_posibles               shift and go to state 23
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 317

    (139) menor -> MENOR_IGUAL ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 139 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 139 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 139 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    CONST           reduce using rule 139 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 139 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 139 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 139 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    STATIC          reduce using rule 139 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    VAR             reduce using rule 139 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)


state 318

    (140) menor -> MENOR_IGUAL decl_variable FIN_LINEA .
    (144) mayor -> MENOR_IGUAL decl_variable FIN_LINEA .

  ! reduce/reduce conflict for SIGNO_DOLAR resolved using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for INCREMENTO resolved using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for CONST resolved using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for STATIC resolved using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
  ! reduce/reduce conflict for VAR resolved using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    INCREMENTO      reduce using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    DECREMENTO      reduce using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    CONST           reduce using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    PRIVATE         reduce using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    PUBLIC          reduce using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    PROTECTED       reduce using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    STATIC          reduce using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)
    VAR             reduce using rule 140 (menor -> MENOR_IGUAL decl_variable FIN_LINEA .)

  ! SIGNO_DOLAR     [ reduce using rule 144 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! INCREMENTO      [ reduce using rule 144 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! DECREMENTO      [ reduce using rule 144 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! CONST           [ reduce using rule 144 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! PRIVATE         [ reduce using rule 144 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! PUBLIC          [ reduce using rule 144 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! PROTECTED       [ reduce using rule 144 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! STATIC          [ reduce using rule 144 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]
  ! VAR             [ reduce using rule 144 (mayor -> MENOR_IGUAL decl_variable FIN_LINEA .) ]


state 319

    (141) menor -> MENOR ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 141 (menor -> MENOR ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 141 (menor -> MENOR ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 141 (menor -> MENOR ENTERO FIN_LINEA .)
    CONST           reduce using rule 141 (menor -> MENOR ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 141 (menor -> MENOR ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 141 (menor -> MENOR ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 141 (menor -> MENOR ENTERO FIN_LINEA .)
    STATIC          reduce using rule 141 (menor -> MENOR ENTERO FIN_LINEA .)
    VAR             reduce using rule 141 (menor -> MENOR ENTERO FIN_LINEA .)


state 320

    (142) menor -> MENOR decl_variable FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 142 (menor -> MENOR decl_variable FIN_LINEA .)
    INCREMENTO      reduce using rule 142 (menor -> MENOR decl_variable FIN_LINEA .)
    DECREMENTO      reduce using rule 142 (menor -> MENOR decl_variable FIN_LINEA .)
    CONST           reduce using rule 142 (menor -> MENOR decl_variable FIN_LINEA .)
    PRIVATE         reduce using rule 142 (menor -> MENOR decl_variable FIN_LINEA .)
    PUBLIC          reduce using rule 142 (menor -> MENOR decl_variable FIN_LINEA .)
    PROTECTED       reduce using rule 142 (menor -> MENOR decl_variable FIN_LINEA .)
    STATIC          reduce using rule 142 (menor -> MENOR decl_variable FIN_LINEA .)
    VAR             reduce using rule 142 (menor -> MENOR decl_variable FIN_LINEA .)


state 321

    (143) mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 143 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 143 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 143 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    CONST           reduce using rule 143 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 143 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 143 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 143 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    STATIC          reduce using rule 143 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    VAR             reduce using rule 143 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)


state 322

    (145) mayor -> MAYOR ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 145 (mayor -> MAYOR ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 145 (mayor -> MAYOR ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 145 (mayor -> MAYOR ENTERO FIN_LINEA .)
    CONST           reduce using rule 145 (mayor -> MAYOR ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 145 (mayor -> MAYOR ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 145 (mayor -> MAYOR ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 145 (mayor -> MAYOR ENTERO FIN_LINEA .)
    STATIC          reduce using rule 145 (mayor -> MAYOR ENTERO FIN_LINEA .)
    VAR             reduce using rule 145 (mayor -> MAYOR ENTERO FIN_LINEA .)


state 323

    (146) mayor -> MAYOR decl_variable FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 146 (mayor -> MAYOR decl_variable FIN_LINEA .)
    INCREMENTO      reduce using rule 146 (mayor -> MAYOR decl_variable FIN_LINEA .)
    DECREMENTO      reduce using rule 146 (mayor -> MAYOR decl_variable FIN_LINEA .)
    CONST           reduce using rule 146 (mayor -> MAYOR decl_variable FIN_LINEA .)
    PRIVATE         reduce using rule 146 (mayor -> MAYOR decl_variable FIN_LINEA .)
    PUBLIC          reduce using rule 146 (mayor -> MAYOR decl_variable FIN_LINEA .)
    PROTECTED       reduce using rule 146 (mayor -> MAYOR decl_variable FIN_LINEA .)
    STATIC          reduce using rule 146 (mayor -> MAYOR decl_variable FIN_LINEA .)
    VAR             reduce using rule 146 (mayor -> MAYOR decl_variable FIN_LINEA .)


state 324

    (153) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (134) sentenciasAnidadas -> . instrucciones
    (135) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    decl_variable                  shift and go to state 20
    sentenciasAnidadas             shift and go to state 335
    instrucciones                  shift and go to state 206
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    funcionuso                     shift and go to state 21
    salidas_posibles               shift and go to state 23
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 325

    (154) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR . decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 29
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58

    decl_variable                  shift and go to state 336
    variable_tipo                  shift and go to state 96

state 326

    (159) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA
    (160) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA if_else_cuerpo

    LLAVE_CIERRA    shift and go to state 337


state 327

    (155) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    decl_variable                  shift and go to state 20
    instrucciones                  shift and go to state 338
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    funcionuso                     shift and go to state 21
    salidas_posibles               shift and go to state 23
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 328

    (49) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    CLASS           reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    $end            reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    RETURN          reduce using rule 49 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 329

    (50) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 339


state 330

    (158) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    ELSE            reduce using rule 158 (if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ELSEIF          reduce using rule 158 (if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 331

    (63) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA . ENTERO PARENTESIS_CIERRA

    ENTERO          shift and go to state 340


state 332

    (64) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 64 (explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles PARENTESIS_CIERRA .)


state 333

    (26) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 341


state 334

    (133) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 342


state 335

    (153) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 343


state 336

    (154) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 344


state 337

    (159) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .
    (160) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA . if_else_cuerpo
    (159) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (160) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    ELSE            reduce using rule 159 (if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ELSEIF          shift and go to state 134

    if_else_cuerpo                 shift and go to state 345

state 338

    (155) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 346


state 339

    (50) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    CLASS           reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BREAK           reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    $end            reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    RETURN          reduce using rule 50 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 340

    (63) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 347


state 341

    (26) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 348


state 342

    (133) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    CLASS           reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    $end            reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    RETURN          reduce using rule 133 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 343

    (153) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    CLASS           reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    $end            reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    RETURN          reduce using rule 153 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 344

    (154) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 349


state 345

    (160) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo .

    ELSE            reduce using rule 160 (if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo .)


state 346

    (155) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    CLASS           reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ECHO            reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    READLINE        reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FGETS           reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FSCANF          reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEW             reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ARRAY           reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOREACH         reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNCTION        reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONST           reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRIVATE         reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PUBLIC          reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PROTECTED       reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STATIC          reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ENTERO          reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEGACION        reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CADENA          reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 155 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 347

    (63) explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 63 (explode -> EXPLODE PARENTESIS_ABRE CADENA COMA salidas_posibles COMA ENTERO PARENTESIS_CIERRA .)


state 348

    (26) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .

    CLASS           reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    BREAK           reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    INCREMENTO      reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    DECREMENTO      reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    IDENTIFICADOR   reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    $end            reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    RETURN          reduce using rule 26 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)


state 349

    (154) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (134) sentenciasAnidadas -> . instrucciones
    (135) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (6) instrucciones -> . asignacion
    (7) instrucciones -> . salida
    (8) instrucciones -> . ingreso
    (9) instrucciones -> . estructuras_datos
    (10) instrucciones -> . estructuras_control
    (11) instrucciones -> . funcionglobal
    (12) instrucciones -> . COMENTARIO_LINEA
    (13) instrucciones -> . COMENTARIO_BLOQUE
    (14) instrucciones -> . operaciones FIN_LINEA
    (15) instrucciones -> . declaracion_s FIN_LINEA
    (16) instrucciones -> . BREAK FIN_LINEA
    (17) instrucciones -> . concadenacion1
    (18) instrucciones -> . concatenacion2
    (35) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (36) asignacion -> . decl_variable IGUAL estructuras_datos
    (37) asignacion -> . decl_variable IGUAL explode FIN_LINEA
    (38) asignacion -> . decl_variable IGUAL funcionuso FIN_LINEA
    (39) asignacion -> . decl_variable IGUAL operaciones FIN_LINEA
    (21) salida -> . ECHO salidas_posibles FIN_LINEA
    (22) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (23) salida -> . PRINT salidas_posibles FIN_LINEA
    (24) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (25) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (26) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (57) estructuras_datos -> . pila FIN_LINEA
    (58) estructuras_datos -> . arreglo FIN_LINEA
    (126) estructuras_control -> . for
    (127) estructuras_control -> . foreach
    (128) estructuras_control -> . if_else
    (129) estructuras_control -> . while
    (51) funcionglobal -> . funcion
    (52) funcionglobal -> . variable_tipo funcion
    (115) operaciones -> . operaciones_logicas
    (116) operaciones -> . operaciones_arit
    (117) operaciones -> . operaciones_bits
    (118) operaciones -> . pushpila
    (119) operaciones -> . poppila
    (147) declaracion_s -> . decl_variable crecimiento
    (148) declaracion_s -> . crecimiento decl_variable
    (162) concadenacion1 -> . ECHO salidas_posibles PUNTO decl_variable FIN_LINEA
    (163) concatenacion2 -> . decl_variable PUNTO IGUAL datos FIN_LINEA
    (33) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (34) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (59) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (65) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (66) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (67) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (68) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (69) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (70) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (133) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (153) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (154) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (156) if_else -> . if_else_inicio if_else_fin
    (157) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (155) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (49) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (50) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (27) variable_tipo -> . CONST
    (28) variable_tipo -> . PRIVATE
    (29) variable_tipo -> . PUBLIC
    (30) variable_tipo -> . PROTECTED
    (31) variable_tipo -> . STATIC
    (32) variable_tipo -> . VAR
    (103) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (104) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (105) operaciones_logicas -> . BOOLEANO
    (106) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (107) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (108) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (109) operaciones_logicas -> . operaciones_arit operad_logico ENTERO
    (110) operaciones_logicas -> . operaciones_arit operad_logico FLOTANTE
    (111) operaciones_logicas -> . funcionuso
    (112) operaciones_logicas -> . funcionuso operad_logico funcionuso
    (113) operaciones_logicas -> . funcionuso operad_logico operaciones_logicas
    (114) operaciones_logicas -> . operaciones_logicas operad_logico funcionuso
    (99) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (100) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (101) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (102) operaciones_bits -> . NEGACION salidas_posibles
    (61) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE valor PARENTESIS_CIERRA
    (62) pushpila -> . decl_variable LAMBDA PUSH PARENTESIS_ABRE operaciones_arit PARENTESIS_CIERRA
    (60) poppila -> . decl_variable LAMBDA POP PARENTESIS_ABRE PARENTESIS_CIERRA
    (149) crecimiento -> . INCREMENTO
    (150) crecimiento -> . DECREMENTO
    (158) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (53) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA
    (54) funcionuso -> . IDENTIFICADOR PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (19) salidas_posibles -> . datos
    (20) salidas_posibles -> . decl_variable
    (45) datos -> . ENTERO
    (46) datos -> . FLOTANTE
    (47) datos -> . CADENA
    (48) datos -> . BOOLEANO

    COMENTARIO_LINEA shift and go to state 13
    COMENTARIO_BLOQUE shift and go to state 14
    BREAK           shift and go to state 17
    ECHO            shift and go to state 22
    PRINT           shift and go to state 24
    READLINE        shift and go to state 25
    FGETS           shift and go to state 27
    FSCANF          shift and go to state 28
    SIGNO_DOLAR     shift and go to state 29
    NEW             shift and go to state 45
    ARRAY           shift and go to state 46
    CORCHETE_ABRE   shift and go to state 47
    FOR             shift and go to state 48
    FOREACH         shift and go to state 49
    WHILE           shift and go to state 51
    FUNCTION        shift and go to state 52
    CONST           shift and go to state 53
    PRIVATE         shift and go to state 54
    PUBLIC          shift and go to state 55
    PROTECTED       shift and go to state 56
    STATIC          shift and go to state 57
    VAR             shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEANO        shift and go to state 61
    NEGACION        shift and go to state 62
    INCREMENTO      shift and go to state 63
    DECREMENTO      shift and go to state 64
    IF              shift and go to state 65
    IDENTIFICADOR   shift and go to state 6
    CADENA          shift and go to state 26

    decl_variable                  shift and go to state 20
    sentenciasAnidadas             shift and go to state 350
    instrucciones                  shift and go to state 206
    asignacion                     shift and go to state 7
    salida                         shift and go to state 8
    ingreso                        shift and go to state 9
    estructuras_datos              shift and go to state 10
    estructuras_control            shift and go to state 11
    funcionglobal                  shift and go to state 12
    operaciones                    shift and go to state 15
    declaracion_s                  shift and go to state 16
    concadenacion1                 shift and go to state 18
    concatenacion2                 shift and go to state 19
    funcionuso                     shift and go to state 21
    salidas_posibles               shift and go to state 23
    pila                           shift and go to state 30
    arreglo                        shift and go to state 31
    for                            shift and go to state 32
    foreach                        shift and go to state 33
    if_else                        shift and go to state 34
    while                          shift and go to state 35
    funcion                        shift and go to state 36
    variable_tipo                  shift and go to state 37
    operaciones_logicas            shift and go to state 38
    operaciones_arit               shift and go to state 39
    operaciones_bits               shift and go to state 40
    pushpila                       shift and go to state 41
    poppila                        shift and go to state 42
    crecimiento                    shift and go to state 43
    datos                          shift and go to state 44
    if_else_inicio                 shift and go to state 50

state 350

    (154) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 351


state 351

    (154) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    CLASS           reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BREAK           reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    INCREMENTO      reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    DECREMENTO      reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    $end            reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    RETURN          reduce using rule 154 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUALDAD in state 21 resolved as shift
WARNING: shift/reduce conflict for IDENTIDAD in state 21 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 21 resolved as shift
WARNING: shift/reduce conflict for NO_IDENTIDAD in state 21 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 21 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 21 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 21 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 21 resolved as shift
WARNING: shift/reduce conflict for AND in state 21 resolved as shift
WARNING: shift/reduce conflict for OR in state 21 resolved as shift
WARNING: shift/reduce conflict for XOR in state 21 resolved as shift
WARNING: shift/reduce conflict for CONJUNCION in state 21 resolved as shift
WARNING: shift/reduce conflict for DISYUNCION in state 21 resolved as shift
WARNING: shift/reduce conflict for FIN_LINEA in state 150 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 150 resolved as shift
WARNING: shift/reduce conflict for IDENTIDAD in state 150 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 150 resolved as shift
WARNING: shift/reduce conflict for NO_IDENTIDAD in state 150 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 150 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 150 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for AND in state 150 resolved as shift
WARNING: shift/reduce conflict for OR in state 150 resolved as shift
WARNING: shift/reduce conflict for XOR in state 150 resolved as shift
WARNING: shift/reduce conflict for CONJUNCION in state 150 resolved as shift
WARNING: shift/reduce conflict for DISYUNCION in state 150 resolved as shift
WARNING: shift/reduce conflict for FIN_LINEA in state 153 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 167 resolved as shift
WARNING: shift/reduce conflict for IDENTIDAD in state 167 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 167 resolved as shift
WARNING: shift/reduce conflict for NO_IDENTIDAD in state 167 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 167 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 167 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 167 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 167 resolved as shift
WARNING: shift/reduce conflict for AND in state 167 resolved as shift
WARNING: shift/reduce conflict for OR in state 167 resolved as shift
WARNING: shift/reduce conflict for XOR in state 167 resolved as shift
WARNING: shift/reduce conflict for CONJUNCION in state 167 resolved as shift
WARNING: shift/reduce conflict for DISYUNCION in state 167 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 168 resolved as shift
WARNING: shift/reduce conflict for IDENTIDAD in state 168 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 168 resolved as shift
WARNING: shift/reduce conflict for NO_IDENTIDAD in state 168 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 168 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 168 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for AND in state 168 resolved as shift
WARNING: shift/reduce conflict for OR in state 168 resolved as shift
WARNING: shift/reduce conflict for XOR in state 168 resolved as shift
WARNING: shift/reduce conflict for CONJUNCION in state 168 resolved as shift
WARNING: shift/reduce conflict for DISYUNCION in state 168 resolved as shift
WARNING: reduce/reduce conflict in state 146 resolved using rule (salidas_posibles -> decl_variable)
WARNING: rejected rule (paraCalculos -> decl_variable) in state 146
WARNING: reduce/reduce conflict in state 157 resolved using rule (datos -> ENTERO)
WARNING: rejected rule (paraCalculos -> ENTERO) in state 157
WARNING: reduce/reduce conflict in state 158 resolved using rule (datos -> FLOTANTE)
WARNING: rejected rule (paraCalculos -> FLOTANTE) in state 158
WARNING: reduce/reduce conflict in state 159 resolved using rule (datos -> BOOLEANO)
WARNING: rejected rule (operaciones_logicas -> BOOLEANO) in state 159
WARNING: reduce/reduce conflict in state 167 resolved using rule (operaciones_logicas -> funcionuso)
WARNING: rejected rule (operaciones_logicas -> funcionuso operad_logico funcionuso) in state 167
WARNING: reduce/reduce conflict in state 251 resolved using rule (salidas_posibles -> decl_variable)
WARNING: rejected rule (paraCalculos -> decl_variable) in state 251
WARNING: reduce/reduce conflict in state 255 resolved using rule (datos -> ENTERO)
WARNING: rejected rule (paraCalculos -> ENTERO) in state 255
WARNING: reduce/reduce conflict in state 256 resolved using rule (datos -> FLOTANTE)
WARNING: rejected rule (paraCalculos -> FLOTANTE) in state 256
WARNING: reduce/reduce conflict in state 318 resolved using rule (menor -> MENOR_IGUAL decl_variable FIN_LINEA)
WARNING: rejected rule (mayor -> MENOR_IGUAL decl_variable FIN_LINEA) in state 318
WARNING: Rule (operaciones_logicas -> funcionuso operad_logico funcionuso) is never reduced
WARNING: Rule (mayor -> MENOR_IGUAL decl_variable FIN_LINEA) is never reduced
