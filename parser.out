Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOS_PUNTOS
    EXPLODE
    INTERROGANTE
    POP
    PUNTO
    PUSH

Grammar

Rule 0     S' -> programa
Rule 1     programa -> clase
Rule 2     programa -> instrucciones
Rule 3     clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 4     instrucciones -> asignacion
Rule 5     instrucciones -> valor
Rule 6     instrucciones -> salida
Rule 7     instrucciones -> ingreso
Rule 8     instrucciones -> estructuras_datos
Rule 9     instrucciones -> estructuras_control
Rule 10    instrucciones -> funcion
Rule 11    instrucciones -> COMENTARIO_LINEA
Rule 12    instrucciones -> COMENTARIO_BLOQUE
Rule 13    instrucciones -> operaciones_arit
Rule 14    instrucciones -> operaciones_bits
Rule 15    salidas_posibles -> datos
Rule 16    salidas_posibles -> decl_variable
Rule 17    salida -> ECHO salidas_posibles FIN_LINEA
Rule 18    salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
Rule 19    salida -> PRINT salidas_posibles FIN_LINEA
Rule 20    ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
Rule 21    ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
Rule 22    ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
Rule 23    variable_tipo -> CONST
Rule 24    variable_tipo -> PRIVATE
Rule 25    variable_tipo -> PUBLIC
Rule 26    variable_tipo -> PROTECTED
Rule 27    variable_tipo -> STATIC
Rule 28    variable_tipo -> VAR
Rule 29    decl_variable -> SIGNO_DOLAR IDENTIFICADOR
Rule 30    decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR
Rule 31    asignacion -> decl_variable IGUAL valor FIN_LINEA
Rule 32    valor -> datos
Rule 33    valor -> NULO
Rule 34    datos -> ENTERO
Rule 35    datos -> FLOTANTE
Rule 36    datos -> CADENA
Rule 37    datos -> BOOLEANO
Rule 38    funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 39    funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 40    parametros -> SIGNO_DOLAR IDENTIFICADOR
Rule 41    parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros
Rule 42    estructuras_datos -> pila FIN_LINEA
Rule 43    estructuras_datos -> arreglo FIN_LINEA
Rule 44    pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 45    arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 46    arreglo -> CORCHETE_ABRE CORCHETE_CIERRA
Rule 47    arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
Rule 48    arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA
Rule 49    arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
Rule 50    arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA
Rule 51    asociacion -> datos IGUAL MAYOR datos
Rule 52    asociacion -> datos IGUAL MAYOR datos COMA asociacion
Rule 53    elementos -> datos
Rule 54    elementos -> datos COMA elementos
Rule 55    operad_arit -> SUMA
Rule 56    operad_arit -> RESTA
Rule 57    operad_arit -> MULTIPLICACION
Rule 58    operad_arit -> DIVISION
Rule 59    operad_arit -> POTENCIA
Rule 60    operad_arit -> MODULO
Rule 61    operad_logico -> IGUALDAD
Rule 62    operad_logico -> IDENTIDAD
Rule 63    operad_logico -> DIFERENTE
Rule 64    operad_logico -> NO_IDENTIDAD
Rule 65    operad_logico -> MAYOR
Rule 66    operad_logico -> MAYOR_IGUAL
Rule 67    operad_logico -> MENOR
Rule 68    operad_logico -> MENOR_IGUAL
Rule 69    operad_logico -> AND
Rule 70    operad_logico -> OR
Rule 71    operad_logico -> XOR
Rule 72    operand_bits -> CONJUNCION
Rule 73    operand_bits -> DISYUNCION
Rule 74    operand_bits -> DISYUNCION_EXC
Rule 75    operand_bits -> DESPLAZAR_BITS_IZQ
Rule 76    operand_bits -> DESPLAZAR_BITS_DER
Rule 77    operaciones_arit -> salidas_posibles operad_arit salidas_posibles
Rule 78    operaciones_arit -> salidas_posibles operad_arit operaciones_arit
Rule 79    operaciones_bits -> salidas_posibles operand_bits salidas_posibles
Rule 80    operaciones_bits -> NEGACION salidas_posibles
Rule 81    operaciones_logicas -> ENTERO operad_logico ENTERO
Rule 82    operaciones_logicas -> FLOTANTE operad_logico FLOTANTE
Rule 83    operaciones_logicas -> BOOLEANO
Rule 84    operaciones_logicas -> decl_variable operad_logico decl_variable
Rule 85    operaciones_logicas -> decl_variable operad_logico ENTERO
Rule 86    operaciones_logicas -> decl_variable operad_logico FLOTANTE
Rule 87    estructuras_control -> for
Rule 88    estructuras_control -> foreach
Rule 89    estructuras_control -> if_else
Rule 90    estructuras_control -> while
Rule 91    bloque -> asignacion
Rule 92    bloque -> salida
Rule 93    bloque -> retorno
Rule 94    bloque -> estructuras_control
Rule 95    for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 96    sentenciasAnidadas -> instrucciones
Rule 97    sentenciasAnidadas -> instrucciones sentenciasAnidadas
Rule 98    declaracionp -> decl_variable valorc
Rule 99    valorc -> menor
Rule 100   valorc -> mayor
Rule 101   menor -> MENOR_IGUAL ENTERO FIN_LINEA
Rule 102   mayor -> MAYOR_IGUAL ENTERO FIN_LINEA
Rule 103   declaracion_s -> decl_variable crecimiento
Rule 104   declaracion_s -> crecimiento decl_variable
Rule 105   crecimiento -> INCREMENTO
Rule 106   crecimiento -> DECREMENTO
Rule 107   retorno -> RETURN salidas_posibles FIN_LINEA
Rule 108   foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 109   foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
Rule 110   while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 111   if_else -> if_else_inicio if_else_fin
Rule 112   if_else -> if_else_inicio if_else_cuerpo if_else_fin
Rule 113   if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 114   if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
Rule 115   if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
Rule 116   if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA

Terminals, with rules where they appear

AND                  : 69
ARRAY                : 45 47 49
AS                   : 108 109
BOOLEANO             : 37 83
CADENA               : 20 22 36
CLASS                : 3
COMA                 : 22 22 41 52 54
COMENTARIO_BLOQUE    : 12
COMENTARIO_LINEA     : 11
CONJUNCION           : 72
CONST                : 23
CORCHETE_ABRE        : 46 48 50
CORCHETE_CIERRA      : 46 48 50
DECREMENTO           : 106
DESPLAZAR_BITS_DER   : 76
DESPLAZAR_BITS_IZQ   : 75
DIFERENTE            : 63
DISYUNCION           : 73
DISYUNCION_EXC       : 74
DIVISION             : 58
DOS_PUNTOS           : 
ECHO                 : 17
ELSE                 : 116
ELSEIF               : 114 115
ENTERO               : 34 81 81 85 101 102
EXPLODE              : 
FGETS                : 21
FIN_LINEA            : 17 18 19 20 21 22 31 42 43 101 102 107
FLOTANTE             : 35 82 82 86
FOR                  : 95
FOREACH              : 108 109
FSCANF               : 22
FUNCTION             : 38 39
IDENTIDAD            : 62
IDENTIFICADOR        : 3 22 29 30 38 39 40 41
IF                   : 113
IGUAL                : 31 51 52 109
IGUALDAD             : 61
INCREMENTO           : 105
INTERROGANTE         : 
LLAVE_ABRE           : 3 38 39 95 108 109 110 113 114 115 116
LLAVE_CIERRA         : 3 38 39 95 108 109 110 113 114 115 116
MAYOR                : 51 52 65 109
MAYOR_IGUAL          : 66 102
MENOR                : 67
MENOR_IGUAL          : 68 101
MODULO               : 60
MULTIPLICACION       : 57
NEGACION             : 80
NEW                  : 44
NO_IDENTIDAD         : 64
NULO                 : 33
OR                   : 70
PARENTESIS_ABRE      : 18 20 21 22 38 39 44 45 47 49 95 108 109 110 113 114 115
PARENTESIS_CIERRA    : 18 20 21 22 38 39 44 45 47 49 95 108 109 110 113 114 115
POP                  : 
POTENCIA             : 59
PRINT                : 18 19
PRIVATE              : 24
PROTECTED            : 26
PUBLIC               : 25
PUNTO                : 
PUSH                 : 
READLINE             : 20
RESTA                : 56
RETURN               : 107
SIGNO_DOLAR          : 22 29 30 40 41
STACK                : 44
STATIC               : 27
STDIN                : 21 22
SUMA                 : 55
VAR                  : 28
WHILE                : 110
XOR                  : 71
error                : 

Nonterminals, with rules where they appear

arreglo              : 43
asignacion           : 4 91 95
asociacion           : 49 50 52
bloque               : 113 114 115 116
clase                : 1
crecimiento          : 103 104
datos                : 15 32 51 51 52 52 53 54
decl_variable        : 16 31 84 84 85 86 98 103 104 108 108 109 109 109 110
declaracion_s        : 95
declaracionp         : 95
elementos            : 47 48 54
estructuras_control  : 9 94
estructuras_datos    : 8
for                  : 87
foreach              : 88
funcion              : 10
if_else              : 89
if_else_cuerpo       : 112 115
if_else_fin          : 111 112
if_else_inicio       : 111 112
ingreso              : 7
instrucciones        : 2 3 38 39 96 97 110
mayor                : 100
menor                : 99
operaciones_arit     : 13 78
operaciones_bits     : 14
operaciones_logicas  : 113 114 115
operad_arit          : 77 78
operad_logico        : 81 82 84 85 86 110
operand_bits         : 79
parametros           : 39 41
pila                 : 42
programa             : 0
retorno              : 93
salida               : 6 92
salidas_posibles     : 17 18 19 77 77 78 79 79 80 107
sentenciasAnidadas   : 95 97 108 109
valor                : 5 31 110
valorc               : 98
variable_tipo        : 30
while                : 90

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . clase
    (2) programa -> . instrucciones
    (3) clase -> . CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . valor
    (6) instrucciones -> . salida
    (7) instrucciones -> . ingreso
    (8) instrucciones -> . estructuras_datos
    (9) instrucciones -> . estructuras_control
    (10) instrucciones -> . funcion
    (11) instrucciones -> . COMENTARIO_LINEA
    (12) instrucciones -> . COMENTARIO_BLOQUE
    (13) instrucciones -> . operaciones_arit
    (14) instrucciones -> . operaciones_bits
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) valor -> . datos
    (33) valor -> . NULO
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (42) estructuras_datos -> . pila FIN_LINEA
    (43) estructuras_datos -> . arreglo FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (38) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (77) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (78) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (79) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (80) operaciones_bits -> . NEGACION salidas_posibles
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (44) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (47) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (48) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (49) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (50) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    CLASS           shift and go to state 4
    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    NULO            shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    NEGACION        shift and go to state 34
    SIGNO_DOLAR     shift and go to state 26
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    programa                       shift and go to state 1
    clase                          shift and go to state 2
    instrucciones                  shift and go to state 3
    asignacion                     shift and go to state 5
    valor                          shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones_arit               shift and go to state 14
    operaciones_bits               shift and go to state 15
    decl_variable                  shift and go to state 16
    datos                          shift and go to state 17
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 1

    (0) S' -> programa .



state 2

    (1) programa -> clase .

    $end            reduce using rule 1 (programa -> clase .)


state 3

    (2) programa -> instrucciones .

    $end            reduce using rule 2 (programa -> instrucciones .)


state 4

    (3) clase -> CLASS . IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 53


state 5

    (4) instrucciones -> asignacion .

    $end            reduce using rule 4 (instrucciones -> asignacion .)
    LLAVE_CIERRA    reduce using rule 4 (instrucciones -> asignacion .)
    COMENTARIO_LINEA reduce using rule 4 (instrucciones -> asignacion .)
    COMENTARIO_BLOQUE reduce using rule 4 (instrucciones -> asignacion .)
    NULO            reduce using rule 4 (instrucciones -> asignacion .)
    ECHO            reduce using rule 4 (instrucciones -> asignacion .)
    PRINT           reduce using rule 4 (instrucciones -> asignacion .)
    READLINE        reduce using rule 4 (instrucciones -> asignacion .)
    FGETS           reduce using rule 4 (instrucciones -> asignacion .)
    FSCANF          reduce using rule 4 (instrucciones -> asignacion .)
    FUNCTION        reduce using rule 4 (instrucciones -> asignacion .)
    NEGACION        reduce using rule 4 (instrucciones -> asignacion .)
    SIGNO_DOLAR     reduce using rule 4 (instrucciones -> asignacion .)
    ENTERO          reduce using rule 4 (instrucciones -> asignacion .)
    FLOTANTE        reduce using rule 4 (instrucciones -> asignacion .)
    CADENA          reduce using rule 4 (instrucciones -> asignacion .)
    BOOLEANO        reduce using rule 4 (instrucciones -> asignacion .)
    NEW             reduce using rule 4 (instrucciones -> asignacion .)
    ARRAY           reduce using rule 4 (instrucciones -> asignacion .)
    CORCHETE_ABRE   reduce using rule 4 (instrucciones -> asignacion .)
    FOR             reduce using rule 4 (instrucciones -> asignacion .)
    FOREACH         reduce using rule 4 (instrucciones -> asignacion .)
    WHILE           reduce using rule 4 (instrucciones -> asignacion .)
    CONST           reduce using rule 4 (instrucciones -> asignacion .)
    PRIVATE         reduce using rule 4 (instrucciones -> asignacion .)
    PUBLIC          reduce using rule 4 (instrucciones -> asignacion .)
    PROTECTED       reduce using rule 4 (instrucciones -> asignacion .)
    STATIC          reduce using rule 4 (instrucciones -> asignacion .)
    VAR             reduce using rule 4 (instrucciones -> asignacion .)
    IF              reduce using rule 4 (instrucciones -> asignacion .)


state 6

    (5) instrucciones -> valor .

    $end            reduce using rule 5 (instrucciones -> valor .)
    LLAVE_CIERRA    reduce using rule 5 (instrucciones -> valor .)
    COMENTARIO_LINEA reduce using rule 5 (instrucciones -> valor .)
    COMENTARIO_BLOQUE reduce using rule 5 (instrucciones -> valor .)
    NULO            reduce using rule 5 (instrucciones -> valor .)
    ECHO            reduce using rule 5 (instrucciones -> valor .)
    PRINT           reduce using rule 5 (instrucciones -> valor .)
    READLINE        reduce using rule 5 (instrucciones -> valor .)
    FGETS           reduce using rule 5 (instrucciones -> valor .)
    FSCANF          reduce using rule 5 (instrucciones -> valor .)
    FUNCTION        reduce using rule 5 (instrucciones -> valor .)
    NEGACION        reduce using rule 5 (instrucciones -> valor .)
    SIGNO_DOLAR     reduce using rule 5 (instrucciones -> valor .)
    ENTERO          reduce using rule 5 (instrucciones -> valor .)
    FLOTANTE        reduce using rule 5 (instrucciones -> valor .)
    CADENA          reduce using rule 5 (instrucciones -> valor .)
    BOOLEANO        reduce using rule 5 (instrucciones -> valor .)
    NEW             reduce using rule 5 (instrucciones -> valor .)
    ARRAY           reduce using rule 5 (instrucciones -> valor .)
    CORCHETE_ABRE   reduce using rule 5 (instrucciones -> valor .)
    FOR             reduce using rule 5 (instrucciones -> valor .)
    FOREACH         reduce using rule 5 (instrucciones -> valor .)
    WHILE           reduce using rule 5 (instrucciones -> valor .)
    CONST           reduce using rule 5 (instrucciones -> valor .)
    PRIVATE         reduce using rule 5 (instrucciones -> valor .)
    PUBLIC          reduce using rule 5 (instrucciones -> valor .)
    PROTECTED       reduce using rule 5 (instrucciones -> valor .)
    STATIC          reduce using rule 5 (instrucciones -> valor .)
    VAR             reduce using rule 5 (instrucciones -> valor .)
    IF              reduce using rule 5 (instrucciones -> valor .)


state 7

    (6) instrucciones -> salida .

    $end            reduce using rule 6 (instrucciones -> salida .)
    LLAVE_CIERRA    reduce using rule 6 (instrucciones -> salida .)
    COMENTARIO_LINEA reduce using rule 6 (instrucciones -> salida .)
    COMENTARIO_BLOQUE reduce using rule 6 (instrucciones -> salida .)
    NULO            reduce using rule 6 (instrucciones -> salida .)
    ECHO            reduce using rule 6 (instrucciones -> salida .)
    PRINT           reduce using rule 6 (instrucciones -> salida .)
    READLINE        reduce using rule 6 (instrucciones -> salida .)
    FGETS           reduce using rule 6 (instrucciones -> salida .)
    FSCANF          reduce using rule 6 (instrucciones -> salida .)
    FUNCTION        reduce using rule 6 (instrucciones -> salida .)
    NEGACION        reduce using rule 6 (instrucciones -> salida .)
    SIGNO_DOLAR     reduce using rule 6 (instrucciones -> salida .)
    ENTERO          reduce using rule 6 (instrucciones -> salida .)
    FLOTANTE        reduce using rule 6 (instrucciones -> salida .)
    CADENA          reduce using rule 6 (instrucciones -> salida .)
    BOOLEANO        reduce using rule 6 (instrucciones -> salida .)
    NEW             reduce using rule 6 (instrucciones -> salida .)
    ARRAY           reduce using rule 6 (instrucciones -> salida .)
    CORCHETE_ABRE   reduce using rule 6 (instrucciones -> salida .)
    FOR             reduce using rule 6 (instrucciones -> salida .)
    FOREACH         reduce using rule 6 (instrucciones -> salida .)
    WHILE           reduce using rule 6 (instrucciones -> salida .)
    CONST           reduce using rule 6 (instrucciones -> salida .)
    PRIVATE         reduce using rule 6 (instrucciones -> salida .)
    PUBLIC          reduce using rule 6 (instrucciones -> salida .)
    PROTECTED       reduce using rule 6 (instrucciones -> salida .)
    STATIC          reduce using rule 6 (instrucciones -> salida .)
    VAR             reduce using rule 6 (instrucciones -> salida .)
    IF              reduce using rule 6 (instrucciones -> salida .)


state 8

    (7) instrucciones -> ingreso .

    $end            reduce using rule 7 (instrucciones -> ingreso .)
    LLAVE_CIERRA    reduce using rule 7 (instrucciones -> ingreso .)
    COMENTARIO_LINEA reduce using rule 7 (instrucciones -> ingreso .)
    COMENTARIO_BLOQUE reduce using rule 7 (instrucciones -> ingreso .)
    NULO            reduce using rule 7 (instrucciones -> ingreso .)
    ECHO            reduce using rule 7 (instrucciones -> ingreso .)
    PRINT           reduce using rule 7 (instrucciones -> ingreso .)
    READLINE        reduce using rule 7 (instrucciones -> ingreso .)
    FGETS           reduce using rule 7 (instrucciones -> ingreso .)
    FSCANF          reduce using rule 7 (instrucciones -> ingreso .)
    FUNCTION        reduce using rule 7 (instrucciones -> ingreso .)
    NEGACION        reduce using rule 7 (instrucciones -> ingreso .)
    SIGNO_DOLAR     reduce using rule 7 (instrucciones -> ingreso .)
    ENTERO          reduce using rule 7 (instrucciones -> ingreso .)
    FLOTANTE        reduce using rule 7 (instrucciones -> ingreso .)
    CADENA          reduce using rule 7 (instrucciones -> ingreso .)
    BOOLEANO        reduce using rule 7 (instrucciones -> ingreso .)
    NEW             reduce using rule 7 (instrucciones -> ingreso .)
    ARRAY           reduce using rule 7 (instrucciones -> ingreso .)
    CORCHETE_ABRE   reduce using rule 7 (instrucciones -> ingreso .)
    FOR             reduce using rule 7 (instrucciones -> ingreso .)
    FOREACH         reduce using rule 7 (instrucciones -> ingreso .)
    WHILE           reduce using rule 7 (instrucciones -> ingreso .)
    CONST           reduce using rule 7 (instrucciones -> ingreso .)
    PRIVATE         reduce using rule 7 (instrucciones -> ingreso .)
    PUBLIC          reduce using rule 7 (instrucciones -> ingreso .)
    PROTECTED       reduce using rule 7 (instrucciones -> ingreso .)
    STATIC          reduce using rule 7 (instrucciones -> ingreso .)
    VAR             reduce using rule 7 (instrucciones -> ingreso .)
    IF              reduce using rule 7 (instrucciones -> ingreso .)


state 9

    (8) instrucciones -> estructuras_datos .

    $end            reduce using rule 8 (instrucciones -> estructuras_datos .)
    LLAVE_CIERRA    reduce using rule 8 (instrucciones -> estructuras_datos .)
    COMENTARIO_LINEA reduce using rule 8 (instrucciones -> estructuras_datos .)
    COMENTARIO_BLOQUE reduce using rule 8 (instrucciones -> estructuras_datos .)
    NULO            reduce using rule 8 (instrucciones -> estructuras_datos .)
    ECHO            reduce using rule 8 (instrucciones -> estructuras_datos .)
    PRINT           reduce using rule 8 (instrucciones -> estructuras_datos .)
    READLINE        reduce using rule 8 (instrucciones -> estructuras_datos .)
    FGETS           reduce using rule 8 (instrucciones -> estructuras_datos .)
    FSCANF          reduce using rule 8 (instrucciones -> estructuras_datos .)
    FUNCTION        reduce using rule 8 (instrucciones -> estructuras_datos .)
    NEGACION        reduce using rule 8 (instrucciones -> estructuras_datos .)
    SIGNO_DOLAR     reduce using rule 8 (instrucciones -> estructuras_datos .)
    ENTERO          reduce using rule 8 (instrucciones -> estructuras_datos .)
    FLOTANTE        reduce using rule 8 (instrucciones -> estructuras_datos .)
    CADENA          reduce using rule 8 (instrucciones -> estructuras_datos .)
    BOOLEANO        reduce using rule 8 (instrucciones -> estructuras_datos .)
    NEW             reduce using rule 8 (instrucciones -> estructuras_datos .)
    ARRAY           reduce using rule 8 (instrucciones -> estructuras_datos .)
    CORCHETE_ABRE   reduce using rule 8 (instrucciones -> estructuras_datos .)
    FOR             reduce using rule 8 (instrucciones -> estructuras_datos .)
    FOREACH         reduce using rule 8 (instrucciones -> estructuras_datos .)
    WHILE           reduce using rule 8 (instrucciones -> estructuras_datos .)
    CONST           reduce using rule 8 (instrucciones -> estructuras_datos .)
    PRIVATE         reduce using rule 8 (instrucciones -> estructuras_datos .)
    PUBLIC          reduce using rule 8 (instrucciones -> estructuras_datos .)
    PROTECTED       reduce using rule 8 (instrucciones -> estructuras_datos .)
    STATIC          reduce using rule 8 (instrucciones -> estructuras_datos .)
    VAR             reduce using rule 8 (instrucciones -> estructuras_datos .)
    IF              reduce using rule 8 (instrucciones -> estructuras_datos .)


state 10

    (9) instrucciones -> estructuras_control .

    $end            reduce using rule 9 (instrucciones -> estructuras_control .)
    LLAVE_CIERRA    reduce using rule 9 (instrucciones -> estructuras_control .)
    COMENTARIO_LINEA reduce using rule 9 (instrucciones -> estructuras_control .)
    COMENTARIO_BLOQUE reduce using rule 9 (instrucciones -> estructuras_control .)
    NULO            reduce using rule 9 (instrucciones -> estructuras_control .)
    ECHO            reduce using rule 9 (instrucciones -> estructuras_control .)
    PRINT           reduce using rule 9 (instrucciones -> estructuras_control .)
    READLINE        reduce using rule 9 (instrucciones -> estructuras_control .)
    FGETS           reduce using rule 9 (instrucciones -> estructuras_control .)
    FSCANF          reduce using rule 9 (instrucciones -> estructuras_control .)
    FUNCTION        reduce using rule 9 (instrucciones -> estructuras_control .)
    NEGACION        reduce using rule 9 (instrucciones -> estructuras_control .)
    SIGNO_DOLAR     reduce using rule 9 (instrucciones -> estructuras_control .)
    ENTERO          reduce using rule 9 (instrucciones -> estructuras_control .)
    FLOTANTE        reduce using rule 9 (instrucciones -> estructuras_control .)
    CADENA          reduce using rule 9 (instrucciones -> estructuras_control .)
    BOOLEANO        reduce using rule 9 (instrucciones -> estructuras_control .)
    NEW             reduce using rule 9 (instrucciones -> estructuras_control .)
    ARRAY           reduce using rule 9 (instrucciones -> estructuras_control .)
    CORCHETE_ABRE   reduce using rule 9 (instrucciones -> estructuras_control .)
    FOR             reduce using rule 9 (instrucciones -> estructuras_control .)
    FOREACH         reduce using rule 9 (instrucciones -> estructuras_control .)
    WHILE           reduce using rule 9 (instrucciones -> estructuras_control .)
    CONST           reduce using rule 9 (instrucciones -> estructuras_control .)
    PRIVATE         reduce using rule 9 (instrucciones -> estructuras_control .)
    PUBLIC          reduce using rule 9 (instrucciones -> estructuras_control .)
    PROTECTED       reduce using rule 9 (instrucciones -> estructuras_control .)
    STATIC          reduce using rule 9 (instrucciones -> estructuras_control .)
    VAR             reduce using rule 9 (instrucciones -> estructuras_control .)
    IF              reduce using rule 9 (instrucciones -> estructuras_control .)


state 11

    (10) instrucciones -> funcion .

    $end            reduce using rule 10 (instrucciones -> funcion .)
    LLAVE_CIERRA    reduce using rule 10 (instrucciones -> funcion .)
    COMENTARIO_LINEA reduce using rule 10 (instrucciones -> funcion .)
    COMENTARIO_BLOQUE reduce using rule 10 (instrucciones -> funcion .)
    NULO            reduce using rule 10 (instrucciones -> funcion .)
    ECHO            reduce using rule 10 (instrucciones -> funcion .)
    PRINT           reduce using rule 10 (instrucciones -> funcion .)
    READLINE        reduce using rule 10 (instrucciones -> funcion .)
    FGETS           reduce using rule 10 (instrucciones -> funcion .)
    FSCANF          reduce using rule 10 (instrucciones -> funcion .)
    FUNCTION        reduce using rule 10 (instrucciones -> funcion .)
    NEGACION        reduce using rule 10 (instrucciones -> funcion .)
    SIGNO_DOLAR     reduce using rule 10 (instrucciones -> funcion .)
    ENTERO          reduce using rule 10 (instrucciones -> funcion .)
    FLOTANTE        reduce using rule 10 (instrucciones -> funcion .)
    CADENA          reduce using rule 10 (instrucciones -> funcion .)
    BOOLEANO        reduce using rule 10 (instrucciones -> funcion .)
    NEW             reduce using rule 10 (instrucciones -> funcion .)
    ARRAY           reduce using rule 10 (instrucciones -> funcion .)
    CORCHETE_ABRE   reduce using rule 10 (instrucciones -> funcion .)
    FOR             reduce using rule 10 (instrucciones -> funcion .)
    FOREACH         reduce using rule 10 (instrucciones -> funcion .)
    WHILE           reduce using rule 10 (instrucciones -> funcion .)
    CONST           reduce using rule 10 (instrucciones -> funcion .)
    PRIVATE         reduce using rule 10 (instrucciones -> funcion .)
    PUBLIC          reduce using rule 10 (instrucciones -> funcion .)
    PROTECTED       reduce using rule 10 (instrucciones -> funcion .)
    STATIC          reduce using rule 10 (instrucciones -> funcion .)
    VAR             reduce using rule 10 (instrucciones -> funcion .)
    IF              reduce using rule 10 (instrucciones -> funcion .)


state 12

    (11) instrucciones -> COMENTARIO_LINEA .

    $end            reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    LLAVE_CIERRA    reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    COMENTARIO_LINEA reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    NULO            reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    ECHO            reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    PRINT           reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    READLINE        reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    FGETS           reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    FSCANF          reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    FUNCTION        reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    NEGACION        reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    SIGNO_DOLAR     reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    ENTERO          reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    FLOTANTE        reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    CADENA          reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    BOOLEANO        reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    NEW             reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    ARRAY           reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    CORCHETE_ABRE   reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    FOR             reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    FOREACH         reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    WHILE           reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    CONST           reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    PRIVATE         reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    PUBLIC          reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    PROTECTED       reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    STATIC          reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    VAR             reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)
    IF              reduce using rule 11 (instrucciones -> COMENTARIO_LINEA .)


state 13

    (12) instrucciones -> COMENTARIO_BLOQUE .

    $end            reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    LLAVE_CIERRA    reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    COMENTARIO_LINEA reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    COMENTARIO_BLOQUE reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    NULO            reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    ECHO            reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    PRINT           reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    READLINE        reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    FGETS           reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    FSCANF          reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    FUNCTION        reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    NEGACION        reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    SIGNO_DOLAR     reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    ENTERO          reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    FLOTANTE        reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    CADENA          reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    BOOLEANO        reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    NEW             reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    ARRAY           reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    CORCHETE_ABRE   reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    FOR             reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    FOREACH         reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    WHILE           reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    CONST           reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    PRIVATE         reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    PUBLIC          reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    PROTECTED       reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    STATIC          reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    VAR             reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)
    IF              reduce using rule 12 (instrucciones -> COMENTARIO_BLOQUE .)


state 14

    (13) instrucciones -> operaciones_arit .

    $end            reduce using rule 13 (instrucciones -> operaciones_arit .)
    LLAVE_CIERRA    reduce using rule 13 (instrucciones -> operaciones_arit .)
    COMENTARIO_LINEA reduce using rule 13 (instrucciones -> operaciones_arit .)
    COMENTARIO_BLOQUE reduce using rule 13 (instrucciones -> operaciones_arit .)
    NULO            reduce using rule 13 (instrucciones -> operaciones_arit .)
    ECHO            reduce using rule 13 (instrucciones -> operaciones_arit .)
    PRINT           reduce using rule 13 (instrucciones -> operaciones_arit .)
    READLINE        reduce using rule 13 (instrucciones -> operaciones_arit .)
    FGETS           reduce using rule 13 (instrucciones -> operaciones_arit .)
    FSCANF          reduce using rule 13 (instrucciones -> operaciones_arit .)
    FUNCTION        reduce using rule 13 (instrucciones -> operaciones_arit .)
    NEGACION        reduce using rule 13 (instrucciones -> operaciones_arit .)
    SIGNO_DOLAR     reduce using rule 13 (instrucciones -> operaciones_arit .)
    ENTERO          reduce using rule 13 (instrucciones -> operaciones_arit .)
    FLOTANTE        reduce using rule 13 (instrucciones -> operaciones_arit .)
    CADENA          reduce using rule 13 (instrucciones -> operaciones_arit .)
    BOOLEANO        reduce using rule 13 (instrucciones -> operaciones_arit .)
    NEW             reduce using rule 13 (instrucciones -> operaciones_arit .)
    ARRAY           reduce using rule 13 (instrucciones -> operaciones_arit .)
    CORCHETE_ABRE   reduce using rule 13 (instrucciones -> operaciones_arit .)
    FOR             reduce using rule 13 (instrucciones -> operaciones_arit .)
    FOREACH         reduce using rule 13 (instrucciones -> operaciones_arit .)
    WHILE           reduce using rule 13 (instrucciones -> operaciones_arit .)
    CONST           reduce using rule 13 (instrucciones -> operaciones_arit .)
    PRIVATE         reduce using rule 13 (instrucciones -> operaciones_arit .)
    PUBLIC          reduce using rule 13 (instrucciones -> operaciones_arit .)
    PROTECTED       reduce using rule 13 (instrucciones -> operaciones_arit .)
    STATIC          reduce using rule 13 (instrucciones -> operaciones_arit .)
    VAR             reduce using rule 13 (instrucciones -> operaciones_arit .)
    IF              reduce using rule 13 (instrucciones -> operaciones_arit .)


state 15

    (14) instrucciones -> operaciones_bits .

    $end            reduce using rule 14 (instrucciones -> operaciones_bits .)
    LLAVE_CIERRA    reduce using rule 14 (instrucciones -> operaciones_bits .)
    COMENTARIO_LINEA reduce using rule 14 (instrucciones -> operaciones_bits .)
    COMENTARIO_BLOQUE reduce using rule 14 (instrucciones -> operaciones_bits .)
    NULO            reduce using rule 14 (instrucciones -> operaciones_bits .)
    ECHO            reduce using rule 14 (instrucciones -> operaciones_bits .)
    PRINT           reduce using rule 14 (instrucciones -> operaciones_bits .)
    READLINE        reduce using rule 14 (instrucciones -> operaciones_bits .)
    FGETS           reduce using rule 14 (instrucciones -> operaciones_bits .)
    FSCANF          reduce using rule 14 (instrucciones -> operaciones_bits .)
    FUNCTION        reduce using rule 14 (instrucciones -> operaciones_bits .)
    NEGACION        reduce using rule 14 (instrucciones -> operaciones_bits .)
    SIGNO_DOLAR     reduce using rule 14 (instrucciones -> operaciones_bits .)
    ENTERO          reduce using rule 14 (instrucciones -> operaciones_bits .)
    FLOTANTE        reduce using rule 14 (instrucciones -> operaciones_bits .)
    CADENA          reduce using rule 14 (instrucciones -> operaciones_bits .)
    BOOLEANO        reduce using rule 14 (instrucciones -> operaciones_bits .)
    NEW             reduce using rule 14 (instrucciones -> operaciones_bits .)
    ARRAY           reduce using rule 14 (instrucciones -> operaciones_bits .)
    CORCHETE_ABRE   reduce using rule 14 (instrucciones -> operaciones_bits .)
    FOR             reduce using rule 14 (instrucciones -> operaciones_bits .)
    FOREACH         reduce using rule 14 (instrucciones -> operaciones_bits .)
    WHILE           reduce using rule 14 (instrucciones -> operaciones_bits .)
    CONST           reduce using rule 14 (instrucciones -> operaciones_bits .)
    PRIVATE         reduce using rule 14 (instrucciones -> operaciones_bits .)
    PUBLIC          reduce using rule 14 (instrucciones -> operaciones_bits .)
    PROTECTED       reduce using rule 14 (instrucciones -> operaciones_bits .)
    STATIC          reduce using rule 14 (instrucciones -> operaciones_bits .)
    VAR             reduce using rule 14 (instrucciones -> operaciones_bits .)
    IF              reduce using rule 14 (instrucciones -> operaciones_bits .)


state 16

    (31) asignacion -> decl_variable . IGUAL valor FIN_LINEA
    (16) salidas_posibles -> decl_variable .

    IGUAL           shift and go to state 54
    SUMA            reduce using rule 16 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 16 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 16 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 16 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 16 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 16 (salidas_posibles -> decl_variable .)
    CONJUNCION      reduce using rule 16 (salidas_posibles -> decl_variable .)
    DISYUNCION      reduce using rule 16 (salidas_posibles -> decl_variable .)
    DISYUNCION_EXC  reduce using rule 16 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_IZQ reduce using rule 16 (salidas_posibles -> decl_variable .)
    DESPLAZAR_BITS_DER reduce using rule 16 (salidas_posibles -> decl_variable .)


state 17

    (32) valor -> datos .
    (15) salidas_posibles -> datos .

    $end            reduce using rule 32 (valor -> datos .)
    LLAVE_CIERRA    reduce using rule 32 (valor -> datos .)
    COMENTARIO_LINEA reduce using rule 32 (valor -> datos .)
    COMENTARIO_BLOQUE reduce using rule 32 (valor -> datos .)
    NULO            reduce using rule 32 (valor -> datos .)
    ECHO            reduce using rule 32 (valor -> datos .)
    PRINT           reduce using rule 32 (valor -> datos .)
    READLINE        reduce using rule 32 (valor -> datos .)
    FGETS           reduce using rule 32 (valor -> datos .)
    FSCANF          reduce using rule 32 (valor -> datos .)
    FUNCTION        reduce using rule 32 (valor -> datos .)
    NEGACION        reduce using rule 32 (valor -> datos .)
    SIGNO_DOLAR     reduce using rule 32 (valor -> datos .)
    ENTERO          reduce using rule 32 (valor -> datos .)
    FLOTANTE        reduce using rule 32 (valor -> datos .)
    CADENA          reduce using rule 32 (valor -> datos .)
    BOOLEANO        reduce using rule 32 (valor -> datos .)
    NEW             reduce using rule 32 (valor -> datos .)
    ARRAY           reduce using rule 32 (valor -> datos .)
    CORCHETE_ABRE   reduce using rule 32 (valor -> datos .)
    FOR             reduce using rule 32 (valor -> datos .)
    FOREACH         reduce using rule 32 (valor -> datos .)
    WHILE           reduce using rule 32 (valor -> datos .)
    CONST           reduce using rule 32 (valor -> datos .)
    PRIVATE         reduce using rule 32 (valor -> datos .)
    PUBLIC          reduce using rule 32 (valor -> datos .)
    PROTECTED       reduce using rule 32 (valor -> datos .)
    STATIC          reduce using rule 32 (valor -> datos .)
    VAR             reduce using rule 32 (valor -> datos .)
    IF              reduce using rule 32 (valor -> datos .)
    SUMA            reduce using rule 15 (salidas_posibles -> datos .)
    RESTA           reduce using rule 15 (salidas_posibles -> datos .)
    MULTIPLICACION  reduce using rule 15 (salidas_posibles -> datos .)
    DIVISION        reduce using rule 15 (salidas_posibles -> datos .)
    POTENCIA        reduce using rule 15 (salidas_posibles -> datos .)
    MODULO          reduce using rule 15 (salidas_posibles -> datos .)
    CONJUNCION      reduce using rule 15 (salidas_posibles -> datos .)
    DISYUNCION      reduce using rule 15 (salidas_posibles -> datos .)
    DISYUNCION_EXC  reduce using rule 15 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_IZQ reduce using rule 15 (salidas_posibles -> datos .)
    DESPLAZAR_BITS_DER reduce using rule 15 (salidas_posibles -> datos .)


state 18

    (33) valor -> NULO .

    $end            reduce using rule 33 (valor -> NULO .)
    FIN_LINEA       reduce using rule 33 (valor -> NULO .)
    LLAVE_CIERRA    reduce using rule 33 (valor -> NULO .)
    PARENTESIS_CIERRA reduce using rule 33 (valor -> NULO .)
    COMENTARIO_LINEA reduce using rule 33 (valor -> NULO .)
    COMENTARIO_BLOQUE reduce using rule 33 (valor -> NULO .)
    NULO            reduce using rule 33 (valor -> NULO .)
    ECHO            reduce using rule 33 (valor -> NULO .)
    PRINT           reduce using rule 33 (valor -> NULO .)
    READLINE        reduce using rule 33 (valor -> NULO .)
    FGETS           reduce using rule 33 (valor -> NULO .)
    FSCANF          reduce using rule 33 (valor -> NULO .)
    FUNCTION        reduce using rule 33 (valor -> NULO .)
    NEGACION        reduce using rule 33 (valor -> NULO .)
    SIGNO_DOLAR     reduce using rule 33 (valor -> NULO .)
    ENTERO          reduce using rule 33 (valor -> NULO .)
    FLOTANTE        reduce using rule 33 (valor -> NULO .)
    CADENA          reduce using rule 33 (valor -> NULO .)
    BOOLEANO        reduce using rule 33 (valor -> NULO .)
    NEW             reduce using rule 33 (valor -> NULO .)
    ARRAY           reduce using rule 33 (valor -> NULO .)
    CORCHETE_ABRE   reduce using rule 33 (valor -> NULO .)
    FOR             reduce using rule 33 (valor -> NULO .)
    FOREACH         reduce using rule 33 (valor -> NULO .)
    WHILE           reduce using rule 33 (valor -> NULO .)
    CONST           reduce using rule 33 (valor -> NULO .)
    PRIVATE         reduce using rule 33 (valor -> NULO .)
    PUBLIC          reduce using rule 33 (valor -> NULO .)
    PROTECTED       reduce using rule 33 (valor -> NULO .)
    STATIC          reduce using rule 33 (valor -> NULO .)
    VAR             reduce using rule 33 (valor -> NULO .)
    IF              reduce using rule 33 (valor -> NULO .)


state 19

    (17) salida -> ECHO . salidas_posibles FIN_LINEA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    salidas_posibles               shift and go to state 55
    datos                          shift and go to state 56
    decl_variable                  shift and go to state 57
    variable_tipo                  shift and go to state 35

state 20

    (77) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (78) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (79) operaciones_bits -> salidas_posibles . operand_bits salidas_posibles
    (55) operad_arit -> . SUMA
    (56) operad_arit -> . RESTA
    (57) operad_arit -> . MULTIPLICACION
    (58) operad_arit -> . DIVISION
    (59) operad_arit -> . POTENCIA
    (60) operad_arit -> . MODULO
    (72) operand_bits -> . CONJUNCION
    (73) operand_bits -> . DISYUNCION
    (74) operand_bits -> . DISYUNCION_EXC
    (75) operand_bits -> . DESPLAZAR_BITS_IZQ
    (76) operand_bits -> . DESPLAZAR_BITS_DER

    SUMA            shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    POTENCIA        shift and go to state 64
    MODULO          shift and go to state 65
    CONJUNCION      shift and go to state 66
    DISYUNCION      shift and go to state 67
    DISYUNCION_EXC  shift and go to state 68
    DESPLAZAR_BITS_IZQ shift and go to state 69
    DESPLAZAR_BITS_DER shift and go to state 70

    operad_arit                    shift and go to state 58
    operand_bits                   shift and go to state 59

state 21

    (18) salida -> PRINT . PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> PRINT . salidas_posibles FIN_LINEA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    PARENTESIS_ABRE shift and go to state 71
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    salidas_posibles               shift and go to state 72
    datos                          shift and go to state 56
    decl_variable                  shift and go to state 57
    variable_tipo                  shift and go to state 35

state 22

    (20) ingreso -> READLINE . PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 73


state 23

    (36) datos -> CADENA .

    $end            reduce using rule 36 (datos -> CADENA .)
    SUMA            reduce using rule 36 (datos -> CADENA .)
    RESTA           reduce using rule 36 (datos -> CADENA .)
    MULTIPLICACION  reduce using rule 36 (datos -> CADENA .)
    DIVISION        reduce using rule 36 (datos -> CADENA .)
    POTENCIA        reduce using rule 36 (datos -> CADENA .)
    MODULO          reduce using rule 36 (datos -> CADENA .)
    CONJUNCION      reduce using rule 36 (datos -> CADENA .)
    DISYUNCION      reduce using rule 36 (datos -> CADENA .)
    DISYUNCION_EXC  reduce using rule 36 (datos -> CADENA .)
    DESPLAZAR_BITS_IZQ reduce using rule 36 (datos -> CADENA .)
    DESPLAZAR_BITS_DER reduce using rule 36 (datos -> CADENA .)
    FIN_LINEA       reduce using rule 36 (datos -> CADENA .)
    LLAVE_CIERRA    reduce using rule 36 (datos -> CADENA .)
    COMENTARIO_LINEA reduce using rule 36 (datos -> CADENA .)
    COMENTARIO_BLOQUE reduce using rule 36 (datos -> CADENA .)
    NULO            reduce using rule 36 (datos -> CADENA .)
    ECHO            reduce using rule 36 (datos -> CADENA .)
    PRINT           reduce using rule 36 (datos -> CADENA .)
    READLINE        reduce using rule 36 (datos -> CADENA .)
    FGETS           reduce using rule 36 (datos -> CADENA .)
    FSCANF          reduce using rule 36 (datos -> CADENA .)
    FUNCTION        reduce using rule 36 (datos -> CADENA .)
    NEGACION        reduce using rule 36 (datos -> CADENA .)
    SIGNO_DOLAR     reduce using rule 36 (datos -> CADENA .)
    ENTERO          reduce using rule 36 (datos -> CADENA .)
    FLOTANTE        reduce using rule 36 (datos -> CADENA .)
    CADENA          reduce using rule 36 (datos -> CADENA .)
    BOOLEANO        reduce using rule 36 (datos -> CADENA .)
    NEW             reduce using rule 36 (datos -> CADENA .)
    ARRAY           reduce using rule 36 (datos -> CADENA .)
    CORCHETE_ABRE   reduce using rule 36 (datos -> CADENA .)
    FOR             reduce using rule 36 (datos -> CADENA .)
    FOREACH         reduce using rule 36 (datos -> CADENA .)
    WHILE           reduce using rule 36 (datos -> CADENA .)
    CONST           reduce using rule 36 (datos -> CADENA .)
    PRIVATE         reduce using rule 36 (datos -> CADENA .)
    PUBLIC          reduce using rule 36 (datos -> CADENA .)
    PROTECTED       reduce using rule 36 (datos -> CADENA .)
    STATIC          reduce using rule 36 (datos -> CADENA .)
    VAR             reduce using rule 36 (datos -> CADENA .)
    IF              reduce using rule 36 (datos -> CADENA .)
    COMA            reduce using rule 36 (datos -> CADENA .)
    IGUAL           reduce using rule 36 (datos -> CADENA .)
    CORCHETE_CIERRA reduce using rule 36 (datos -> CADENA .)
    PARENTESIS_CIERRA reduce using rule 36 (datos -> CADENA .)


state 24

    (21) ingreso -> FGETS . PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 74


state 25

    (22) ingreso -> FSCANF . PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_ABRE shift and go to state 75


state 26

    (29) decl_variable -> SIGNO_DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 76


state 27

    (42) estructuras_datos -> pila . FIN_LINEA

    FIN_LINEA       shift and go to state 77


state 28

    (43) estructuras_datos -> arreglo . FIN_LINEA

    FIN_LINEA       shift and go to state 78


state 29

    (87) estructuras_control -> for .

    $end            reduce using rule 87 (estructuras_control -> for .)
    LLAVE_CIERRA    reduce using rule 87 (estructuras_control -> for .)
    COMENTARIO_LINEA reduce using rule 87 (estructuras_control -> for .)
    COMENTARIO_BLOQUE reduce using rule 87 (estructuras_control -> for .)
    NULO            reduce using rule 87 (estructuras_control -> for .)
    ECHO            reduce using rule 87 (estructuras_control -> for .)
    PRINT           reduce using rule 87 (estructuras_control -> for .)
    READLINE        reduce using rule 87 (estructuras_control -> for .)
    FGETS           reduce using rule 87 (estructuras_control -> for .)
    FSCANF          reduce using rule 87 (estructuras_control -> for .)
    FUNCTION        reduce using rule 87 (estructuras_control -> for .)
    NEGACION        reduce using rule 87 (estructuras_control -> for .)
    SIGNO_DOLAR     reduce using rule 87 (estructuras_control -> for .)
    ENTERO          reduce using rule 87 (estructuras_control -> for .)
    FLOTANTE        reduce using rule 87 (estructuras_control -> for .)
    CADENA          reduce using rule 87 (estructuras_control -> for .)
    BOOLEANO        reduce using rule 87 (estructuras_control -> for .)
    NEW             reduce using rule 87 (estructuras_control -> for .)
    ARRAY           reduce using rule 87 (estructuras_control -> for .)
    CORCHETE_ABRE   reduce using rule 87 (estructuras_control -> for .)
    FOR             reduce using rule 87 (estructuras_control -> for .)
    FOREACH         reduce using rule 87 (estructuras_control -> for .)
    WHILE           reduce using rule 87 (estructuras_control -> for .)
    CONST           reduce using rule 87 (estructuras_control -> for .)
    PRIVATE         reduce using rule 87 (estructuras_control -> for .)
    PUBLIC          reduce using rule 87 (estructuras_control -> for .)
    PROTECTED       reduce using rule 87 (estructuras_control -> for .)
    STATIC          reduce using rule 87 (estructuras_control -> for .)
    VAR             reduce using rule 87 (estructuras_control -> for .)
    IF              reduce using rule 87 (estructuras_control -> for .)


state 30

    (88) estructuras_control -> foreach .

    $end            reduce using rule 88 (estructuras_control -> foreach .)
    LLAVE_CIERRA    reduce using rule 88 (estructuras_control -> foreach .)
    COMENTARIO_LINEA reduce using rule 88 (estructuras_control -> foreach .)
    COMENTARIO_BLOQUE reduce using rule 88 (estructuras_control -> foreach .)
    NULO            reduce using rule 88 (estructuras_control -> foreach .)
    ECHO            reduce using rule 88 (estructuras_control -> foreach .)
    PRINT           reduce using rule 88 (estructuras_control -> foreach .)
    READLINE        reduce using rule 88 (estructuras_control -> foreach .)
    FGETS           reduce using rule 88 (estructuras_control -> foreach .)
    FSCANF          reduce using rule 88 (estructuras_control -> foreach .)
    FUNCTION        reduce using rule 88 (estructuras_control -> foreach .)
    NEGACION        reduce using rule 88 (estructuras_control -> foreach .)
    SIGNO_DOLAR     reduce using rule 88 (estructuras_control -> foreach .)
    ENTERO          reduce using rule 88 (estructuras_control -> foreach .)
    FLOTANTE        reduce using rule 88 (estructuras_control -> foreach .)
    CADENA          reduce using rule 88 (estructuras_control -> foreach .)
    BOOLEANO        reduce using rule 88 (estructuras_control -> foreach .)
    NEW             reduce using rule 88 (estructuras_control -> foreach .)
    ARRAY           reduce using rule 88 (estructuras_control -> foreach .)
    CORCHETE_ABRE   reduce using rule 88 (estructuras_control -> foreach .)
    FOR             reduce using rule 88 (estructuras_control -> foreach .)
    FOREACH         reduce using rule 88 (estructuras_control -> foreach .)
    WHILE           reduce using rule 88 (estructuras_control -> foreach .)
    CONST           reduce using rule 88 (estructuras_control -> foreach .)
    PRIVATE         reduce using rule 88 (estructuras_control -> foreach .)
    PUBLIC          reduce using rule 88 (estructuras_control -> foreach .)
    PROTECTED       reduce using rule 88 (estructuras_control -> foreach .)
    STATIC          reduce using rule 88 (estructuras_control -> foreach .)
    VAR             reduce using rule 88 (estructuras_control -> foreach .)
    IF              reduce using rule 88 (estructuras_control -> foreach .)


state 31

    (89) estructuras_control -> if_else .

    $end            reduce using rule 89 (estructuras_control -> if_else .)
    LLAVE_CIERRA    reduce using rule 89 (estructuras_control -> if_else .)
    COMENTARIO_LINEA reduce using rule 89 (estructuras_control -> if_else .)
    COMENTARIO_BLOQUE reduce using rule 89 (estructuras_control -> if_else .)
    NULO            reduce using rule 89 (estructuras_control -> if_else .)
    ECHO            reduce using rule 89 (estructuras_control -> if_else .)
    PRINT           reduce using rule 89 (estructuras_control -> if_else .)
    READLINE        reduce using rule 89 (estructuras_control -> if_else .)
    FGETS           reduce using rule 89 (estructuras_control -> if_else .)
    FSCANF          reduce using rule 89 (estructuras_control -> if_else .)
    FUNCTION        reduce using rule 89 (estructuras_control -> if_else .)
    NEGACION        reduce using rule 89 (estructuras_control -> if_else .)
    SIGNO_DOLAR     reduce using rule 89 (estructuras_control -> if_else .)
    ENTERO          reduce using rule 89 (estructuras_control -> if_else .)
    FLOTANTE        reduce using rule 89 (estructuras_control -> if_else .)
    CADENA          reduce using rule 89 (estructuras_control -> if_else .)
    BOOLEANO        reduce using rule 89 (estructuras_control -> if_else .)
    NEW             reduce using rule 89 (estructuras_control -> if_else .)
    ARRAY           reduce using rule 89 (estructuras_control -> if_else .)
    CORCHETE_ABRE   reduce using rule 89 (estructuras_control -> if_else .)
    FOR             reduce using rule 89 (estructuras_control -> if_else .)
    FOREACH         reduce using rule 89 (estructuras_control -> if_else .)
    WHILE           reduce using rule 89 (estructuras_control -> if_else .)
    CONST           reduce using rule 89 (estructuras_control -> if_else .)
    PRIVATE         reduce using rule 89 (estructuras_control -> if_else .)
    PUBLIC          reduce using rule 89 (estructuras_control -> if_else .)
    PROTECTED       reduce using rule 89 (estructuras_control -> if_else .)
    STATIC          reduce using rule 89 (estructuras_control -> if_else .)
    VAR             reduce using rule 89 (estructuras_control -> if_else .)
    IF              reduce using rule 89 (estructuras_control -> if_else .)


state 32

    (90) estructuras_control -> while .

    $end            reduce using rule 90 (estructuras_control -> while .)
    LLAVE_CIERRA    reduce using rule 90 (estructuras_control -> while .)
    COMENTARIO_LINEA reduce using rule 90 (estructuras_control -> while .)
    COMENTARIO_BLOQUE reduce using rule 90 (estructuras_control -> while .)
    NULO            reduce using rule 90 (estructuras_control -> while .)
    ECHO            reduce using rule 90 (estructuras_control -> while .)
    PRINT           reduce using rule 90 (estructuras_control -> while .)
    READLINE        reduce using rule 90 (estructuras_control -> while .)
    FGETS           reduce using rule 90 (estructuras_control -> while .)
    FSCANF          reduce using rule 90 (estructuras_control -> while .)
    FUNCTION        reduce using rule 90 (estructuras_control -> while .)
    NEGACION        reduce using rule 90 (estructuras_control -> while .)
    SIGNO_DOLAR     reduce using rule 90 (estructuras_control -> while .)
    ENTERO          reduce using rule 90 (estructuras_control -> while .)
    FLOTANTE        reduce using rule 90 (estructuras_control -> while .)
    CADENA          reduce using rule 90 (estructuras_control -> while .)
    BOOLEANO        reduce using rule 90 (estructuras_control -> while .)
    NEW             reduce using rule 90 (estructuras_control -> while .)
    ARRAY           reduce using rule 90 (estructuras_control -> while .)
    CORCHETE_ABRE   reduce using rule 90 (estructuras_control -> while .)
    FOR             reduce using rule 90 (estructuras_control -> while .)
    FOREACH         reduce using rule 90 (estructuras_control -> while .)
    WHILE           reduce using rule 90 (estructuras_control -> while .)
    CONST           reduce using rule 90 (estructuras_control -> while .)
    PRIVATE         reduce using rule 90 (estructuras_control -> while .)
    PUBLIC          reduce using rule 90 (estructuras_control -> while .)
    PROTECTED       reduce using rule 90 (estructuras_control -> while .)
    STATIC          reduce using rule 90 (estructuras_control -> while .)
    VAR             reduce using rule 90 (estructuras_control -> while .)
    IF              reduce using rule 90 (estructuras_control -> while .)


state 33

    (38) funcion -> FUNCTION . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> FUNCTION . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 79


state 34

    (80) operaciones_bits -> NEGACION . salidas_posibles
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    salidas_posibles               shift and go to state 80
    datos                          shift and go to state 56
    decl_variable                  shift and go to state 57
    variable_tipo                  shift and go to state 35

state 35

    (30) decl_variable -> variable_tipo . SIGNO_DOLAR IDENTIFICADOR

    SIGNO_DOLAR     shift and go to state 81


state 36

    (34) datos -> ENTERO .

    $end            reduce using rule 34 (datos -> ENTERO .)
    SUMA            reduce using rule 34 (datos -> ENTERO .)
    RESTA           reduce using rule 34 (datos -> ENTERO .)
    MULTIPLICACION  reduce using rule 34 (datos -> ENTERO .)
    DIVISION        reduce using rule 34 (datos -> ENTERO .)
    POTENCIA        reduce using rule 34 (datos -> ENTERO .)
    MODULO          reduce using rule 34 (datos -> ENTERO .)
    CONJUNCION      reduce using rule 34 (datos -> ENTERO .)
    DISYUNCION      reduce using rule 34 (datos -> ENTERO .)
    DISYUNCION_EXC  reduce using rule 34 (datos -> ENTERO .)
    DESPLAZAR_BITS_IZQ reduce using rule 34 (datos -> ENTERO .)
    DESPLAZAR_BITS_DER reduce using rule 34 (datos -> ENTERO .)
    FIN_LINEA       reduce using rule 34 (datos -> ENTERO .)
    LLAVE_CIERRA    reduce using rule 34 (datos -> ENTERO .)
    COMENTARIO_LINEA reduce using rule 34 (datos -> ENTERO .)
    COMENTARIO_BLOQUE reduce using rule 34 (datos -> ENTERO .)
    NULO            reduce using rule 34 (datos -> ENTERO .)
    ECHO            reduce using rule 34 (datos -> ENTERO .)
    PRINT           reduce using rule 34 (datos -> ENTERO .)
    READLINE        reduce using rule 34 (datos -> ENTERO .)
    FGETS           reduce using rule 34 (datos -> ENTERO .)
    FSCANF          reduce using rule 34 (datos -> ENTERO .)
    FUNCTION        reduce using rule 34 (datos -> ENTERO .)
    NEGACION        reduce using rule 34 (datos -> ENTERO .)
    SIGNO_DOLAR     reduce using rule 34 (datos -> ENTERO .)
    ENTERO          reduce using rule 34 (datos -> ENTERO .)
    FLOTANTE        reduce using rule 34 (datos -> ENTERO .)
    CADENA          reduce using rule 34 (datos -> ENTERO .)
    BOOLEANO        reduce using rule 34 (datos -> ENTERO .)
    NEW             reduce using rule 34 (datos -> ENTERO .)
    ARRAY           reduce using rule 34 (datos -> ENTERO .)
    CORCHETE_ABRE   reduce using rule 34 (datos -> ENTERO .)
    FOR             reduce using rule 34 (datos -> ENTERO .)
    FOREACH         reduce using rule 34 (datos -> ENTERO .)
    WHILE           reduce using rule 34 (datos -> ENTERO .)
    CONST           reduce using rule 34 (datos -> ENTERO .)
    PRIVATE         reduce using rule 34 (datos -> ENTERO .)
    PUBLIC          reduce using rule 34 (datos -> ENTERO .)
    PROTECTED       reduce using rule 34 (datos -> ENTERO .)
    STATIC          reduce using rule 34 (datos -> ENTERO .)
    VAR             reduce using rule 34 (datos -> ENTERO .)
    IF              reduce using rule 34 (datos -> ENTERO .)
    COMA            reduce using rule 34 (datos -> ENTERO .)
    IGUAL           reduce using rule 34 (datos -> ENTERO .)
    CORCHETE_CIERRA reduce using rule 34 (datos -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 34 (datos -> ENTERO .)


state 37

    (35) datos -> FLOTANTE .

    $end            reduce using rule 35 (datos -> FLOTANTE .)
    SUMA            reduce using rule 35 (datos -> FLOTANTE .)
    RESTA           reduce using rule 35 (datos -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 35 (datos -> FLOTANTE .)
    DIVISION        reduce using rule 35 (datos -> FLOTANTE .)
    POTENCIA        reduce using rule 35 (datos -> FLOTANTE .)
    MODULO          reduce using rule 35 (datos -> FLOTANTE .)
    CONJUNCION      reduce using rule 35 (datos -> FLOTANTE .)
    DISYUNCION      reduce using rule 35 (datos -> FLOTANTE .)
    DISYUNCION_EXC  reduce using rule 35 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_IZQ reduce using rule 35 (datos -> FLOTANTE .)
    DESPLAZAR_BITS_DER reduce using rule 35 (datos -> FLOTANTE .)
    FIN_LINEA       reduce using rule 35 (datos -> FLOTANTE .)
    LLAVE_CIERRA    reduce using rule 35 (datos -> FLOTANTE .)
    COMENTARIO_LINEA reduce using rule 35 (datos -> FLOTANTE .)
    COMENTARIO_BLOQUE reduce using rule 35 (datos -> FLOTANTE .)
    NULO            reduce using rule 35 (datos -> FLOTANTE .)
    ECHO            reduce using rule 35 (datos -> FLOTANTE .)
    PRINT           reduce using rule 35 (datos -> FLOTANTE .)
    READLINE        reduce using rule 35 (datos -> FLOTANTE .)
    FGETS           reduce using rule 35 (datos -> FLOTANTE .)
    FSCANF          reduce using rule 35 (datos -> FLOTANTE .)
    FUNCTION        reduce using rule 35 (datos -> FLOTANTE .)
    NEGACION        reduce using rule 35 (datos -> FLOTANTE .)
    SIGNO_DOLAR     reduce using rule 35 (datos -> FLOTANTE .)
    ENTERO          reduce using rule 35 (datos -> FLOTANTE .)
    FLOTANTE        reduce using rule 35 (datos -> FLOTANTE .)
    CADENA          reduce using rule 35 (datos -> FLOTANTE .)
    BOOLEANO        reduce using rule 35 (datos -> FLOTANTE .)
    NEW             reduce using rule 35 (datos -> FLOTANTE .)
    ARRAY           reduce using rule 35 (datos -> FLOTANTE .)
    CORCHETE_ABRE   reduce using rule 35 (datos -> FLOTANTE .)
    FOR             reduce using rule 35 (datos -> FLOTANTE .)
    FOREACH         reduce using rule 35 (datos -> FLOTANTE .)
    WHILE           reduce using rule 35 (datos -> FLOTANTE .)
    CONST           reduce using rule 35 (datos -> FLOTANTE .)
    PRIVATE         reduce using rule 35 (datos -> FLOTANTE .)
    PUBLIC          reduce using rule 35 (datos -> FLOTANTE .)
    PROTECTED       reduce using rule 35 (datos -> FLOTANTE .)
    STATIC          reduce using rule 35 (datos -> FLOTANTE .)
    VAR             reduce using rule 35 (datos -> FLOTANTE .)
    IF              reduce using rule 35 (datos -> FLOTANTE .)
    COMA            reduce using rule 35 (datos -> FLOTANTE .)
    IGUAL           reduce using rule 35 (datos -> FLOTANTE .)
    CORCHETE_CIERRA reduce using rule 35 (datos -> FLOTANTE .)
    PARENTESIS_CIERRA reduce using rule 35 (datos -> FLOTANTE .)


state 38

    (37) datos -> BOOLEANO .

    $end            reduce using rule 37 (datos -> BOOLEANO .)
    SUMA            reduce using rule 37 (datos -> BOOLEANO .)
    RESTA           reduce using rule 37 (datos -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 37 (datos -> BOOLEANO .)
    DIVISION        reduce using rule 37 (datos -> BOOLEANO .)
    POTENCIA        reduce using rule 37 (datos -> BOOLEANO .)
    MODULO          reduce using rule 37 (datos -> BOOLEANO .)
    CONJUNCION      reduce using rule 37 (datos -> BOOLEANO .)
    DISYUNCION      reduce using rule 37 (datos -> BOOLEANO .)
    DISYUNCION_EXC  reduce using rule 37 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_IZQ reduce using rule 37 (datos -> BOOLEANO .)
    DESPLAZAR_BITS_DER reduce using rule 37 (datos -> BOOLEANO .)
    FIN_LINEA       reduce using rule 37 (datos -> BOOLEANO .)
    LLAVE_CIERRA    reduce using rule 37 (datos -> BOOLEANO .)
    COMENTARIO_LINEA reduce using rule 37 (datos -> BOOLEANO .)
    COMENTARIO_BLOQUE reduce using rule 37 (datos -> BOOLEANO .)
    NULO            reduce using rule 37 (datos -> BOOLEANO .)
    ECHO            reduce using rule 37 (datos -> BOOLEANO .)
    PRINT           reduce using rule 37 (datos -> BOOLEANO .)
    READLINE        reduce using rule 37 (datos -> BOOLEANO .)
    FGETS           reduce using rule 37 (datos -> BOOLEANO .)
    FSCANF          reduce using rule 37 (datos -> BOOLEANO .)
    FUNCTION        reduce using rule 37 (datos -> BOOLEANO .)
    NEGACION        reduce using rule 37 (datos -> BOOLEANO .)
    SIGNO_DOLAR     reduce using rule 37 (datos -> BOOLEANO .)
    ENTERO          reduce using rule 37 (datos -> BOOLEANO .)
    FLOTANTE        reduce using rule 37 (datos -> BOOLEANO .)
    CADENA          reduce using rule 37 (datos -> BOOLEANO .)
    BOOLEANO        reduce using rule 37 (datos -> BOOLEANO .)
    NEW             reduce using rule 37 (datos -> BOOLEANO .)
    ARRAY           reduce using rule 37 (datos -> BOOLEANO .)
    CORCHETE_ABRE   reduce using rule 37 (datos -> BOOLEANO .)
    FOR             reduce using rule 37 (datos -> BOOLEANO .)
    FOREACH         reduce using rule 37 (datos -> BOOLEANO .)
    WHILE           reduce using rule 37 (datos -> BOOLEANO .)
    CONST           reduce using rule 37 (datos -> BOOLEANO .)
    PRIVATE         reduce using rule 37 (datos -> BOOLEANO .)
    PUBLIC          reduce using rule 37 (datos -> BOOLEANO .)
    PROTECTED       reduce using rule 37 (datos -> BOOLEANO .)
    STATIC          reduce using rule 37 (datos -> BOOLEANO .)
    VAR             reduce using rule 37 (datos -> BOOLEANO .)
    IF              reduce using rule 37 (datos -> BOOLEANO .)
    COMA            reduce using rule 37 (datos -> BOOLEANO .)
    IGUAL           reduce using rule 37 (datos -> BOOLEANO .)
    CORCHETE_CIERRA reduce using rule 37 (datos -> BOOLEANO .)
    PARENTESIS_CIERRA reduce using rule 37 (datos -> BOOLEANO .)


state 39

    (44) pila -> NEW . STACK PARENTESIS_ABRE PARENTESIS_CIERRA

    STACK           shift and go to state 82


state 40

    (45) arreglo -> ARRAY . PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) arreglo -> ARRAY . PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (49) arreglo -> ARRAY . PARENTESIS_ABRE asociacion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 83


state 41

    (46) arreglo -> CORCHETE_ABRE . CORCHETE_CIERRA
    (48) arreglo -> CORCHETE_ABRE . elementos CORCHETE_CIERRA
    (50) arreglo -> CORCHETE_ABRE . asociacion CORCHETE_CIERRA
    (53) elementos -> . datos
    (54) elementos -> . datos COMA elementos
    (51) asociacion -> . datos IGUAL MAYOR datos
    (52) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO

    CORCHETE_CIERRA shift and go to state 84
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38

    elementos                      shift and go to state 85
    asociacion                     shift and go to state 86
    datos                          shift and go to state 87

state 42

    (95) for -> FOR . PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 88


state 43

    (108) foreach -> FOREACH . PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> FOREACH . PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 89


state 44

    (111) if_else -> if_else_inicio . if_else_fin
    (112) if_else -> if_else_inicio . if_else_cuerpo if_else_fin
    (116) if_else_fin -> . ELSE LLAVE_ABRE bloque LLAVE_CIERRA
    (114) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (115) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    ELSE            shift and go to state 92
    ELSEIF          shift and go to state 93

    if_else_fin                    shift and go to state 90
    if_else_cuerpo                 shift and go to state 91

state 45

    (110) while -> WHILE . PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 94


state 46

    (23) variable_tipo -> CONST .

    SIGNO_DOLAR     reduce using rule 23 (variable_tipo -> CONST .)


state 47

    (24) variable_tipo -> PRIVATE .

    SIGNO_DOLAR     reduce using rule 24 (variable_tipo -> PRIVATE .)


state 48

    (25) variable_tipo -> PUBLIC .

    SIGNO_DOLAR     reduce using rule 25 (variable_tipo -> PUBLIC .)


state 49

    (26) variable_tipo -> PROTECTED .

    SIGNO_DOLAR     reduce using rule 26 (variable_tipo -> PROTECTED .)


state 50

    (27) variable_tipo -> STATIC .

    SIGNO_DOLAR     reduce using rule 27 (variable_tipo -> STATIC .)


state 51

    (28) variable_tipo -> VAR .

    SIGNO_DOLAR     reduce using rule 28 (variable_tipo -> VAR .)


state 52

    (113) if_else_inicio -> IF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 95


state 53

    (3) clase -> CLASS IDENTIFICADOR . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 96


state 54

    (31) asignacion -> decl_variable IGUAL . valor FIN_LINEA
    (32) valor -> . datos
    (33) valor -> . NULO
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO

    NULO            shift and go to state 18
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38

    valor                          shift and go to state 97
    datos                          shift and go to state 98

state 55

    (17) salida -> ECHO salidas_posibles . FIN_LINEA

    FIN_LINEA       shift and go to state 99


state 56

    (15) salidas_posibles -> datos .

    FIN_LINEA       reduce using rule 15 (salidas_posibles -> datos .)
    $end            reduce using rule 15 (salidas_posibles -> datos .)
    LLAVE_CIERRA    reduce using rule 15 (salidas_posibles -> datos .)
    COMENTARIO_LINEA reduce using rule 15 (salidas_posibles -> datos .)
    COMENTARIO_BLOQUE reduce using rule 15 (salidas_posibles -> datos .)
    NULO            reduce using rule 15 (salidas_posibles -> datos .)
    ECHO            reduce using rule 15 (salidas_posibles -> datos .)
    PRINT           reduce using rule 15 (salidas_posibles -> datos .)
    READLINE        reduce using rule 15 (salidas_posibles -> datos .)
    FGETS           reduce using rule 15 (salidas_posibles -> datos .)
    FSCANF          reduce using rule 15 (salidas_posibles -> datos .)
    FUNCTION        reduce using rule 15 (salidas_posibles -> datos .)
    NEGACION        reduce using rule 15 (salidas_posibles -> datos .)
    SIGNO_DOLAR     reduce using rule 15 (salidas_posibles -> datos .)
    ENTERO          reduce using rule 15 (salidas_posibles -> datos .)
    FLOTANTE        reduce using rule 15 (salidas_posibles -> datos .)
    CADENA          reduce using rule 15 (salidas_posibles -> datos .)
    BOOLEANO        reduce using rule 15 (salidas_posibles -> datos .)
    NEW             reduce using rule 15 (salidas_posibles -> datos .)
    ARRAY           reduce using rule 15 (salidas_posibles -> datos .)
    CORCHETE_ABRE   reduce using rule 15 (salidas_posibles -> datos .)
    FOR             reduce using rule 15 (salidas_posibles -> datos .)
    FOREACH         reduce using rule 15 (salidas_posibles -> datos .)
    WHILE           reduce using rule 15 (salidas_posibles -> datos .)
    CONST           reduce using rule 15 (salidas_posibles -> datos .)
    PRIVATE         reduce using rule 15 (salidas_posibles -> datos .)
    PUBLIC          reduce using rule 15 (salidas_posibles -> datos .)
    PROTECTED       reduce using rule 15 (salidas_posibles -> datos .)
    STATIC          reduce using rule 15 (salidas_posibles -> datos .)
    VAR             reduce using rule 15 (salidas_posibles -> datos .)
    IF              reduce using rule 15 (salidas_posibles -> datos .)
    SUMA            reduce using rule 15 (salidas_posibles -> datos .)
    RESTA           reduce using rule 15 (salidas_posibles -> datos .)
    MULTIPLICACION  reduce using rule 15 (salidas_posibles -> datos .)
    DIVISION        reduce using rule 15 (salidas_posibles -> datos .)
    POTENCIA        reduce using rule 15 (salidas_posibles -> datos .)
    MODULO          reduce using rule 15 (salidas_posibles -> datos .)
    PARENTESIS_CIERRA reduce using rule 15 (salidas_posibles -> datos .)


state 57

    (16) salidas_posibles -> decl_variable .

    FIN_LINEA       reduce using rule 16 (salidas_posibles -> decl_variable .)
    $end            reduce using rule 16 (salidas_posibles -> decl_variable .)
    LLAVE_CIERRA    reduce using rule 16 (salidas_posibles -> decl_variable .)
    COMENTARIO_LINEA reduce using rule 16 (salidas_posibles -> decl_variable .)
    COMENTARIO_BLOQUE reduce using rule 16 (salidas_posibles -> decl_variable .)
    NULO            reduce using rule 16 (salidas_posibles -> decl_variable .)
    ECHO            reduce using rule 16 (salidas_posibles -> decl_variable .)
    PRINT           reduce using rule 16 (salidas_posibles -> decl_variable .)
    READLINE        reduce using rule 16 (salidas_posibles -> decl_variable .)
    FGETS           reduce using rule 16 (salidas_posibles -> decl_variable .)
    FSCANF          reduce using rule 16 (salidas_posibles -> decl_variable .)
    FUNCTION        reduce using rule 16 (salidas_posibles -> decl_variable .)
    NEGACION        reduce using rule 16 (salidas_posibles -> decl_variable .)
    SIGNO_DOLAR     reduce using rule 16 (salidas_posibles -> decl_variable .)
    ENTERO          reduce using rule 16 (salidas_posibles -> decl_variable .)
    FLOTANTE        reduce using rule 16 (salidas_posibles -> decl_variable .)
    CADENA          reduce using rule 16 (salidas_posibles -> decl_variable .)
    BOOLEANO        reduce using rule 16 (salidas_posibles -> decl_variable .)
    NEW             reduce using rule 16 (salidas_posibles -> decl_variable .)
    ARRAY           reduce using rule 16 (salidas_posibles -> decl_variable .)
    CORCHETE_ABRE   reduce using rule 16 (salidas_posibles -> decl_variable .)
    FOR             reduce using rule 16 (salidas_posibles -> decl_variable .)
    FOREACH         reduce using rule 16 (salidas_posibles -> decl_variable .)
    WHILE           reduce using rule 16 (salidas_posibles -> decl_variable .)
    CONST           reduce using rule 16 (salidas_posibles -> decl_variable .)
    PRIVATE         reduce using rule 16 (salidas_posibles -> decl_variable .)
    PUBLIC          reduce using rule 16 (salidas_posibles -> decl_variable .)
    PROTECTED       reduce using rule 16 (salidas_posibles -> decl_variable .)
    STATIC          reduce using rule 16 (salidas_posibles -> decl_variable .)
    VAR             reduce using rule 16 (salidas_posibles -> decl_variable .)
    IF              reduce using rule 16 (salidas_posibles -> decl_variable .)
    SUMA            reduce using rule 16 (salidas_posibles -> decl_variable .)
    RESTA           reduce using rule 16 (salidas_posibles -> decl_variable .)
    MULTIPLICACION  reduce using rule 16 (salidas_posibles -> decl_variable .)
    DIVISION        reduce using rule 16 (salidas_posibles -> decl_variable .)
    POTENCIA        reduce using rule 16 (salidas_posibles -> decl_variable .)
    MODULO          reduce using rule 16 (salidas_posibles -> decl_variable .)
    PARENTESIS_CIERRA reduce using rule 16 (salidas_posibles -> decl_variable .)


state 58

    (77) operaciones_arit -> salidas_posibles operad_arit . salidas_posibles
    (78) operaciones_arit -> salidas_posibles operad_arit . operaciones_arit
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (77) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (78) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    salidas_posibles               shift and go to state 100
    operaciones_arit               shift and go to state 101
    datos                          shift and go to state 56
    decl_variable                  shift and go to state 57
    variable_tipo                  shift and go to state 35

state 59

    (79) operaciones_bits -> salidas_posibles operand_bits . salidas_posibles
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    salidas_posibles               shift and go to state 102
    datos                          shift and go to state 56
    decl_variable                  shift and go to state 57
    variable_tipo                  shift and go to state 35

state 60

    (55) operad_arit -> SUMA .

    ENTERO          reduce using rule 55 (operad_arit -> SUMA .)
    FLOTANTE        reduce using rule 55 (operad_arit -> SUMA .)
    CADENA          reduce using rule 55 (operad_arit -> SUMA .)
    BOOLEANO        reduce using rule 55 (operad_arit -> SUMA .)
    SIGNO_DOLAR     reduce using rule 55 (operad_arit -> SUMA .)
    CONST           reduce using rule 55 (operad_arit -> SUMA .)
    PRIVATE         reduce using rule 55 (operad_arit -> SUMA .)
    PUBLIC          reduce using rule 55 (operad_arit -> SUMA .)
    PROTECTED       reduce using rule 55 (operad_arit -> SUMA .)
    STATIC          reduce using rule 55 (operad_arit -> SUMA .)
    VAR             reduce using rule 55 (operad_arit -> SUMA .)


state 61

    (56) operad_arit -> RESTA .

    ENTERO          reduce using rule 56 (operad_arit -> RESTA .)
    FLOTANTE        reduce using rule 56 (operad_arit -> RESTA .)
    CADENA          reduce using rule 56 (operad_arit -> RESTA .)
    BOOLEANO        reduce using rule 56 (operad_arit -> RESTA .)
    SIGNO_DOLAR     reduce using rule 56 (operad_arit -> RESTA .)
    CONST           reduce using rule 56 (operad_arit -> RESTA .)
    PRIVATE         reduce using rule 56 (operad_arit -> RESTA .)
    PUBLIC          reduce using rule 56 (operad_arit -> RESTA .)
    PROTECTED       reduce using rule 56 (operad_arit -> RESTA .)
    STATIC          reduce using rule 56 (operad_arit -> RESTA .)
    VAR             reduce using rule 56 (operad_arit -> RESTA .)


state 62

    (57) operad_arit -> MULTIPLICACION .

    ENTERO          reduce using rule 57 (operad_arit -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 57 (operad_arit -> MULTIPLICACION .)
    CADENA          reduce using rule 57 (operad_arit -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 57 (operad_arit -> MULTIPLICACION .)
    SIGNO_DOLAR     reduce using rule 57 (operad_arit -> MULTIPLICACION .)
    CONST           reduce using rule 57 (operad_arit -> MULTIPLICACION .)
    PRIVATE         reduce using rule 57 (operad_arit -> MULTIPLICACION .)
    PUBLIC          reduce using rule 57 (operad_arit -> MULTIPLICACION .)
    PROTECTED       reduce using rule 57 (operad_arit -> MULTIPLICACION .)
    STATIC          reduce using rule 57 (operad_arit -> MULTIPLICACION .)
    VAR             reduce using rule 57 (operad_arit -> MULTIPLICACION .)


state 63

    (58) operad_arit -> DIVISION .

    ENTERO          reduce using rule 58 (operad_arit -> DIVISION .)
    FLOTANTE        reduce using rule 58 (operad_arit -> DIVISION .)
    CADENA          reduce using rule 58 (operad_arit -> DIVISION .)
    BOOLEANO        reduce using rule 58 (operad_arit -> DIVISION .)
    SIGNO_DOLAR     reduce using rule 58 (operad_arit -> DIVISION .)
    CONST           reduce using rule 58 (operad_arit -> DIVISION .)
    PRIVATE         reduce using rule 58 (operad_arit -> DIVISION .)
    PUBLIC          reduce using rule 58 (operad_arit -> DIVISION .)
    PROTECTED       reduce using rule 58 (operad_arit -> DIVISION .)
    STATIC          reduce using rule 58 (operad_arit -> DIVISION .)
    VAR             reduce using rule 58 (operad_arit -> DIVISION .)


state 64

    (59) operad_arit -> POTENCIA .

    ENTERO          reduce using rule 59 (operad_arit -> POTENCIA .)
    FLOTANTE        reduce using rule 59 (operad_arit -> POTENCIA .)
    CADENA          reduce using rule 59 (operad_arit -> POTENCIA .)
    BOOLEANO        reduce using rule 59 (operad_arit -> POTENCIA .)
    SIGNO_DOLAR     reduce using rule 59 (operad_arit -> POTENCIA .)
    CONST           reduce using rule 59 (operad_arit -> POTENCIA .)
    PRIVATE         reduce using rule 59 (operad_arit -> POTENCIA .)
    PUBLIC          reduce using rule 59 (operad_arit -> POTENCIA .)
    PROTECTED       reduce using rule 59 (operad_arit -> POTENCIA .)
    STATIC          reduce using rule 59 (operad_arit -> POTENCIA .)
    VAR             reduce using rule 59 (operad_arit -> POTENCIA .)


state 65

    (60) operad_arit -> MODULO .

    ENTERO          reduce using rule 60 (operad_arit -> MODULO .)
    FLOTANTE        reduce using rule 60 (operad_arit -> MODULO .)
    CADENA          reduce using rule 60 (operad_arit -> MODULO .)
    BOOLEANO        reduce using rule 60 (operad_arit -> MODULO .)
    SIGNO_DOLAR     reduce using rule 60 (operad_arit -> MODULO .)
    CONST           reduce using rule 60 (operad_arit -> MODULO .)
    PRIVATE         reduce using rule 60 (operad_arit -> MODULO .)
    PUBLIC          reduce using rule 60 (operad_arit -> MODULO .)
    PROTECTED       reduce using rule 60 (operad_arit -> MODULO .)
    STATIC          reduce using rule 60 (operad_arit -> MODULO .)
    VAR             reduce using rule 60 (operad_arit -> MODULO .)


state 66

    (72) operand_bits -> CONJUNCION .

    ENTERO          reduce using rule 72 (operand_bits -> CONJUNCION .)
    FLOTANTE        reduce using rule 72 (operand_bits -> CONJUNCION .)
    CADENA          reduce using rule 72 (operand_bits -> CONJUNCION .)
    BOOLEANO        reduce using rule 72 (operand_bits -> CONJUNCION .)
    SIGNO_DOLAR     reduce using rule 72 (operand_bits -> CONJUNCION .)
    CONST           reduce using rule 72 (operand_bits -> CONJUNCION .)
    PRIVATE         reduce using rule 72 (operand_bits -> CONJUNCION .)
    PUBLIC          reduce using rule 72 (operand_bits -> CONJUNCION .)
    PROTECTED       reduce using rule 72 (operand_bits -> CONJUNCION .)
    STATIC          reduce using rule 72 (operand_bits -> CONJUNCION .)
    VAR             reduce using rule 72 (operand_bits -> CONJUNCION .)


state 67

    (73) operand_bits -> DISYUNCION .

    ENTERO          reduce using rule 73 (operand_bits -> DISYUNCION .)
    FLOTANTE        reduce using rule 73 (operand_bits -> DISYUNCION .)
    CADENA          reduce using rule 73 (operand_bits -> DISYUNCION .)
    BOOLEANO        reduce using rule 73 (operand_bits -> DISYUNCION .)
    SIGNO_DOLAR     reduce using rule 73 (operand_bits -> DISYUNCION .)
    CONST           reduce using rule 73 (operand_bits -> DISYUNCION .)
    PRIVATE         reduce using rule 73 (operand_bits -> DISYUNCION .)
    PUBLIC          reduce using rule 73 (operand_bits -> DISYUNCION .)
    PROTECTED       reduce using rule 73 (operand_bits -> DISYUNCION .)
    STATIC          reduce using rule 73 (operand_bits -> DISYUNCION .)
    VAR             reduce using rule 73 (operand_bits -> DISYUNCION .)


state 68

    (74) operand_bits -> DISYUNCION_EXC .

    ENTERO          reduce using rule 74 (operand_bits -> DISYUNCION_EXC .)
    FLOTANTE        reduce using rule 74 (operand_bits -> DISYUNCION_EXC .)
    CADENA          reduce using rule 74 (operand_bits -> DISYUNCION_EXC .)
    BOOLEANO        reduce using rule 74 (operand_bits -> DISYUNCION_EXC .)
    SIGNO_DOLAR     reduce using rule 74 (operand_bits -> DISYUNCION_EXC .)
    CONST           reduce using rule 74 (operand_bits -> DISYUNCION_EXC .)
    PRIVATE         reduce using rule 74 (operand_bits -> DISYUNCION_EXC .)
    PUBLIC          reduce using rule 74 (operand_bits -> DISYUNCION_EXC .)
    PROTECTED       reduce using rule 74 (operand_bits -> DISYUNCION_EXC .)
    STATIC          reduce using rule 74 (operand_bits -> DISYUNCION_EXC .)
    VAR             reduce using rule 74 (operand_bits -> DISYUNCION_EXC .)


state 69

    (75) operand_bits -> DESPLAZAR_BITS_IZQ .

    ENTERO          reduce using rule 75 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    FLOTANTE        reduce using rule 75 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    CADENA          reduce using rule 75 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    BOOLEANO        reduce using rule 75 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    SIGNO_DOLAR     reduce using rule 75 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    CONST           reduce using rule 75 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PRIVATE         reduce using rule 75 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PUBLIC          reduce using rule 75 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    PROTECTED       reduce using rule 75 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    STATIC          reduce using rule 75 (operand_bits -> DESPLAZAR_BITS_IZQ .)
    VAR             reduce using rule 75 (operand_bits -> DESPLAZAR_BITS_IZQ .)


state 70

    (76) operand_bits -> DESPLAZAR_BITS_DER .

    ENTERO          reduce using rule 76 (operand_bits -> DESPLAZAR_BITS_DER .)
    FLOTANTE        reduce using rule 76 (operand_bits -> DESPLAZAR_BITS_DER .)
    CADENA          reduce using rule 76 (operand_bits -> DESPLAZAR_BITS_DER .)
    BOOLEANO        reduce using rule 76 (operand_bits -> DESPLAZAR_BITS_DER .)
    SIGNO_DOLAR     reduce using rule 76 (operand_bits -> DESPLAZAR_BITS_DER .)
    CONST           reduce using rule 76 (operand_bits -> DESPLAZAR_BITS_DER .)
    PRIVATE         reduce using rule 76 (operand_bits -> DESPLAZAR_BITS_DER .)
    PUBLIC          reduce using rule 76 (operand_bits -> DESPLAZAR_BITS_DER .)
    PROTECTED       reduce using rule 76 (operand_bits -> DESPLAZAR_BITS_DER .)
    STATIC          reduce using rule 76 (operand_bits -> DESPLAZAR_BITS_DER .)
    VAR             reduce using rule 76 (operand_bits -> DESPLAZAR_BITS_DER .)


state 71

    (18) salida -> PRINT PARENTESIS_ABRE . salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    salidas_posibles               shift and go to state 103
    datos                          shift and go to state 56
    decl_variable                  shift and go to state 57
    variable_tipo                  shift and go to state 35

state 72

    (19) salida -> PRINT salidas_posibles . FIN_LINEA

    FIN_LINEA       shift and go to state 104


state 73

    (20) ingreso -> READLINE PARENTESIS_ABRE . CADENA PARENTESIS_CIERRA FIN_LINEA

    CADENA          shift and go to state 105


state 74

    (21) ingreso -> FGETS PARENTESIS_ABRE . STDIN PARENTESIS_CIERRA FIN_LINEA

    STDIN           shift and go to state 106


state 75

    (22) ingreso -> FSCANF PARENTESIS_ABRE . STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    STDIN           shift and go to state 107


state 76

    (29) decl_variable -> SIGNO_DOLAR IDENTIFICADOR .

    IGUAL           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    SUMA            reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    RESTA           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DIVISION        reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    POTENCIA        reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MODULO          reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCION      reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION      reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION_EXC  reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_IZQ reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_DER reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    FIN_LINEA       reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    $end            reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    LLAVE_CIERRA    reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    COMENTARIO_LINEA reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    COMENTARIO_BLOQUE reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    NULO            reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    ECHO            reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    PRINT           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    READLINE        reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    FGETS           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    FSCANF          reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    FUNCTION        reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    NEGACION        reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    SIGNO_DOLAR     reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    ENTERO          reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    FLOTANTE        reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    CADENA          reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    BOOLEANO        reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    NEW             reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    ARRAY           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    CORCHETE_ABRE   reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    FOR             reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    FOREACH         reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    WHILE           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    CONST           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    PRIVATE         reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    PUBLIC          reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    PROTECTED       reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    STATIC          reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    VAR             reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    IF              reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    AS              reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    IGUALDAD        reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    IDENTIDAD       reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    NO_IDENTIDAD    reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MENOR           reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    AND             reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    OR              reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    XOR             reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    INCREMENTO      reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)
    DECREMENTO      reduce using rule 29 (decl_variable -> SIGNO_DOLAR IDENTIFICADOR .)


state 77

    (42) estructuras_datos -> pila FIN_LINEA .

    $end            reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    NULO            reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    ECHO            reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    PRINT           reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    READLINE        reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    FGETS           reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    FSCANF          reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    FUNCTION        reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    NEGACION        reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    ENTERO          reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    FLOTANTE        reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    CADENA          reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    BOOLEANO        reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    NEW             reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    ARRAY           reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    FOR             reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    FOREACH         reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    WHILE           reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    CONST           reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    PRIVATE         reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    PUBLIC          reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    PROTECTED       reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    STATIC          reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    VAR             reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)
    IF              reduce using rule 42 (estructuras_datos -> pila FIN_LINEA .)


state 78

    (43) estructuras_datos -> arreglo FIN_LINEA .

    $end            reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    NULO            reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    ECHO            reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    PRINT           reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    READLINE        reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    FGETS           reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    FSCANF          reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    FUNCTION        reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    NEGACION        reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    ENTERO          reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    FLOTANTE        reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    CADENA          reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    BOOLEANO        reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    NEW             reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    ARRAY           reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    FOR             reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    FOREACH         reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    WHILE           reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    CONST           reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    PRIVATE         reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    PUBLIC          reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    PROTECTED       reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    STATIC          reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    VAR             reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)
    IF              reduce using rule 43 (estructuras_datos -> arreglo FIN_LINEA .)


state 79

    (38) funcion -> FUNCTION IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> FUNCTION IDENTIFICADOR . PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 108


state 80

    (80) operaciones_bits -> NEGACION salidas_posibles .

    $end            reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    LLAVE_CIERRA    reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    COMENTARIO_LINEA reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    COMENTARIO_BLOQUE reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    NULO            reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    ECHO            reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    PRINT           reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    READLINE        reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    FGETS           reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    FSCANF          reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    FUNCTION        reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    NEGACION        reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    SIGNO_DOLAR     reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    ENTERO          reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    FLOTANTE        reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    CADENA          reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    BOOLEANO        reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    NEW             reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    ARRAY           reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    CORCHETE_ABRE   reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    FOR             reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    FOREACH         reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    WHILE           reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    CONST           reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    PRIVATE         reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    PUBLIC          reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    PROTECTED       reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    STATIC          reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    VAR             reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)
    IF              reduce using rule 80 (operaciones_bits -> NEGACION salidas_posibles .)


state 81

    (30) decl_variable -> variable_tipo SIGNO_DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 109


state 82

    (44) pila -> NEW STACK . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 110


state 83

    (45) arreglo -> ARRAY PARENTESIS_ABRE . PARENTESIS_CIERRA
    (47) arreglo -> ARRAY PARENTESIS_ABRE . elementos PARENTESIS_CIERRA
    (49) arreglo -> ARRAY PARENTESIS_ABRE . asociacion PARENTESIS_CIERRA
    (53) elementos -> . datos
    (54) elementos -> . datos COMA elementos
    (51) asociacion -> . datos IGUAL MAYOR datos
    (52) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO

    PARENTESIS_CIERRA shift and go to state 111
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38

    elementos                      shift and go to state 112
    asociacion                     shift and go to state 113
    datos                          shift and go to state 87

state 84

    (46) arreglo -> CORCHETE_ABRE CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 46 (arreglo -> CORCHETE_ABRE CORCHETE_CIERRA .)


state 85

    (48) arreglo -> CORCHETE_ABRE elementos . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 114


state 86

    (50) arreglo -> CORCHETE_ABRE asociacion . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 115


state 87

    (53) elementos -> datos .
    (54) elementos -> datos . COMA elementos
    (51) asociacion -> datos . IGUAL MAYOR datos
    (52) asociacion -> datos . IGUAL MAYOR datos COMA asociacion

    CORCHETE_CIERRA reduce using rule 53 (elementos -> datos .)
    PARENTESIS_CIERRA reduce using rule 53 (elementos -> datos .)
    COMA            shift and go to state 116
    IGUAL           shift and go to state 117


state 88

    (95) for -> FOR PARENTESIS_ABRE . asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    asignacion                     shift and go to state 118
    decl_variable                  shift and go to state 119
    variable_tipo                  shift and go to state 35

state 89

    (108) foreach -> FOREACH PARENTESIS_ABRE . decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> FOREACH PARENTESIS_ABRE . decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    decl_variable                  shift and go to state 120
    variable_tipo                  shift and go to state 35

state 90

    (111) if_else -> if_else_inicio if_else_fin .

    $end            reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    LLAVE_CIERRA    reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    COMENTARIO_LINEA reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    COMENTARIO_BLOQUE reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    NULO            reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    ECHO            reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    PRINT           reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    READLINE        reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    FGETS           reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    FSCANF          reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    FUNCTION        reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    NEGACION        reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    SIGNO_DOLAR     reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    ENTERO          reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    FLOTANTE        reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    CADENA          reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    BOOLEANO        reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    NEW             reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    ARRAY           reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    CORCHETE_ABRE   reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    FOR             reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    FOREACH         reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    WHILE           reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    CONST           reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    PRIVATE         reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    PUBLIC          reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    PROTECTED       reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    STATIC          reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    VAR             reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)
    IF              reduce using rule 111 (if_else -> if_else_inicio if_else_fin .)


state 91

    (112) if_else -> if_else_inicio if_else_cuerpo . if_else_fin
    (116) if_else_fin -> . ELSE LLAVE_ABRE bloque LLAVE_CIERRA

    ELSE            shift and go to state 92

    if_else_fin                    shift and go to state 121

state 92

    (116) if_else_fin -> ELSE . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 122


state 93

    (114) if_else_cuerpo -> ELSEIF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (115) if_else_cuerpo -> ELSEIF . PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    PARENTESIS_ABRE shift and go to state 123


state 94

    (110) while -> WHILE PARENTESIS_ABRE . decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    decl_variable                  shift and go to state 124
    variable_tipo                  shift and go to state 35

state 95

    (113) if_else_inicio -> IF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (81) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (82) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (83) operaciones_logicas -> . BOOLEANO
    (84) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (85) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (86) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 126
    FLOTANTE        shift and go to state 127
    BOOLEANO        shift and go to state 128
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    operaciones_logicas            shift and go to state 125
    decl_variable                  shift and go to state 129
    variable_tipo                  shift and go to state 35

state 96

    (3) clase -> CLASS IDENTIFICADOR LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . valor
    (6) instrucciones -> . salida
    (7) instrucciones -> . ingreso
    (8) instrucciones -> . estructuras_datos
    (9) instrucciones -> . estructuras_control
    (10) instrucciones -> . funcion
    (11) instrucciones -> . COMENTARIO_LINEA
    (12) instrucciones -> . COMENTARIO_BLOQUE
    (13) instrucciones -> . operaciones_arit
    (14) instrucciones -> . operaciones_bits
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) valor -> . datos
    (33) valor -> . NULO
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (42) estructuras_datos -> . pila FIN_LINEA
    (43) estructuras_datos -> . arreglo FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (38) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (77) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (78) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (79) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (80) operaciones_bits -> . NEGACION salidas_posibles
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (44) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (47) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (48) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (49) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (50) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    NULO            shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    NEGACION        shift and go to state 34
    SIGNO_DOLAR     shift and go to state 26
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    instrucciones                  shift and go to state 130
    asignacion                     shift and go to state 5
    valor                          shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones_arit               shift and go to state 14
    operaciones_bits               shift and go to state 15
    decl_variable                  shift and go to state 16
    datos                          shift and go to state 17
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 97

    (31) asignacion -> decl_variable IGUAL valor . FIN_LINEA

    FIN_LINEA       shift and go to state 131


state 98

    (32) valor -> datos .

    FIN_LINEA       reduce using rule 32 (valor -> datos .)
    PARENTESIS_CIERRA reduce using rule 32 (valor -> datos .)


state 99

    (17) salida -> ECHO salidas_posibles FIN_LINEA .

    $end            reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    NULO            reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ECHO            reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PRINT           reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    READLINE        reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FGETS           reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FSCANF          reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FUNCTION        reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    NEGACION        reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ENTERO          reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FLOTANTE        reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CADENA          reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    BOOLEANO        reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    NEW             reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    ARRAY           reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FOR             reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    FOREACH         reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    WHILE           reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    CONST           reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PRIVATE         reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PUBLIC          reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    PROTECTED       reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    STATIC          reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    VAR             reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)
    IF              reduce using rule 17 (salida -> ECHO salidas_posibles FIN_LINEA .)


state 100

    (77) operaciones_arit -> salidas_posibles operad_arit salidas_posibles .
    (77) operaciones_arit -> salidas_posibles . operad_arit salidas_posibles
    (78) operaciones_arit -> salidas_posibles . operad_arit operaciones_arit
    (55) operad_arit -> . SUMA
    (56) operad_arit -> . RESTA
    (57) operad_arit -> . MULTIPLICACION
    (58) operad_arit -> . DIVISION
    (59) operad_arit -> . POTENCIA
    (60) operad_arit -> . MODULO

    $end            reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    LLAVE_CIERRA    reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    COMENTARIO_LINEA reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    COMENTARIO_BLOQUE reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    NULO            reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    ECHO            reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    PRINT           reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    READLINE        reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    FGETS           reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    FSCANF          reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    FUNCTION        reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    NEGACION        reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    SIGNO_DOLAR     reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    ENTERO          reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    FLOTANTE        reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    CADENA          reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    BOOLEANO        reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    NEW             reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    ARRAY           reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    CORCHETE_ABRE   reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    FOR             reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    FOREACH         reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    WHILE           reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    CONST           reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    PRIVATE         reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    PUBLIC          reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    PROTECTED       reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    STATIC          reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    VAR             reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    IF              reduce using rule 77 (operaciones_arit -> salidas_posibles operad_arit salidas_posibles .)
    SUMA            shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    POTENCIA        shift and go to state 64
    MODULO          shift and go to state 65

    operad_arit                    shift and go to state 58

state 101

    (78) operaciones_arit -> salidas_posibles operad_arit operaciones_arit .

    $end            reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    LLAVE_CIERRA    reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    COMENTARIO_LINEA reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    COMENTARIO_BLOQUE reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    NULO            reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    ECHO            reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    PRINT           reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    READLINE        reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    FGETS           reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    FSCANF          reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    FUNCTION        reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    NEGACION        reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    SIGNO_DOLAR     reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    ENTERO          reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    FLOTANTE        reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    CADENA          reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    BOOLEANO        reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    NEW             reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    ARRAY           reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    CORCHETE_ABRE   reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    FOR             reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    FOREACH         reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    WHILE           reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    CONST           reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    PRIVATE         reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    PUBLIC          reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    PROTECTED       reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    STATIC          reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    VAR             reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)
    IF              reduce using rule 78 (operaciones_arit -> salidas_posibles operad_arit operaciones_arit .)


state 102

    (79) operaciones_bits -> salidas_posibles operand_bits salidas_posibles .

    $end            reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    LLAVE_CIERRA    reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    COMENTARIO_LINEA reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    COMENTARIO_BLOQUE reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    NULO            reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    ECHO            reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    PRINT           reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    READLINE        reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    FGETS           reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    FSCANF          reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    FUNCTION        reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    NEGACION        reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    SIGNO_DOLAR     reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    ENTERO          reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    FLOTANTE        reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    CADENA          reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    BOOLEANO        reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    NEW             reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    ARRAY           reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    CORCHETE_ABRE   reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    FOR             reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    FOREACH         reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    WHILE           reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    CONST           reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    PRIVATE         reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    PUBLIC          reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    PROTECTED       reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    STATIC          reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    VAR             reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)
    IF              reduce using rule 79 (operaciones_bits -> salidas_posibles operand_bits salidas_posibles .)


state 103

    (18) salida -> PRINT PARENTESIS_ABRE salidas_posibles . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 132


state 104

    (19) salida -> PRINT salidas_posibles FIN_LINEA .

    $end            reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    NULO            reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ECHO            reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PRINT           reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    READLINE        reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FGETS           reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FSCANF          reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FUNCTION        reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    NEGACION        reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ENTERO          reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FLOTANTE        reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CADENA          reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    BOOLEANO        reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    NEW             reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    ARRAY           reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FOR             reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    FOREACH         reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    WHILE           reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    CONST           reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PRIVATE         reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PUBLIC          reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    PROTECTED       reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    STATIC          reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    VAR             reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)
    IF              reduce using rule 19 (salida -> PRINT salidas_posibles FIN_LINEA .)


state 105

    (20) ingreso -> READLINE PARENTESIS_ABRE CADENA . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 133


state 106

    (21) ingreso -> FGETS PARENTESIS_ABRE STDIN . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 134


state 107

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN . COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    COMA            shift and go to state 135


state 108

    (38) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE . parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (41) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros

    PARENTESIS_CIERRA shift and go to state 136
    SIGNO_DOLAR     shift and go to state 138

    parametros                     shift and go to state 137

state 109

    (30) decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .

    IGUAL           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    SUMA            reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    RESTA           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DIVISION        reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    POTENCIA        reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MODULO          reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    CONJUNCION      reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION      reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DISYUNCION_EXC  reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_IZQ reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DESPLAZAR_BITS_DER reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    FIN_LINEA       reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    $end            reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    LLAVE_CIERRA    reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    COMENTARIO_LINEA reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    COMENTARIO_BLOQUE reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    NULO            reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    ECHO            reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    PRINT           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    READLINE        reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    FGETS           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    FSCANF          reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    FUNCTION        reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    NEGACION        reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    SIGNO_DOLAR     reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    ENTERO          reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    FLOTANTE        reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    CADENA          reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    BOOLEANO        reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    NEW             reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    ARRAY           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    CORCHETE_ABRE   reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    FOR             reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    FOREACH         reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    WHILE           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    CONST           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    PRIVATE         reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    PUBLIC          reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    PROTECTED       reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    STATIC          reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    VAR             reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    IF              reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    AS              reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    IGUALDAD        reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    IDENTIDAD       reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    NO_IDENTIDAD    reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MENOR           reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    AND             reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    OR              reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    XOR             reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    INCREMENTO      reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)
    DECREMENTO      reduce using rule 30 (decl_variable -> variable_tipo SIGNO_DOLAR IDENTIFICADOR .)


state 110

    (44) pila -> NEW STACK PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 139


state 111

    (45) arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 45 (arreglo -> ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 112

    (47) arreglo -> ARRAY PARENTESIS_ABRE elementos . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 140


state 113

    (49) arreglo -> ARRAY PARENTESIS_ABRE asociacion . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 141


state 114

    (48) arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 48 (arreglo -> CORCHETE_ABRE elementos CORCHETE_CIERRA .)


state 115

    (50) arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA .

    FIN_LINEA       reduce using rule 50 (arreglo -> CORCHETE_ABRE asociacion CORCHETE_CIERRA .)


state 116

    (54) elementos -> datos COMA . elementos
    (53) elementos -> . datos
    (54) elementos -> . datos COMA elementos
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO

    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38

    datos                          shift and go to state 142
    elementos                      shift and go to state 143

state 117

    (51) asociacion -> datos IGUAL . MAYOR datos
    (52) asociacion -> datos IGUAL . MAYOR datos COMA asociacion

    MAYOR           shift and go to state 144


state 118

    (95) for -> FOR PARENTESIS_ABRE asignacion . declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (98) declaracionp -> . decl_variable valorc
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    declaracionp                   shift and go to state 145
    decl_variable                  shift and go to state 146
    variable_tipo                  shift and go to state 35

state 119

    (31) asignacion -> decl_variable . IGUAL valor FIN_LINEA

    IGUAL           shift and go to state 54


state 120

    (108) foreach -> FOREACH PARENTESIS_ABRE decl_variable . AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> FOREACH PARENTESIS_ABRE decl_variable . AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    AS              shift and go to state 147


state 121

    (112) if_else -> if_else_inicio if_else_cuerpo if_else_fin .

    $end            reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    LLAVE_CIERRA    reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    COMENTARIO_LINEA reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    COMENTARIO_BLOQUE reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    NULO            reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ECHO            reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PRINT           reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    READLINE        reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FGETS           reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FSCANF          reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FUNCTION        reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    NEGACION        reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    SIGNO_DOLAR     reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ENTERO          reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FLOTANTE        reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CADENA          reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    BOOLEANO        reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    NEW             reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    ARRAY           reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CORCHETE_ABRE   reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FOR             reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    FOREACH         reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    WHILE           reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    CONST           reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PRIVATE         reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PUBLIC          reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    PROTECTED       reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    STATIC          reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    VAR             reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)
    IF              reduce using rule 112 (if_else -> if_else_inicio if_else_cuerpo if_else_fin .)


state 122

    (116) if_else_fin -> ELSE LLAVE_ABRE . bloque LLAVE_CIERRA
    (91) bloque -> . asignacion
    (92) bloque -> . salida
    (93) bloque -> . retorno
    (94) bloque -> . estructuras_control
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (107) retorno -> . RETURN salidas_posibles FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    RETURN          shift and go to state 153
    SIGNO_DOLAR     shift and go to state 26
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    bloque                         shift and go to state 148
    asignacion                     shift and go to state 149
    salida                         shift and go to state 150
    retorno                        shift and go to state 151
    estructuras_control            shift and go to state 152
    decl_variable                  shift and go to state 119
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 123

    (114) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (115) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE . operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo
    (81) operaciones_logicas -> . ENTERO operad_logico ENTERO
    (82) operaciones_logicas -> . FLOTANTE operad_logico FLOTANTE
    (83) operaciones_logicas -> . BOOLEANO
    (84) operaciones_logicas -> . decl_variable operad_logico decl_variable
    (85) operaciones_logicas -> . decl_variable operad_logico ENTERO
    (86) operaciones_logicas -> . decl_variable operad_logico FLOTANTE
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 126
    FLOTANTE        shift and go to state 127
    BOOLEANO        shift and go to state 128
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    operaciones_logicas            shift and go to state 154
    decl_variable                  shift and go to state 129
    variable_tipo                  shift and go to state 35

state 124

    (110) while -> WHILE PARENTESIS_ABRE decl_variable . operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (61) operad_logico -> . IGUALDAD
    (62) operad_logico -> . IDENTIDAD
    (63) operad_logico -> . DIFERENTE
    (64) operad_logico -> . NO_IDENTIDAD
    (65) operad_logico -> . MAYOR
    (66) operad_logico -> . MAYOR_IGUAL
    (67) operad_logico -> . MENOR
    (68) operad_logico -> . MENOR_IGUAL
    (69) operad_logico -> . AND
    (70) operad_logico -> . OR
    (71) operad_logico -> . XOR

    IGUALDAD        shift and go to state 156
    IDENTIDAD       shift and go to state 157
    DIFERENTE       shift and go to state 158
    NO_IDENTIDAD    shift and go to state 159
    MAYOR           shift and go to state 160
    MAYOR_IGUAL     shift and go to state 161
    MENOR           shift and go to state 162
    MENOR_IGUAL     shift and go to state 163
    AND             shift and go to state 164
    OR              shift and go to state 165
    XOR             shift and go to state 166

    operad_logico                  shift and go to state 155

state 125

    (113) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 167


state 126

    (81) operaciones_logicas -> ENTERO . operad_logico ENTERO
    (61) operad_logico -> . IGUALDAD
    (62) operad_logico -> . IDENTIDAD
    (63) operad_logico -> . DIFERENTE
    (64) operad_logico -> . NO_IDENTIDAD
    (65) operad_logico -> . MAYOR
    (66) operad_logico -> . MAYOR_IGUAL
    (67) operad_logico -> . MENOR
    (68) operad_logico -> . MENOR_IGUAL
    (69) operad_logico -> . AND
    (70) operad_logico -> . OR
    (71) operad_logico -> . XOR

    IGUALDAD        shift and go to state 156
    IDENTIDAD       shift and go to state 157
    DIFERENTE       shift and go to state 158
    NO_IDENTIDAD    shift and go to state 159
    MAYOR           shift and go to state 160
    MAYOR_IGUAL     shift and go to state 161
    MENOR           shift and go to state 162
    MENOR_IGUAL     shift and go to state 163
    AND             shift and go to state 164
    OR              shift and go to state 165
    XOR             shift and go to state 166

    operad_logico                  shift and go to state 168

state 127

    (82) operaciones_logicas -> FLOTANTE . operad_logico FLOTANTE
    (61) operad_logico -> . IGUALDAD
    (62) operad_logico -> . IDENTIDAD
    (63) operad_logico -> . DIFERENTE
    (64) operad_logico -> . NO_IDENTIDAD
    (65) operad_logico -> . MAYOR
    (66) operad_logico -> . MAYOR_IGUAL
    (67) operad_logico -> . MENOR
    (68) operad_logico -> . MENOR_IGUAL
    (69) operad_logico -> . AND
    (70) operad_logico -> . OR
    (71) operad_logico -> . XOR

    IGUALDAD        shift and go to state 156
    IDENTIDAD       shift and go to state 157
    DIFERENTE       shift and go to state 158
    NO_IDENTIDAD    shift and go to state 159
    MAYOR           shift and go to state 160
    MAYOR_IGUAL     shift and go to state 161
    MENOR           shift and go to state 162
    MENOR_IGUAL     shift and go to state 163
    AND             shift and go to state 164
    OR              shift and go to state 165
    XOR             shift and go to state 166

    operad_logico                  shift and go to state 169

state 128

    (83) operaciones_logicas -> BOOLEANO .

    PARENTESIS_CIERRA reduce using rule 83 (operaciones_logicas -> BOOLEANO .)


state 129

    (84) operaciones_logicas -> decl_variable . operad_logico decl_variable
    (85) operaciones_logicas -> decl_variable . operad_logico ENTERO
    (86) operaciones_logicas -> decl_variable . operad_logico FLOTANTE
    (61) operad_logico -> . IGUALDAD
    (62) operad_logico -> . IDENTIDAD
    (63) operad_logico -> . DIFERENTE
    (64) operad_logico -> . NO_IDENTIDAD
    (65) operad_logico -> . MAYOR
    (66) operad_logico -> . MAYOR_IGUAL
    (67) operad_logico -> . MENOR
    (68) operad_logico -> . MENOR_IGUAL
    (69) operad_logico -> . AND
    (70) operad_logico -> . OR
    (71) operad_logico -> . XOR

    IGUALDAD        shift and go to state 156
    IDENTIDAD       shift and go to state 157
    DIFERENTE       shift and go to state 158
    NO_IDENTIDAD    shift and go to state 159
    MAYOR           shift and go to state 160
    MAYOR_IGUAL     shift and go to state 161
    MENOR           shift and go to state 162
    MENOR_IGUAL     shift and go to state 163
    AND             shift and go to state 164
    OR              shift and go to state 165
    XOR             shift and go to state 166

    operad_logico                  shift and go to state 170

state 130

    (3) clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 171


state 131

    (31) asignacion -> decl_variable IGUAL valor FIN_LINEA .

    $end            reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CONST           reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PRIVATE         reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PUBLIC          reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PROTECTED       reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    STATIC          reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    VAR             reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    NULO            reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ECHO            reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    PRINT           reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    READLINE        reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FGETS           reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FSCANF          reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FUNCTION        reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    NEGACION        reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ENTERO          reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FLOTANTE        reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CADENA          reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    BOOLEANO        reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    NEW             reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    ARRAY           reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FOR             reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    FOREACH         reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    WHILE           reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)
    IF              reduce using rule 31 (asignacion -> decl_variable IGUAL valor FIN_LINEA .)


state 132

    (18) salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 172


state 133

    (20) ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 173


state 134

    (21) ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 174


state 135

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA . CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    CADENA          shift and go to state 175


state 136

    (38) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 176


state 137

    (39) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 177


state 138

    (40) parametros -> SIGNO_DOLAR . IDENTIFICADOR
    (41) parametros -> SIGNO_DOLAR . IDENTIFICADOR COMA parametros

    IDENTIFICADOR   shift and go to state 178


state 139

    (44) pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 44 (pila -> NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 140

    (47) arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 47 (arreglo -> ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA .)


state 141

    (49) arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA .

    FIN_LINEA       reduce using rule 49 (arreglo -> ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA .)


state 142

    (53) elementos -> datos .
    (54) elementos -> datos . COMA elementos

    CORCHETE_CIERRA reduce using rule 53 (elementos -> datos .)
    PARENTESIS_CIERRA reduce using rule 53 (elementos -> datos .)
    COMA            shift and go to state 116


state 143

    (54) elementos -> datos COMA elementos .

    CORCHETE_CIERRA reduce using rule 54 (elementos -> datos COMA elementos .)
    PARENTESIS_CIERRA reduce using rule 54 (elementos -> datos COMA elementos .)


state 144

    (51) asociacion -> datos IGUAL MAYOR . datos
    (52) asociacion -> datos IGUAL MAYOR . datos COMA asociacion
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO

    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38

    datos                          shift and go to state 179

state 145

    (95) for -> FOR PARENTESIS_ABRE asignacion declaracionp . declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (103) declaracion_s -> . decl_variable crecimiento
    (104) declaracion_s -> . crecimiento decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (105) crecimiento -> . INCREMENTO
    (106) crecimiento -> . DECREMENTO
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    INCREMENTO      shift and go to state 183
    DECREMENTO      shift and go to state 184
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    declaracion_s                  shift and go to state 180
    decl_variable                  shift and go to state 181
    crecimiento                    shift and go to state 182
    variable_tipo                  shift and go to state 35

state 146

    (98) declaracionp -> decl_variable . valorc
    (99) valorc -> . menor
    (100) valorc -> . mayor
    (101) menor -> . MENOR_IGUAL ENTERO FIN_LINEA
    (102) mayor -> . MAYOR_IGUAL ENTERO FIN_LINEA

    MENOR_IGUAL     shift and go to state 188
    MAYOR_IGUAL     shift and go to state 189

    valorc                         shift and go to state 185
    menor                          shift and go to state 186
    mayor                          shift and go to state 187

state 147

    (108) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS . decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS . decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    decl_variable                  shift and go to state 190
    variable_tipo                  shift and go to state 35

state 148

    (116) if_else_fin -> ELSE LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 191


state 149

    (91) bloque -> asignacion .

    LLAVE_CIERRA    reduce using rule 91 (bloque -> asignacion .)


state 150

    (92) bloque -> salida .

    LLAVE_CIERRA    reduce using rule 92 (bloque -> salida .)


state 151

    (93) bloque -> retorno .

    LLAVE_CIERRA    reduce using rule 93 (bloque -> retorno .)


state 152

    (94) bloque -> estructuras_control .

    LLAVE_CIERRA    reduce using rule 94 (bloque -> estructuras_control .)


state 153

    (107) retorno -> RETURN . salidas_posibles FIN_LINEA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    salidas_posibles               shift and go to state 192
    datos                          shift and go to state 56
    decl_variable                  shift and go to state 57
    variable_tipo                  shift and go to state 35

state 154

    (114) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (115) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas . PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    PARENTESIS_CIERRA shift and go to state 193


state 155

    (110) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico . valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (32) valor -> . datos
    (33) valor -> . NULO
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO

    NULO            shift and go to state 18
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38

    valor                          shift and go to state 194
    datos                          shift and go to state 98

state 156

    (61) operad_logico -> IGUALDAD .

    NULO            reduce using rule 61 (operad_logico -> IGUALDAD .)
    ENTERO          reduce using rule 61 (operad_logico -> IGUALDAD .)
    FLOTANTE        reduce using rule 61 (operad_logico -> IGUALDAD .)
    CADENA          reduce using rule 61 (operad_logico -> IGUALDAD .)
    BOOLEANO        reduce using rule 61 (operad_logico -> IGUALDAD .)
    SIGNO_DOLAR     reduce using rule 61 (operad_logico -> IGUALDAD .)
    CONST           reduce using rule 61 (operad_logico -> IGUALDAD .)
    PRIVATE         reduce using rule 61 (operad_logico -> IGUALDAD .)
    PUBLIC          reduce using rule 61 (operad_logico -> IGUALDAD .)
    PROTECTED       reduce using rule 61 (operad_logico -> IGUALDAD .)
    STATIC          reduce using rule 61 (operad_logico -> IGUALDAD .)
    VAR             reduce using rule 61 (operad_logico -> IGUALDAD .)


state 157

    (62) operad_logico -> IDENTIDAD .

    NULO            reduce using rule 62 (operad_logico -> IDENTIDAD .)
    ENTERO          reduce using rule 62 (operad_logico -> IDENTIDAD .)
    FLOTANTE        reduce using rule 62 (operad_logico -> IDENTIDAD .)
    CADENA          reduce using rule 62 (operad_logico -> IDENTIDAD .)
    BOOLEANO        reduce using rule 62 (operad_logico -> IDENTIDAD .)
    SIGNO_DOLAR     reduce using rule 62 (operad_logico -> IDENTIDAD .)
    CONST           reduce using rule 62 (operad_logico -> IDENTIDAD .)
    PRIVATE         reduce using rule 62 (operad_logico -> IDENTIDAD .)
    PUBLIC          reduce using rule 62 (operad_logico -> IDENTIDAD .)
    PROTECTED       reduce using rule 62 (operad_logico -> IDENTIDAD .)
    STATIC          reduce using rule 62 (operad_logico -> IDENTIDAD .)
    VAR             reduce using rule 62 (operad_logico -> IDENTIDAD .)


state 158

    (63) operad_logico -> DIFERENTE .

    NULO            reduce using rule 63 (operad_logico -> DIFERENTE .)
    ENTERO          reduce using rule 63 (operad_logico -> DIFERENTE .)
    FLOTANTE        reduce using rule 63 (operad_logico -> DIFERENTE .)
    CADENA          reduce using rule 63 (operad_logico -> DIFERENTE .)
    BOOLEANO        reduce using rule 63 (operad_logico -> DIFERENTE .)
    SIGNO_DOLAR     reduce using rule 63 (operad_logico -> DIFERENTE .)
    CONST           reduce using rule 63 (operad_logico -> DIFERENTE .)
    PRIVATE         reduce using rule 63 (operad_logico -> DIFERENTE .)
    PUBLIC          reduce using rule 63 (operad_logico -> DIFERENTE .)
    PROTECTED       reduce using rule 63 (operad_logico -> DIFERENTE .)
    STATIC          reduce using rule 63 (operad_logico -> DIFERENTE .)
    VAR             reduce using rule 63 (operad_logico -> DIFERENTE .)


state 159

    (64) operad_logico -> NO_IDENTIDAD .

    NULO            reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)
    ENTERO          reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)
    FLOTANTE        reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)
    CADENA          reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)
    BOOLEANO        reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)
    SIGNO_DOLAR     reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)
    CONST           reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)
    PRIVATE         reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)
    PUBLIC          reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)
    PROTECTED       reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)
    STATIC          reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)
    VAR             reduce using rule 64 (operad_logico -> NO_IDENTIDAD .)


state 160

    (65) operad_logico -> MAYOR .

    NULO            reduce using rule 65 (operad_logico -> MAYOR .)
    ENTERO          reduce using rule 65 (operad_logico -> MAYOR .)
    FLOTANTE        reduce using rule 65 (operad_logico -> MAYOR .)
    CADENA          reduce using rule 65 (operad_logico -> MAYOR .)
    BOOLEANO        reduce using rule 65 (operad_logico -> MAYOR .)
    SIGNO_DOLAR     reduce using rule 65 (operad_logico -> MAYOR .)
    CONST           reduce using rule 65 (operad_logico -> MAYOR .)
    PRIVATE         reduce using rule 65 (operad_logico -> MAYOR .)
    PUBLIC          reduce using rule 65 (operad_logico -> MAYOR .)
    PROTECTED       reduce using rule 65 (operad_logico -> MAYOR .)
    STATIC          reduce using rule 65 (operad_logico -> MAYOR .)
    VAR             reduce using rule 65 (operad_logico -> MAYOR .)


state 161

    (66) operad_logico -> MAYOR_IGUAL .

    NULO            reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)
    ENTERO          reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)
    CADENA          reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)
    BOOLEANO        reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)
    SIGNO_DOLAR     reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)
    CONST           reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)
    PRIVATE         reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)
    PUBLIC          reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)
    PROTECTED       reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)
    STATIC          reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)
    VAR             reduce using rule 66 (operad_logico -> MAYOR_IGUAL .)


state 162

    (67) operad_logico -> MENOR .

    NULO            reduce using rule 67 (operad_logico -> MENOR .)
    ENTERO          reduce using rule 67 (operad_logico -> MENOR .)
    FLOTANTE        reduce using rule 67 (operad_logico -> MENOR .)
    CADENA          reduce using rule 67 (operad_logico -> MENOR .)
    BOOLEANO        reduce using rule 67 (operad_logico -> MENOR .)
    SIGNO_DOLAR     reduce using rule 67 (operad_logico -> MENOR .)
    CONST           reduce using rule 67 (operad_logico -> MENOR .)
    PRIVATE         reduce using rule 67 (operad_logico -> MENOR .)
    PUBLIC          reduce using rule 67 (operad_logico -> MENOR .)
    PROTECTED       reduce using rule 67 (operad_logico -> MENOR .)
    STATIC          reduce using rule 67 (operad_logico -> MENOR .)
    VAR             reduce using rule 67 (operad_logico -> MENOR .)


state 163

    (68) operad_logico -> MENOR_IGUAL .

    NULO            reduce using rule 68 (operad_logico -> MENOR_IGUAL .)
    ENTERO          reduce using rule 68 (operad_logico -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 68 (operad_logico -> MENOR_IGUAL .)
    CADENA          reduce using rule 68 (operad_logico -> MENOR_IGUAL .)
    BOOLEANO        reduce using rule 68 (operad_logico -> MENOR_IGUAL .)
    SIGNO_DOLAR     reduce using rule 68 (operad_logico -> MENOR_IGUAL .)
    CONST           reduce using rule 68 (operad_logico -> MENOR_IGUAL .)
    PRIVATE         reduce using rule 68 (operad_logico -> MENOR_IGUAL .)
    PUBLIC          reduce using rule 68 (operad_logico -> MENOR_IGUAL .)
    PROTECTED       reduce using rule 68 (operad_logico -> MENOR_IGUAL .)
    STATIC          reduce using rule 68 (operad_logico -> MENOR_IGUAL .)
    VAR             reduce using rule 68 (operad_logico -> MENOR_IGUAL .)


state 164

    (69) operad_logico -> AND .

    NULO            reduce using rule 69 (operad_logico -> AND .)
    ENTERO          reduce using rule 69 (operad_logico -> AND .)
    FLOTANTE        reduce using rule 69 (operad_logico -> AND .)
    CADENA          reduce using rule 69 (operad_logico -> AND .)
    BOOLEANO        reduce using rule 69 (operad_logico -> AND .)
    SIGNO_DOLAR     reduce using rule 69 (operad_logico -> AND .)
    CONST           reduce using rule 69 (operad_logico -> AND .)
    PRIVATE         reduce using rule 69 (operad_logico -> AND .)
    PUBLIC          reduce using rule 69 (operad_logico -> AND .)
    PROTECTED       reduce using rule 69 (operad_logico -> AND .)
    STATIC          reduce using rule 69 (operad_logico -> AND .)
    VAR             reduce using rule 69 (operad_logico -> AND .)


state 165

    (70) operad_logico -> OR .

    NULO            reduce using rule 70 (operad_logico -> OR .)
    ENTERO          reduce using rule 70 (operad_logico -> OR .)
    FLOTANTE        reduce using rule 70 (operad_logico -> OR .)
    CADENA          reduce using rule 70 (operad_logico -> OR .)
    BOOLEANO        reduce using rule 70 (operad_logico -> OR .)
    SIGNO_DOLAR     reduce using rule 70 (operad_logico -> OR .)
    CONST           reduce using rule 70 (operad_logico -> OR .)
    PRIVATE         reduce using rule 70 (operad_logico -> OR .)
    PUBLIC          reduce using rule 70 (operad_logico -> OR .)
    PROTECTED       reduce using rule 70 (operad_logico -> OR .)
    STATIC          reduce using rule 70 (operad_logico -> OR .)
    VAR             reduce using rule 70 (operad_logico -> OR .)


state 166

    (71) operad_logico -> XOR .

    NULO            reduce using rule 71 (operad_logico -> XOR .)
    ENTERO          reduce using rule 71 (operad_logico -> XOR .)
    FLOTANTE        reduce using rule 71 (operad_logico -> XOR .)
    CADENA          reduce using rule 71 (operad_logico -> XOR .)
    BOOLEANO        reduce using rule 71 (operad_logico -> XOR .)
    SIGNO_DOLAR     reduce using rule 71 (operad_logico -> XOR .)
    CONST           reduce using rule 71 (operad_logico -> XOR .)
    PRIVATE         reduce using rule 71 (operad_logico -> XOR .)
    PUBLIC          reduce using rule 71 (operad_logico -> XOR .)
    PROTECTED       reduce using rule 71 (operad_logico -> XOR .)
    STATIC          reduce using rule 71 (operad_logico -> XOR .)
    VAR             reduce using rule 71 (operad_logico -> XOR .)


state 167

    (113) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 195


state 168

    (81) operaciones_logicas -> ENTERO operad_logico . ENTERO

    ENTERO          shift and go to state 196


state 169

    (82) operaciones_logicas -> FLOTANTE operad_logico . FLOTANTE

    FLOTANTE        shift and go to state 197


state 170

    (84) operaciones_logicas -> decl_variable operad_logico . decl_variable
    (85) operaciones_logicas -> decl_variable operad_logico . ENTERO
    (86) operaciones_logicas -> decl_variable operad_logico . FLOTANTE
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    decl_variable                  shift and go to state 198
    variable_tipo                  shift and go to state 35

state 171

    (3) clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .

    $end            reduce using rule 3 (clase -> CLASS IDENTIFICADOR LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 172

    (18) salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .

    $end            reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    NULO            reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 18 (salida -> PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA .)


state 173

    (20) ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .

    $end            reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    NULO            reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 20 (ingreso -> READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA .)


state 174

    (21) ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .

    $end            reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    NULO            reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 21 (ingreso -> FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA .)


state 175

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA . COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    COMA            shift and go to state 201


state 176

    (38) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . valor
    (6) instrucciones -> . salida
    (7) instrucciones -> . ingreso
    (8) instrucciones -> . estructuras_datos
    (9) instrucciones -> . estructuras_control
    (10) instrucciones -> . funcion
    (11) instrucciones -> . COMENTARIO_LINEA
    (12) instrucciones -> . COMENTARIO_BLOQUE
    (13) instrucciones -> . operaciones_arit
    (14) instrucciones -> . operaciones_bits
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) valor -> . datos
    (33) valor -> . NULO
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (42) estructuras_datos -> . pila FIN_LINEA
    (43) estructuras_datos -> . arreglo FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (38) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (77) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (78) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (79) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (80) operaciones_bits -> . NEGACION salidas_posibles
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (44) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (47) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (48) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (49) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (50) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    NULO            shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    NEGACION        shift and go to state 34
    SIGNO_DOLAR     shift and go to state 26
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    instrucciones                  shift and go to state 202
    asignacion                     shift and go to state 5
    valor                          shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones_arit               shift and go to state 14
    operaciones_bits               shift and go to state 15
    decl_variable                  shift and go to state 16
    datos                          shift and go to state 17
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 177

    (39) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 203


state 178

    (40) parametros -> SIGNO_DOLAR IDENTIFICADOR .
    (41) parametros -> SIGNO_DOLAR IDENTIFICADOR . COMA parametros

    PARENTESIS_CIERRA reduce using rule 40 (parametros -> SIGNO_DOLAR IDENTIFICADOR .)
    COMA            shift and go to state 204


state 179

    (51) asociacion -> datos IGUAL MAYOR datos .
    (52) asociacion -> datos IGUAL MAYOR datos . COMA asociacion

    CORCHETE_CIERRA reduce using rule 51 (asociacion -> datos IGUAL MAYOR datos .)
    PARENTESIS_CIERRA reduce using rule 51 (asociacion -> datos IGUAL MAYOR datos .)
    COMA            shift and go to state 205


state 180

    (95) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 206


state 181

    (103) declaracion_s -> decl_variable . crecimiento
    (105) crecimiento -> . INCREMENTO
    (106) crecimiento -> . DECREMENTO

    INCREMENTO      shift and go to state 183
    DECREMENTO      shift and go to state 184

    crecimiento                    shift and go to state 207

state 182

    (104) declaracion_s -> crecimiento . decl_variable
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    decl_variable                  shift and go to state 208
    variable_tipo                  shift and go to state 35

state 183

    (105) crecimiento -> INCREMENTO .

    SIGNO_DOLAR     reduce using rule 105 (crecimiento -> INCREMENTO .)
    CONST           reduce using rule 105 (crecimiento -> INCREMENTO .)
    PRIVATE         reduce using rule 105 (crecimiento -> INCREMENTO .)
    PUBLIC          reduce using rule 105 (crecimiento -> INCREMENTO .)
    PROTECTED       reduce using rule 105 (crecimiento -> INCREMENTO .)
    STATIC          reduce using rule 105 (crecimiento -> INCREMENTO .)
    VAR             reduce using rule 105 (crecimiento -> INCREMENTO .)
    PARENTESIS_CIERRA reduce using rule 105 (crecimiento -> INCREMENTO .)


state 184

    (106) crecimiento -> DECREMENTO .

    SIGNO_DOLAR     reduce using rule 106 (crecimiento -> DECREMENTO .)
    CONST           reduce using rule 106 (crecimiento -> DECREMENTO .)
    PRIVATE         reduce using rule 106 (crecimiento -> DECREMENTO .)
    PUBLIC          reduce using rule 106 (crecimiento -> DECREMENTO .)
    PROTECTED       reduce using rule 106 (crecimiento -> DECREMENTO .)
    STATIC          reduce using rule 106 (crecimiento -> DECREMENTO .)
    VAR             reduce using rule 106 (crecimiento -> DECREMENTO .)
    PARENTESIS_CIERRA reduce using rule 106 (crecimiento -> DECREMENTO .)


state 185

    (98) declaracionp -> decl_variable valorc .

    SIGNO_DOLAR     reduce using rule 98 (declaracionp -> decl_variable valorc .)
    INCREMENTO      reduce using rule 98 (declaracionp -> decl_variable valorc .)
    DECREMENTO      reduce using rule 98 (declaracionp -> decl_variable valorc .)
    CONST           reduce using rule 98 (declaracionp -> decl_variable valorc .)
    PRIVATE         reduce using rule 98 (declaracionp -> decl_variable valorc .)
    PUBLIC          reduce using rule 98 (declaracionp -> decl_variable valorc .)
    PROTECTED       reduce using rule 98 (declaracionp -> decl_variable valorc .)
    STATIC          reduce using rule 98 (declaracionp -> decl_variable valorc .)
    VAR             reduce using rule 98 (declaracionp -> decl_variable valorc .)


state 186

    (99) valorc -> menor .

    SIGNO_DOLAR     reduce using rule 99 (valorc -> menor .)
    INCREMENTO      reduce using rule 99 (valorc -> menor .)
    DECREMENTO      reduce using rule 99 (valorc -> menor .)
    CONST           reduce using rule 99 (valorc -> menor .)
    PRIVATE         reduce using rule 99 (valorc -> menor .)
    PUBLIC          reduce using rule 99 (valorc -> menor .)
    PROTECTED       reduce using rule 99 (valorc -> menor .)
    STATIC          reduce using rule 99 (valorc -> menor .)
    VAR             reduce using rule 99 (valorc -> menor .)


state 187

    (100) valorc -> mayor .

    SIGNO_DOLAR     reduce using rule 100 (valorc -> mayor .)
    INCREMENTO      reduce using rule 100 (valorc -> mayor .)
    DECREMENTO      reduce using rule 100 (valorc -> mayor .)
    CONST           reduce using rule 100 (valorc -> mayor .)
    PRIVATE         reduce using rule 100 (valorc -> mayor .)
    PUBLIC          reduce using rule 100 (valorc -> mayor .)
    PROTECTED       reduce using rule 100 (valorc -> mayor .)
    STATIC          reduce using rule 100 (valorc -> mayor .)
    VAR             reduce using rule 100 (valorc -> mayor .)


state 188

    (101) menor -> MENOR_IGUAL . ENTERO FIN_LINEA

    ENTERO          shift and go to state 209


state 189

    (102) mayor -> MAYOR_IGUAL . ENTERO FIN_LINEA

    ENTERO          shift and go to state 210


state 190

    (108) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable . IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 211
    IGUAL           shift and go to state 212


state 191

    (116) if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .

    $end            reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    NULO            reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ECHO            reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRINT           reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    READLINE        reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FGETS           reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FSCANF          reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FUNCTION        reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEGACION        reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ENTERO          reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CADENA          reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    NEW             reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    ARRAY           reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOR             reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    FOREACH         reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    WHILE           reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    CONST           reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PRIVATE         reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PUBLIC          reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    PROTECTED       reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    STATIC          reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    VAR             reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)
    IF              reduce using rule 116 (if_else_fin -> ELSE LLAVE_ABRE bloque LLAVE_CIERRA .)


state 192

    (107) retorno -> RETURN salidas_posibles . FIN_LINEA

    FIN_LINEA       shift and go to state 213


state 193

    (114) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA
    (115) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA . LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    LLAVE_ABRE      shift and go to state 214


state 194

    (110) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 215


state 195

    (113) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (91) bloque -> . asignacion
    (92) bloque -> . salida
    (93) bloque -> . retorno
    (94) bloque -> . estructuras_control
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (107) retorno -> . RETURN salidas_posibles FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    RETURN          shift and go to state 153
    SIGNO_DOLAR     shift and go to state 26
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    bloque                         shift and go to state 216
    asignacion                     shift and go to state 149
    salida                         shift and go to state 150
    retorno                        shift and go to state 151
    estructuras_control            shift and go to state 152
    decl_variable                  shift and go to state 119
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 196

    (81) operaciones_logicas -> ENTERO operad_logico ENTERO .

    PARENTESIS_CIERRA reduce using rule 81 (operaciones_logicas -> ENTERO operad_logico ENTERO .)


state 197

    (82) operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .

    PARENTESIS_CIERRA reduce using rule 82 (operaciones_logicas -> FLOTANTE operad_logico FLOTANTE .)


state 198

    (84) operaciones_logicas -> decl_variable operad_logico decl_variable .

    PARENTESIS_CIERRA reduce using rule 84 (operaciones_logicas -> decl_variable operad_logico decl_variable .)


state 199

    (85) operaciones_logicas -> decl_variable operad_logico ENTERO .

    PARENTESIS_CIERRA reduce using rule 85 (operaciones_logicas -> decl_variable operad_logico ENTERO .)


state 200

    (86) operaciones_logicas -> decl_variable operad_logico FLOTANTE .

    PARENTESIS_CIERRA reduce using rule 86 (operaciones_logicas -> decl_variable operad_logico FLOTANTE .)


state 201

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA . SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    SIGNO_DOLAR     shift and go to state 217


state 202

    (38) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 218


state 203

    (39) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . valor
    (6) instrucciones -> . salida
    (7) instrucciones -> . ingreso
    (8) instrucciones -> . estructuras_datos
    (9) instrucciones -> . estructuras_control
    (10) instrucciones -> . funcion
    (11) instrucciones -> . COMENTARIO_LINEA
    (12) instrucciones -> . COMENTARIO_BLOQUE
    (13) instrucciones -> . operaciones_arit
    (14) instrucciones -> . operaciones_bits
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) valor -> . datos
    (33) valor -> . NULO
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (42) estructuras_datos -> . pila FIN_LINEA
    (43) estructuras_datos -> . arreglo FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (38) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (77) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (78) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (79) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (80) operaciones_bits -> . NEGACION salidas_posibles
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (44) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (47) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (48) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (49) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (50) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    NULO            shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    NEGACION        shift and go to state 34
    SIGNO_DOLAR     shift and go to state 26
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    instrucciones                  shift and go to state 219
    asignacion                     shift and go to state 5
    valor                          shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones_arit               shift and go to state 14
    operaciones_bits               shift and go to state 15
    decl_variable                  shift and go to state 16
    datos                          shift and go to state 17
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 204

    (41) parametros -> SIGNO_DOLAR IDENTIFICADOR COMA . parametros
    (40) parametros -> . SIGNO_DOLAR IDENTIFICADOR
    (41) parametros -> . SIGNO_DOLAR IDENTIFICADOR COMA parametros

    SIGNO_DOLAR     shift and go to state 138

    parametros                     shift and go to state 220

state 205

    (52) asociacion -> datos IGUAL MAYOR datos COMA . asociacion
    (51) asociacion -> . datos IGUAL MAYOR datos
    (52) asociacion -> . datos IGUAL MAYOR datos COMA asociacion
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO

    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38

    datos                          shift and go to state 221
    asociacion                     shift and go to state 222

state 206

    (95) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 223


state 207

    (103) declaracion_s -> decl_variable crecimiento .

    PARENTESIS_CIERRA reduce using rule 103 (declaracion_s -> decl_variable crecimiento .)


state 208

    (104) declaracion_s -> crecimiento decl_variable .

    PARENTESIS_CIERRA reduce using rule 104 (declaracion_s -> crecimiento decl_variable .)


state 209

    (101) menor -> MENOR_IGUAL ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 224


state 210

    (102) mayor -> MAYOR_IGUAL ENTERO . FIN_LINEA

    FIN_LINEA       shift and go to state 225


state 211

    (108) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 226


state 212

    (109) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL . MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    MAYOR           shift and go to state 227


state 213

    (107) retorno -> RETURN salidas_posibles FIN_LINEA .

    LLAVE_CIERRA    reduce using rule 107 (retorno -> RETURN salidas_posibles FIN_LINEA .)


state 214

    (114) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA
    (115) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE . bloque LLAVE_CIERRA if_else_cuerpo
    (91) bloque -> . asignacion
    (92) bloque -> . salida
    (93) bloque -> . retorno
    (94) bloque -> . estructuras_control
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (107) retorno -> . RETURN salidas_posibles FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    RETURN          shift and go to state 153
    SIGNO_DOLAR     shift and go to state 26
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    bloque                         shift and go to state 228
    asignacion                     shift and go to state 149
    salida                         shift and go to state 150
    retorno                        shift and go to state 151
    estructuras_control            shift and go to state 152
    decl_variable                  shift and go to state 119
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 215

    (110) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 229


state 216

    (113) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 230


state 217

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR . IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA

    IDENTIFICADOR   shift and go to state 231


state 218

    (38) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    $end            reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NULO            reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ECHO            reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    READLINE        reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FGETS           reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FSCANF          reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNCTION        reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEGACION        reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ENTERO          reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CADENA          reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEW             reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ARRAY           reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOREACH         reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONST           reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRIVATE         reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PUBLIC          reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PROTECTED       reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STATIC          reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 38 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 219

    (39) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 232


state 220

    (41) parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros .

    PARENTESIS_CIERRA reduce using rule 41 (parametros -> SIGNO_DOLAR IDENTIFICADOR COMA parametros .)


state 221

    (51) asociacion -> datos . IGUAL MAYOR datos
    (52) asociacion -> datos . IGUAL MAYOR datos COMA asociacion

    IGUAL           shift and go to state 117


state 222

    (52) asociacion -> datos IGUAL MAYOR datos COMA asociacion .

    CORCHETE_CIERRA reduce using rule 52 (asociacion -> datos IGUAL MAYOR datos COMA asociacion .)
    PARENTESIS_CIERRA reduce using rule 52 (asociacion -> datos IGUAL MAYOR datos COMA asociacion .)


state 223

    (95) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (96) sentenciasAnidadas -> . instrucciones
    (97) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . valor
    (6) instrucciones -> . salida
    (7) instrucciones -> . ingreso
    (8) instrucciones -> . estructuras_datos
    (9) instrucciones -> . estructuras_control
    (10) instrucciones -> . funcion
    (11) instrucciones -> . COMENTARIO_LINEA
    (12) instrucciones -> . COMENTARIO_BLOQUE
    (13) instrucciones -> . operaciones_arit
    (14) instrucciones -> . operaciones_bits
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) valor -> . datos
    (33) valor -> . NULO
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (42) estructuras_datos -> . pila FIN_LINEA
    (43) estructuras_datos -> . arreglo FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (38) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (77) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (78) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (79) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (80) operaciones_bits -> . NEGACION salidas_posibles
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (44) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (47) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (48) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (49) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (50) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    NULO            shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    NEGACION        shift and go to state 34
    SIGNO_DOLAR     shift and go to state 26
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    asignacion                     shift and go to state 5
    sentenciasAnidadas             shift and go to state 233
    instrucciones                  shift and go to state 234
    valor                          shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones_arit               shift and go to state 14
    operaciones_bits               shift and go to state 15
    decl_variable                  shift and go to state 16
    datos                          shift and go to state 17
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 224

    (101) menor -> MENOR_IGUAL ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 101 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 101 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 101 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    CONST           reduce using rule 101 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 101 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 101 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 101 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    STATIC          reduce using rule 101 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)
    VAR             reduce using rule 101 (menor -> MENOR_IGUAL ENTERO FIN_LINEA .)


state 225

    (102) mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .

    SIGNO_DOLAR     reduce using rule 102 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    INCREMENTO      reduce using rule 102 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    DECREMENTO      reduce using rule 102 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    CONST           reduce using rule 102 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PRIVATE         reduce using rule 102 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PUBLIC          reduce using rule 102 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    PROTECTED       reduce using rule 102 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    STATIC          reduce using rule 102 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)
    VAR             reduce using rule 102 (mayor -> MAYOR_IGUAL ENTERO FIN_LINEA .)


state 226

    (108) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (96) sentenciasAnidadas -> . instrucciones
    (97) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . valor
    (6) instrucciones -> . salida
    (7) instrucciones -> . ingreso
    (8) instrucciones -> . estructuras_datos
    (9) instrucciones -> . estructuras_control
    (10) instrucciones -> . funcion
    (11) instrucciones -> . COMENTARIO_LINEA
    (12) instrucciones -> . COMENTARIO_BLOQUE
    (13) instrucciones -> . operaciones_arit
    (14) instrucciones -> . operaciones_bits
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) valor -> . datos
    (33) valor -> . NULO
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (42) estructuras_datos -> . pila FIN_LINEA
    (43) estructuras_datos -> . arreglo FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (38) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (77) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (78) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (79) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (80) operaciones_bits -> . NEGACION salidas_posibles
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (44) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (47) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (48) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (49) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (50) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    NULO            shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    NEGACION        shift and go to state 34
    SIGNO_DOLAR     shift and go to state 26
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    decl_variable                  shift and go to state 16
    sentenciasAnidadas             shift and go to state 235
    instrucciones                  shift and go to state 234
    asignacion                     shift and go to state 5
    valor                          shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones_arit               shift and go to state 14
    operaciones_bits               shift and go to state 15
    datos                          shift and go to state 17
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 227

    (109) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR . decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR

    SIGNO_DOLAR     shift and go to state 26
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51

    decl_variable                  shift and go to state 236
    variable_tipo                  shift and go to state 35

state 228

    (114) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA
    (115) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque . LLAVE_CIERRA if_else_cuerpo

    LLAVE_CIERRA    shift and go to state 237


state 229

    (110) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . valor
    (6) instrucciones -> . salida
    (7) instrucciones -> . ingreso
    (8) instrucciones -> . estructuras_datos
    (9) instrucciones -> . estructuras_control
    (10) instrucciones -> . funcion
    (11) instrucciones -> . COMENTARIO_LINEA
    (12) instrucciones -> . COMENTARIO_BLOQUE
    (13) instrucciones -> . operaciones_arit
    (14) instrucciones -> . operaciones_bits
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) valor -> . datos
    (33) valor -> . NULO
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (42) estructuras_datos -> . pila FIN_LINEA
    (43) estructuras_datos -> . arreglo FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (38) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (77) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (78) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (79) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (80) operaciones_bits -> . NEGACION salidas_posibles
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (44) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (47) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (48) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (49) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (50) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    NULO            shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    NEGACION        shift and go to state 34
    SIGNO_DOLAR     shift and go to state 26
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    decl_variable                  shift and go to state 16
    valor                          shift and go to state 6
    instrucciones                  shift and go to state 238
    asignacion                     shift and go to state 5
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones_arit               shift and go to state 14
    operaciones_bits               shift and go to state 15
    datos                          shift and go to state 17
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 230

    (113) if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .

    ELSE            reduce using rule 113 (if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ELSEIF          reduce using rule 113 (if_else_inicio -> IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)


state 231

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR . PARENTESIS_CIERRA FIN_LINEA

    PARENTESIS_CIERRA shift and go to state 239


state 232

    (39) funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    $end            reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NULO            reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ECHO            reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    READLINE        reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FGETS           reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FSCANF          reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNCTION        reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEGACION        reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ENTERO          reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CADENA          reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEW             reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ARRAY           reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOREACH         reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONST           reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRIVATE         reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PUBLIC          reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PROTECTED       reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STATIC          reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 39 (funcion -> FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 233

    (95) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 240


state 234

    (96) sentenciasAnidadas -> instrucciones .
    (97) sentenciasAnidadas -> instrucciones . sentenciasAnidadas
    (96) sentenciasAnidadas -> . instrucciones
    (97) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . valor
    (6) instrucciones -> . salida
    (7) instrucciones -> . ingreso
    (8) instrucciones -> . estructuras_datos
    (9) instrucciones -> . estructuras_control
    (10) instrucciones -> . funcion
    (11) instrucciones -> . COMENTARIO_LINEA
    (12) instrucciones -> . COMENTARIO_BLOQUE
    (13) instrucciones -> . operaciones_arit
    (14) instrucciones -> . operaciones_bits
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) valor -> . datos
    (33) valor -> . NULO
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (42) estructuras_datos -> . pila FIN_LINEA
    (43) estructuras_datos -> . arreglo FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (38) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (77) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (78) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (79) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (80) operaciones_bits -> . NEGACION salidas_posibles
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (44) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (47) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (48) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (49) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (50) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    LLAVE_CIERRA    reduce using rule 96 (sentenciasAnidadas -> instrucciones .)
    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    NULO            shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    NEGACION        shift and go to state 34
    SIGNO_DOLAR     shift and go to state 26
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    instrucciones                  shift and go to state 234
    sentenciasAnidadas             shift and go to state 241
    asignacion                     shift and go to state 5
    valor                          shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones_arit               shift and go to state 14
    operaciones_bits               shift and go to state 15
    decl_variable                  shift and go to state 16
    datos                          shift and go to state 17
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 235

    (108) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 242


state 236

    (109) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable . PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 243


state 237

    (114) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .
    (115) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA . if_else_cuerpo
    (114) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA
    (115) if_else_cuerpo -> . ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo

    ELSE            reduce using rule 114 (if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA .)
    ELSEIF          shift and go to state 93

    if_else_cuerpo                 shift and go to state 244

state 238

    (110) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 245


state 239

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA . FIN_LINEA

    FIN_LINEA       shift and go to state 246


state 240

    (95) for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    $end            reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NULO            reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 95 (for -> FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 241

    (97) sentenciasAnidadas -> instrucciones sentenciasAnidadas .

    LLAVE_CIERRA    reduce using rule 97 (sentenciasAnidadas -> instrucciones sentenciasAnidadas .)


state 242

    (108) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    $end            reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NULO            reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 108 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)


state 243

    (109) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA . LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 247


state 244

    (115) if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo .

    ELSE            reduce using rule 115 (if_else_cuerpo -> ELSEIF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA if_else_cuerpo .)


state 245

    (110) while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    $end            reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NULO            reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ECHO            reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    READLINE        reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FGETS           reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FSCANF          reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNCTION        reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEGACION        reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ENTERO          reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CADENA          reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    NEW             reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ARRAY           reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOREACH         reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONST           reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRIVATE         reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PUBLIC          reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PROTECTED       reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STATIC          reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 110 (while -> WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 246

    (22) ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .

    $end            reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    LLAVE_CIERRA    reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_LINEA reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    COMENTARIO_BLOQUE reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    NULO            reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ECHO            reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PRINT           reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    READLINE        reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FGETS           reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FSCANF          reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FUNCTION        reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    NEGACION        reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    SIGNO_DOLAR     reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ENTERO          reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FLOTANTE        reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CADENA          reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    BOOLEANO        reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    NEW             reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    ARRAY           reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CORCHETE_ABRE   reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FOR             reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    FOREACH         reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    WHILE           reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    CONST           reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PRIVATE         reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PUBLIC          reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    PROTECTED       reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    STATIC          reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    VAR             reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)
    IF              reduce using rule 22 (ingreso -> FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA .)


state 247

    (109) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE . sentenciasAnidadas LLAVE_CIERRA
    (96) sentenciasAnidadas -> . instrucciones
    (97) sentenciasAnidadas -> . instrucciones sentenciasAnidadas
    (4) instrucciones -> . asignacion
    (5) instrucciones -> . valor
    (6) instrucciones -> . salida
    (7) instrucciones -> . ingreso
    (8) instrucciones -> . estructuras_datos
    (9) instrucciones -> . estructuras_control
    (10) instrucciones -> . funcion
    (11) instrucciones -> . COMENTARIO_LINEA
    (12) instrucciones -> . COMENTARIO_BLOQUE
    (13) instrucciones -> . operaciones_arit
    (14) instrucciones -> . operaciones_bits
    (31) asignacion -> . decl_variable IGUAL valor FIN_LINEA
    (32) valor -> . datos
    (33) valor -> . NULO
    (17) salida -> . ECHO salidas_posibles FIN_LINEA
    (18) salida -> . PRINT PARENTESIS_ABRE salidas_posibles PARENTESIS_CIERRA FIN_LINEA
    (19) salida -> . PRINT salidas_posibles FIN_LINEA
    (20) ingreso -> . READLINE PARENTESIS_ABRE CADENA PARENTESIS_CIERRA FIN_LINEA
    (21) ingreso -> . FGETS PARENTESIS_ABRE STDIN PARENTESIS_CIERRA FIN_LINEA
    (22) ingreso -> . FSCANF PARENTESIS_ABRE STDIN COMA CADENA COMA SIGNO_DOLAR IDENTIFICADOR PARENTESIS_CIERRA FIN_LINEA
    (42) estructuras_datos -> . pila FIN_LINEA
    (43) estructuras_datos -> . arreglo FIN_LINEA
    (87) estructuras_control -> . for
    (88) estructuras_control -> . foreach
    (89) estructuras_control -> . if_else
    (90) estructuras_control -> . while
    (38) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) funcion -> . FUNCTION IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (77) operaciones_arit -> . salidas_posibles operad_arit salidas_posibles
    (78) operaciones_arit -> . salidas_posibles operad_arit operaciones_arit
    (79) operaciones_bits -> . salidas_posibles operand_bits salidas_posibles
    (80) operaciones_bits -> . NEGACION salidas_posibles
    (29) decl_variable -> . SIGNO_DOLAR IDENTIFICADOR
    (30) decl_variable -> . variable_tipo SIGNO_DOLAR IDENTIFICADOR
    (34) datos -> . ENTERO
    (35) datos -> . FLOTANTE
    (36) datos -> . CADENA
    (37) datos -> . BOOLEANO
    (44) pila -> . NEW STACK PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) arreglo -> . ARRAY PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) arreglo -> . CORCHETE_ABRE CORCHETE_CIERRA
    (47) arreglo -> . ARRAY PARENTESIS_ABRE elementos PARENTESIS_CIERRA
    (48) arreglo -> . CORCHETE_ABRE elementos CORCHETE_CIERRA
    (49) arreglo -> . ARRAY PARENTESIS_ABRE asociacion PARENTESIS_CIERRA
    (50) arreglo -> . CORCHETE_ABRE asociacion CORCHETE_CIERRA
    (95) for -> . FOR PARENTESIS_ABRE asignacion declaracionp declaracion_s PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (108) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (109) foreach -> . FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA
    (111) if_else -> . if_else_inicio if_else_fin
    (112) if_else -> . if_else_inicio if_else_cuerpo if_else_fin
    (110) while -> . WHILE PARENTESIS_ABRE decl_variable operad_logico valor PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (15) salidas_posibles -> . datos
    (16) salidas_posibles -> . decl_variable
    (23) variable_tipo -> . CONST
    (24) variable_tipo -> . PRIVATE
    (25) variable_tipo -> . PUBLIC
    (26) variable_tipo -> . PROTECTED
    (27) variable_tipo -> . STATIC
    (28) variable_tipo -> . VAR
    (113) if_else_inicio -> . IF PARENTESIS_ABRE operaciones_logicas PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA

    COMENTARIO_LINEA shift and go to state 12
    COMENTARIO_BLOQUE shift and go to state 13
    NULO            shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 21
    READLINE        shift and go to state 22
    FGETS           shift and go to state 24
    FSCANF          shift and go to state 25
    FUNCTION        shift and go to state 33
    NEGACION        shift and go to state 34
    SIGNO_DOLAR     shift and go to state 26
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 23
    BOOLEANO        shift and go to state 38
    NEW             shift and go to state 39
    ARRAY           shift and go to state 40
    CORCHETE_ABRE   shift and go to state 41
    FOR             shift and go to state 42
    FOREACH         shift and go to state 43
    WHILE           shift and go to state 45
    CONST           shift and go to state 46
    PRIVATE         shift and go to state 47
    PUBLIC          shift and go to state 48
    PROTECTED       shift and go to state 49
    STATIC          shift and go to state 50
    VAR             shift and go to state 51
    IF              shift and go to state 52

    decl_variable                  shift and go to state 16
    sentenciasAnidadas             shift and go to state 248
    instrucciones                  shift and go to state 234
    asignacion                     shift and go to state 5
    valor                          shift and go to state 6
    salida                         shift and go to state 7
    ingreso                        shift and go to state 8
    estructuras_datos              shift and go to state 9
    estructuras_control            shift and go to state 10
    funcion                        shift and go to state 11
    operaciones_arit               shift and go to state 14
    operaciones_bits               shift and go to state 15
    datos                          shift and go to state 17
    salidas_posibles               shift and go to state 20
    pila                           shift and go to state 27
    arreglo                        shift and go to state 28
    for                            shift and go to state 29
    foreach                        shift and go to state 30
    if_else                        shift and go to state 31
    while                          shift and go to state 32
    variable_tipo                  shift and go to state 35
    if_else_inicio                 shift and go to state 44

state 248

    (109) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 249


state 249

    (109) foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .

    $end            reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_LINEA reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    COMENTARIO_BLOQUE reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NULO            reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ECHO            reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRINT           reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    READLINE        reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FGETS           reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FSCANF          reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FUNCTION        reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEGACION        reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    SIGNO_DOLAR     reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ENTERO          reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FLOTANTE        reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CADENA          reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    BOOLEANO        reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    NEW             reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    ARRAY           reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOR             reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    FOREACH         reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    WHILE           reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    CONST           reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PRIVATE         reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PUBLIC          reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    PROTECTED       reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    STATIC          reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    VAR             reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)
    IF              reduce using rule 109 (foreach -> FOREACH PARENTESIS_ABRE decl_variable AS decl_variable IGUAL MAYOR decl_variable PARENTESIS_CIERRA LLAVE_ABRE sentenciasAnidadas LLAVE_CIERRA .)

